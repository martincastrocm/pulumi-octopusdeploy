# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['AwsOpenidConnectAccountArgs', 'AwsOpenidConnectAccount']

@pulumi.input_type
class AwsOpenidConnectAccountArgs:
    def __init__(__self__, *,
                 role_arn: pulumi.Input[str],
                 account_test_subject_keys: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 environments: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 execution_subject_keys: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 health_subject_keys: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 session_duration: Optional[pulumi.Input[int]] = None,
                 space_id: Optional[pulumi.Input[str]] = None,
                 tenant_tags: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 tenanted_deployment_participation: Optional[pulumi.Input[str]] = None,
                 tenants: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        The set of arguments for constructing a AwsOpenidConnectAccount resource.
        :param pulumi.Input[str] role_arn: The Amazon Resource Name (ARN) of the role that the caller is assuming.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] account_test_subject_keys: Keys to include in an account test. Valid options are: `space`, `account`, `type`
        :param pulumi.Input[str] description: A user-friendly description of this AWS OIDC account.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] environments: A list of environment IDs associated with this resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] execution_subject_keys: Keys to include in a deployment or runbook. Valid options are `space`, `environment`, `project`, `tenant`, `runbook`, `account`, `type`
        :param pulumi.Input[Sequence[pulumi.Input[str]]] health_subject_keys: Keys to include in a health check. Valid options are `space`, `account`, `target`, `type`
        :param pulumi.Input[str] name: The name of this AWS OIDC account.
        :param pulumi.Input[int] session_duration: The duration, in seconds, of the role session.
        :param pulumi.Input[str] space_id: The space ID associated with this resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] tenant_tags: A list of tenant tags associated with this resource.
        :param pulumi.Input[str] tenanted_deployment_participation: The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] tenants: A list of tenant IDs associated with this resource.
        """
        pulumi.set(__self__, "role_arn", role_arn)
        if account_test_subject_keys is not None:
            pulumi.set(__self__, "account_test_subject_keys", account_test_subject_keys)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if environments is not None:
            pulumi.set(__self__, "environments", environments)
        if execution_subject_keys is not None:
            pulumi.set(__self__, "execution_subject_keys", execution_subject_keys)
        if health_subject_keys is not None:
            pulumi.set(__self__, "health_subject_keys", health_subject_keys)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if session_duration is not None:
            pulumi.set(__self__, "session_duration", session_duration)
        if space_id is not None:
            pulumi.set(__self__, "space_id", space_id)
        if tenant_tags is not None:
            pulumi.set(__self__, "tenant_tags", tenant_tags)
        if tenanted_deployment_participation is not None:
            pulumi.set(__self__, "tenanted_deployment_participation", tenanted_deployment_participation)
        if tenants is not None:
            pulumi.set(__self__, "tenants", tenants)

    @property
    @pulumi.getter(name="roleArn")
    def role_arn(self) -> pulumi.Input[str]:
        """
        The Amazon Resource Name (ARN) of the role that the caller is assuming.
        """
        return pulumi.get(self, "role_arn")

    @role_arn.setter
    def role_arn(self, value: pulumi.Input[str]):
        pulumi.set(self, "role_arn", value)

    @property
    @pulumi.getter(name="accountTestSubjectKeys")
    def account_test_subject_keys(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Keys to include in an account test. Valid options are: `space`, `account`, `type`
        """
        return pulumi.get(self, "account_test_subject_keys")

    @account_test_subject_keys.setter
    def account_test_subject_keys(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "account_test_subject_keys", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        A user-friendly description of this AWS OIDC account.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def environments(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A list of environment IDs associated with this resource.
        """
        return pulumi.get(self, "environments")

    @environments.setter
    def environments(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "environments", value)

    @property
    @pulumi.getter(name="executionSubjectKeys")
    def execution_subject_keys(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Keys to include in a deployment or runbook. Valid options are `space`, `environment`, `project`, `tenant`, `runbook`, `account`, `type`
        """
        return pulumi.get(self, "execution_subject_keys")

    @execution_subject_keys.setter
    def execution_subject_keys(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "execution_subject_keys", value)

    @property
    @pulumi.getter(name="healthSubjectKeys")
    def health_subject_keys(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Keys to include in a health check. Valid options are `space`, `account`, `target`, `type`
        """
        return pulumi.get(self, "health_subject_keys")

    @health_subject_keys.setter
    def health_subject_keys(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "health_subject_keys", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of this AWS OIDC account.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="sessionDuration")
    def session_duration(self) -> Optional[pulumi.Input[int]]:
        """
        The duration, in seconds, of the role session.
        """
        return pulumi.get(self, "session_duration")

    @session_duration.setter
    def session_duration(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "session_duration", value)

    @property
    @pulumi.getter(name="spaceId")
    def space_id(self) -> Optional[pulumi.Input[str]]:
        """
        The space ID associated with this resource.
        """
        return pulumi.get(self, "space_id")

    @space_id.setter
    def space_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "space_id", value)

    @property
    @pulumi.getter(name="tenantTags")
    def tenant_tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A list of tenant tags associated with this resource.
        """
        return pulumi.get(self, "tenant_tags")

    @tenant_tags.setter
    def tenant_tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "tenant_tags", value)

    @property
    @pulumi.getter(name="tenantedDeploymentParticipation")
    def tenanted_deployment_participation(self) -> Optional[pulumi.Input[str]]:
        """
        The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
        """
        return pulumi.get(self, "tenanted_deployment_participation")

    @tenanted_deployment_participation.setter
    def tenanted_deployment_participation(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tenanted_deployment_participation", value)

    @property
    @pulumi.getter
    def tenants(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A list of tenant IDs associated with this resource.
        """
        return pulumi.get(self, "tenants")

    @tenants.setter
    def tenants(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "tenants", value)


@pulumi.input_type
class _AwsOpenidConnectAccountState:
    def __init__(__self__, *,
                 account_test_subject_keys: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 environments: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 execution_subject_keys: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 health_subject_keys: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 role_arn: Optional[pulumi.Input[str]] = None,
                 session_duration: Optional[pulumi.Input[int]] = None,
                 space_id: Optional[pulumi.Input[str]] = None,
                 tenant_tags: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 tenanted_deployment_participation: Optional[pulumi.Input[str]] = None,
                 tenants: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        Input properties used for looking up and filtering AwsOpenidConnectAccount resources.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] account_test_subject_keys: Keys to include in an account test. Valid options are: `space`, `account`, `type`
        :param pulumi.Input[str] description: A user-friendly description of this AWS OIDC account.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] environments: A list of environment IDs associated with this resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] execution_subject_keys: Keys to include in a deployment or runbook. Valid options are `space`, `environment`, `project`, `tenant`, `runbook`, `account`, `type`
        :param pulumi.Input[Sequence[pulumi.Input[str]]] health_subject_keys: Keys to include in a health check. Valid options are `space`, `account`, `target`, `type`
        :param pulumi.Input[str] name: The name of this AWS OIDC account.
        :param pulumi.Input[str] role_arn: The Amazon Resource Name (ARN) of the role that the caller is assuming.
        :param pulumi.Input[int] session_duration: The duration, in seconds, of the role session.
        :param pulumi.Input[str] space_id: The space ID associated with this resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] tenant_tags: A list of tenant tags associated with this resource.
        :param pulumi.Input[str] tenanted_deployment_participation: The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] tenants: A list of tenant IDs associated with this resource.
        """
        if account_test_subject_keys is not None:
            pulumi.set(__self__, "account_test_subject_keys", account_test_subject_keys)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if environments is not None:
            pulumi.set(__self__, "environments", environments)
        if execution_subject_keys is not None:
            pulumi.set(__self__, "execution_subject_keys", execution_subject_keys)
        if health_subject_keys is not None:
            pulumi.set(__self__, "health_subject_keys", health_subject_keys)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if role_arn is not None:
            pulumi.set(__self__, "role_arn", role_arn)
        if session_duration is not None:
            pulumi.set(__self__, "session_duration", session_duration)
        if space_id is not None:
            pulumi.set(__self__, "space_id", space_id)
        if tenant_tags is not None:
            pulumi.set(__self__, "tenant_tags", tenant_tags)
        if tenanted_deployment_participation is not None:
            pulumi.set(__self__, "tenanted_deployment_participation", tenanted_deployment_participation)
        if tenants is not None:
            pulumi.set(__self__, "tenants", tenants)

    @property
    @pulumi.getter(name="accountTestSubjectKeys")
    def account_test_subject_keys(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Keys to include in an account test. Valid options are: `space`, `account`, `type`
        """
        return pulumi.get(self, "account_test_subject_keys")

    @account_test_subject_keys.setter
    def account_test_subject_keys(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "account_test_subject_keys", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        A user-friendly description of this AWS OIDC account.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def environments(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A list of environment IDs associated with this resource.
        """
        return pulumi.get(self, "environments")

    @environments.setter
    def environments(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "environments", value)

    @property
    @pulumi.getter(name="executionSubjectKeys")
    def execution_subject_keys(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Keys to include in a deployment or runbook. Valid options are `space`, `environment`, `project`, `tenant`, `runbook`, `account`, `type`
        """
        return pulumi.get(self, "execution_subject_keys")

    @execution_subject_keys.setter
    def execution_subject_keys(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "execution_subject_keys", value)

    @property
    @pulumi.getter(name="healthSubjectKeys")
    def health_subject_keys(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Keys to include in a health check. Valid options are `space`, `account`, `target`, `type`
        """
        return pulumi.get(self, "health_subject_keys")

    @health_subject_keys.setter
    def health_subject_keys(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "health_subject_keys", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of this AWS OIDC account.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="roleArn")
    def role_arn(self) -> Optional[pulumi.Input[str]]:
        """
        The Amazon Resource Name (ARN) of the role that the caller is assuming.
        """
        return pulumi.get(self, "role_arn")

    @role_arn.setter
    def role_arn(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "role_arn", value)

    @property
    @pulumi.getter(name="sessionDuration")
    def session_duration(self) -> Optional[pulumi.Input[int]]:
        """
        The duration, in seconds, of the role session.
        """
        return pulumi.get(self, "session_duration")

    @session_duration.setter
    def session_duration(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "session_duration", value)

    @property
    @pulumi.getter(name="spaceId")
    def space_id(self) -> Optional[pulumi.Input[str]]:
        """
        The space ID associated with this resource.
        """
        return pulumi.get(self, "space_id")

    @space_id.setter
    def space_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "space_id", value)

    @property
    @pulumi.getter(name="tenantTags")
    def tenant_tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A list of tenant tags associated with this resource.
        """
        return pulumi.get(self, "tenant_tags")

    @tenant_tags.setter
    def tenant_tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "tenant_tags", value)

    @property
    @pulumi.getter(name="tenantedDeploymentParticipation")
    def tenanted_deployment_participation(self) -> Optional[pulumi.Input[str]]:
        """
        The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
        """
        return pulumi.get(self, "tenanted_deployment_participation")

    @tenanted_deployment_participation.setter
    def tenanted_deployment_participation(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tenanted_deployment_participation", value)

    @property
    @pulumi.getter
    def tenants(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A list of tenant IDs associated with this resource.
        """
        return pulumi.get(self, "tenants")

    @tenants.setter
    def tenants(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "tenants", value)


class AwsOpenidConnectAccount(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 account_test_subject_keys: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 environments: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 execution_subject_keys: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 health_subject_keys: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 role_arn: Optional[pulumi.Input[str]] = None,
                 session_duration: Optional[pulumi.Input[int]] = None,
                 space_id: Optional[pulumi.Input[str]] = None,
                 tenant_tags: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 tenanted_deployment_participation: Optional[pulumi.Input[str]] = None,
                 tenants: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        """
        This resource manages AWS OIDC accounts in Octopus Deploy.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] account_test_subject_keys: Keys to include in an account test. Valid options are: `space`, `account`, `type`
        :param pulumi.Input[str] description: A user-friendly description of this AWS OIDC account.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] environments: A list of environment IDs associated with this resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] execution_subject_keys: Keys to include in a deployment or runbook. Valid options are `space`, `environment`, `project`, `tenant`, `runbook`, `account`, `type`
        :param pulumi.Input[Sequence[pulumi.Input[str]]] health_subject_keys: Keys to include in a health check. Valid options are `space`, `account`, `target`, `type`
        :param pulumi.Input[str] name: The name of this AWS OIDC account.
        :param pulumi.Input[str] role_arn: The Amazon Resource Name (ARN) of the role that the caller is assuming.
        :param pulumi.Input[int] session_duration: The duration, in seconds, of the role session.
        :param pulumi.Input[str] space_id: The space ID associated with this resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] tenant_tags: A list of tenant tags associated with this resource.
        :param pulumi.Input[str] tenanted_deployment_participation: The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] tenants: A list of tenant IDs associated with this resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: AwsOpenidConnectAccountArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource manages AWS OIDC accounts in Octopus Deploy.

        :param str resource_name: The name of the resource.
        :param AwsOpenidConnectAccountArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AwsOpenidConnectAccountArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 account_test_subject_keys: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 environments: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 execution_subject_keys: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 health_subject_keys: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 role_arn: Optional[pulumi.Input[str]] = None,
                 session_duration: Optional[pulumi.Input[int]] = None,
                 space_id: Optional[pulumi.Input[str]] = None,
                 tenant_tags: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 tenanted_deployment_participation: Optional[pulumi.Input[str]] = None,
                 tenants: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AwsOpenidConnectAccountArgs.__new__(AwsOpenidConnectAccountArgs)

            __props__.__dict__["account_test_subject_keys"] = account_test_subject_keys
            __props__.__dict__["description"] = description
            __props__.__dict__["environments"] = environments
            __props__.__dict__["execution_subject_keys"] = execution_subject_keys
            __props__.__dict__["health_subject_keys"] = health_subject_keys
            __props__.__dict__["name"] = name
            if role_arn is None and not opts.urn:
                raise TypeError("Missing required property 'role_arn'")
            __props__.__dict__["role_arn"] = role_arn
            __props__.__dict__["session_duration"] = session_duration
            __props__.__dict__["space_id"] = space_id
            __props__.__dict__["tenant_tags"] = tenant_tags
            __props__.__dict__["tenanted_deployment_participation"] = tenanted_deployment_participation
            __props__.__dict__["tenants"] = tenants
        super(AwsOpenidConnectAccount, __self__).__init__(
            'octopusdeploy:index/awsOpenidConnectAccount:AwsOpenidConnectAccount',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            account_test_subject_keys: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            description: Optional[pulumi.Input[str]] = None,
            environments: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            execution_subject_keys: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            health_subject_keys: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            name: Optional[pulumi.Input[str]] = None,
            role_arn: Optional[pulumi.Input[str]] = None,
            session_duration: Optional[pulumi.Input[int]] = None,
            space_id: Optional[pulumi.Input[str]] = None,
            tenant_tags: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            tenanted_deployment_participation: Optional[pulumi.Input[str]] = None,
            tenants: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None) -> 'AwsOpenidConnectAccount':
        """
        Get an existing AwsOpenidConnectAccount resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] account_test_subject_keys: Keys to include in an account test. Valid options are: `space`, `account`, `type`
        :param pulumi.Input[str] description: A user-friendly description of this AWS OIDC account.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] environments: A list of environment IDs associated with this resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] execution_subject_keys: Keys to include in a deployment or runbook. Valid options are `space`, `environment`, `project`, `tenant`, `runbook`, `account`, `type`
        :param pulumi.Input[Sequence[pulumi.Input[str]]] health_subject_keys: Keys to include in a health check. Valid options are `space`, `account`, `target`, `type`
        :param pulumi.Input[str] name: The name of this AWS OIDC account.
        :param pulumi.Input[str] role_arn: The Amazon Resource Name (ARN) of the role that the caller is assuming.
        :param pulumi.Input[int] session_duration: The duration, in seconds, of the role session.
        :param pulumi.Input[str] space_id: The space ID associated with this resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] tenant_tags: A list of tenant tags associated with this resource.
        :param pulumi.Input[str] tenanted_deployment_participation: The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] tenants: A list of tenant IDs associated with this resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _AwsOpenidConnectAccountState.__new__(_AwsOpenidConnectAccountState)

        __props__.__dict__["account_test_subject_keys"] = account_test_subject_keys
        __props__.__dict__["description"] = description
        __props__.__dict__["environments"] = environments
        __props__.__dict__["execution_subject_keys"] = execution_subject_keys
        __props__.__dict__["health_subject_keys"] = health_subject_keys
        __props__.__dict__["name"] = name
        __props__.__dict__["role_arn"] = role_arn
        __props__.__dict__["session_duration"] = session_duration
        __props__.__dict__["space_id"] = space_id
        __props__.__dict__["tenant_tags"] = tenant_tags
        __props__.__dict__["tenanted_deployment_participation"] = tenanted_deployment_participation
        __props__.__dict__["tenants"] = tenants
        return AwsOpenidConnectAccount(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="accountTestSubjectKeys")
    def account_test_subject_keys(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        Keys to include in an account test. Valid options are: `space`, `account`, `type`
        """
        return pulumi.get(self, "account_test_subject_keys")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        A user-friendly description of this AWS OIDC account.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def environments(self) -> pulumi.Output[Sequence[str]]:
        """
        A list of environment IDs associated with this resource.
        """
        return pulumi.get(self, "environments")

    @property
    @pulumi.getter(name="executionSubjectKeys")
    def execution_subject_keys(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        Keys to include in a deployment or runbook. Valid options are `space`, `environment`, `project`, `tenant`, `runbook`, `account`, `type`
        """
        return pulumi.get(self, "execution_subject_keys")

    @property
    @pulumi.getter(name="healthSubjectKeys")
    def health_subject_keys(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        Keys to include in a health check. Valid options are `space`, `account`, `target`, `type`
        """
        return pulumi.get(self, "health_subject_keys")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The name of this AWS OIDC account.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="roleArn")
    def role_arn(self) -> pulumi.Output[str]:
        """
        The Amazon Resource Name (ARN) of the role that the caller is assuming.
        """
        return pulumi.get(self, "role_arn")

    @property
    @pulumi.getter(name="sessionDuration")
    def session_duration(self) -> pulumi.Output[Optional[int]]:
        """
        The duration, in seconds, of the role session.
        """
        return pulumi.get(self, "session_duration")

    @property
    @pulumi.getter(name="spaceId")
    def space_id(self) -> pulumi.Output[str]:
        """
        The space ID associated with this resource.
        """
        return pulumi.get(self, "space_id")

    @property
    @pulumi.getter(name="tenantTags")
    def tenant_tags(self) -> pulumi.Output[Sequence[str]]:
        """
        A list of tenant tags associated with this resource.
        """
        return pulumi.get(self, "tenant_tags")

    @property
    @pulumi.getter(name="tenantedDeploymentParticipation")
    def tenanted_deployment_participation(self) -> pulumi.Output[str]:
        """
        The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
        """
        return pulumi.get(self, "tenanted_deployment_participation")

    @property
    @pulumi.getter
    def tenants(self) -> pulumi.Output[Sequence[str]]:
        """
        A list of tenant IDs associated with this resource.
        """
        return pulumi.get(self, "tenants")

