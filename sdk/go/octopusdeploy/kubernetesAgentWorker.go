// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package octopusdeploy

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource manages Kubernetes agent workers in Octopus Deploy.
//
// ## Import
//
// ```sh
// $ pulumi import octopusdeploy:index/kubernetesAgentWorker:KubernetesAgentWorker [options] octopusdeploy_kubernetes_agent_worker.<name> <machine-id>
// ```
type KubernetesAgentWorker struct {
	pulumi.CustomResourceState

	// Name of the Helm release that the agent belongs to.
	AgentHelmReleaseName pulumi.StringOutput `pulumi:"agentHelmReleaseName"`
	// Name of the Kubernetes namespace where the agent is installed.
	AgentKubernetesNamespace pulumi.StringOutput `pulumi:"agentKubernetesNamespace"`
	// Current Tentacle version of the agent
	AgentTentacleVersion pulumi.StringOutput `pulumi:"agentTentacleVersion"`
	// Current upgrade availability status of the agent. One of 'NoUpgrades', 'UpgradeAvailable', 'UpgradeSuggested', 'UpgradeRequired'
	AgentUpgradeStatus pulumi.StringOutput `pulumi:"agentUpgradeStatus"`
	// Current Helm chart version of the agent.
	AgentVersion pulumi.StringOutput `pulumi:"agentVersion"`
	// The communication mode used by the Kubernetes agent to communicate with Octopus Server. Currently, the only supported value is 'Polling'.
	CommunicationMode pulumi.StringPtrOutput `pulumi:"communicationMode"`
	// Whether the Kubernetes agent is disabled. If the agent is disabled, it will not be included in any deployments.
	IsDisabled pulumi.BoolPtrOutput `pulumi:"isDisabled"`
	// Optional ID of the machine policy that the Kubernetes agent will use. If not provided the default machine policy will be used.
	MachinePolicyId pulumi.StringOutput `pulumi:"machinePolicyId"`
	// The name of this resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The space ID associated with this resource.
	SpaceId pulumi.StringOutput `pulumi:"spaceId"`
	// The thumbprint of the Kubernetes agent's certificate used by server to verify the identity of the agent. This is the same thumbprint that was used when installing the agent.
	Thumbprint pulumi.StringOutput `pulumi:"thumbprint"`
	// If enabled the Kubernetes agent will not automatically upgrade and will stay on the currently installed version, even if the associated machine policy is configured to automatically upgrade.
	UpgradeLocked pulumi.BoolPtrOutput `pulumi:"upgradeLocked"`
	// The URI of the Kubernetes agent's used by the server to queue messages. This is the same subscription uri that was used when installing the agent.
	Uri pulumi.StringOutput `pulumi:"uri"`
	// A list of worker pool Ids specifying the pools in which this worker belongs
	WorkerPoolIds pulumi.StringArrayOutput `pulumi:"workerPoolIds"`
}

// NewKubernetesAgentWorker registers a new resource with the given unique name, arguments, and options.
func NewKubernetesAgentWorker(ctx *pulumi.Context,
	name string, args *KubernetesAgentWorkerArgs, opts ...pulumi.ResourceOption) (*KubernetesAgentWorker, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Thumbprint == nil {
		return nil, errors.New("invalid value for required argument 'Thumbprint'")
	}
	if args.Uri == nil {
		return nil, errors.New("invalid value for required argument 'Uri'")
	}
	if args.WorkerPoolIds == nil {
		return nil, errors.New("invalid value for required argument 'WorkerPoolIds'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KubernetesAgentWorker
	err := ctx.RegisterResource("octopusdeploy:index/kubernetesAgentWorker:KubernetesAgentWorker", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKubernetesAgentWorker gets an existing KubernetesAgentWorker resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKubernetesAgentWorker(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KubernetesAgentWorkerState, opts ...pulumi.ResourceOption) (*KubernetesAgentWorker, error) {
	var resource KubernetesAgentWorker
	err := ctx.ReadResource("octopusdeploy:index/kubernetesAgentWorker:KubernetesAgentWorker", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KubernetesAgentWorker resources.
type kubernetesAgentWorkerState struct {
	// Name of the Helm release that the agent belongs to.
	AgentHelmReleaseName *string `pulumi:"agentHelmReleaseName"`
	// Name of the Kubernetes namespace where the agent is installed.
	AgentKubernetesNamespace *string `pulumi:"agentKubernetesNamespace"`
	// Current Tentacle version of the agent
	AgentTentacleVersion *string `pulumi:"agentTentacleVersion"`
	// Current upgrade availability status of the agent. One of 'NoUpgrades', 'UpgradeAvailable', 'UpgradeSuggested', 'UpgradeRequired'
	AgentUpgradeStatus *string `pulumi:"agentUpgradeStatus"`
	// Current Helm chart version of the agent.
	AgentVersion *string `pulumi:"agentVersion"`
	// The communication mode used by the Kubernetes agent to communicate with Octopus Server. Currently, the only supported value is 'Polling'.
	CommunicationMode *string `pulumi:"communicationMode"`
	// Whether the Kubernetes agent is disabled. If the agent is disabled, it will not be included in any deployments.
	IsDisabled *bool `pulumi:"isDisabled"`
	// Optional ID of the machine policy that the Kubernetes agent will use. If not provided the default machine policy will be used.
	MachinePolicyId *string `pulumi:"machinePolicyId"`
	// The name of this resource.
	Name *string `pulumi:"name"`
	// The space ID associated with this resource.
	SpaceId *string `pulumi:"spaceId"`
	// The thumbprint of the Kubernetes agent's certificate used by server to verify the identity of the agent. This is the same thumbprint that was used when installing the agent.
	Thumbprint *string `pulumi:"thumbprint"`
	// If enabled the Kubernetes agent will not automatically upgrade and will stay on the currently installed version, even if the associated machine policy is configured to automatically upgrade.
	UpgradeLocked *bool `pulumi:"upgradeLocked"`
	// The URI of the Kubernetes agent's used by the server to queue messages. This is the same subscription uri that was used when installing the agent.
	Uri *string `pulumi:"uri"`
	// A list of worker pool Ids specifying the pools in which this worker belongs
	WorkerPoolIds []string `pulumi:"workerPoolIds"`
}

type KubernetesAgentWorkerState struct {
	// Name of the Helm release that the agent belongs to.
	AgentHelmReleaseName pulumi.StringPtrInput
	// Name of the Kubernetes namespace where the agent is installed.
	AgentKubernetesNamespace pulumi.StringPtrInput
	// Current Tentacle version of the agent
	AgentTentacleVersion pulumi.StringPtrInput
	// Current upgrade availability status of the agent. One of 'NoUpgrades', 'UpgradeAvailable', 'UpgradeSuggested', 'UpgradeRequired'
	AgentUpgradeStatus pulumi.StringPtrInput
	// Current Helm chart version of the agent.
	AgentVersion pulumi.StringPtrInput
	// The communication mode used by the Kubernetes agent to communicate with Octopus Server. Currently, the only supported value is 'Polling'.
	CommunicationMode pulumi.StringPtrInput
	// Whether the Kubernetes agent is disabled. If the agent is disabled, it will not be included in any deployments.
	IsDisabled pulumi.BoolPtrInput
	// Optional ID of the machine policy that the Kubernetes agent will use. If not provided the default machine policy will be used.
	MachinePolicyId pulumi.StringPtrInput
	// The name of this resource.
	Name pulumi.StringPtrInput
	// The space ID associated with this resource.
	SpaceId pulumi.StringPtrInput
	// The thumbprint of the Kubernetes agent's certificate used by server to verify the identity of the agent. This is the same thumbprint that was used when installing the agent.
	Thumbprint pulumi.StringPtrInput
	// If enabled the Kubernetes agent will not automatically upgrade and will stay on the currently installed version, even if the associated machine policy is configured to automatically upgrade.
	UpgradeLocked pulumi.BoolPtrInput
	// The URI of the Kubernetes agent's used by the server to queue messages. This is the same subscription uri that was used when installing the agent.
	Uri pulumi.StringPtrInput
	// A list of worker pool Ids specifying the pools in which this worker belongs
	WorkerPoolIds pulumi.StringArrayInput
}

func (KubernetesAgentWorkerState) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesAgentWorkerState)(nil)).Elem()
}

type kubernetesAgentWorkerArgs struct {
	// The communication mode used by the Kubernetes agent to communicate with Octopus Server. Currently, the only supported value is 'Polling'.
	CommunicationMode *string `pulumi:"communicationMode"`
	// Whether the Kubernetes agent is disabled. If the agent is disabled, it will not be included in any deployments.
	IsDisabled *bool `pulumi:"isDisabled"`
	// Optional ID of the machine policy that the Kubernetes agent will use. If not provided the default machine policy will be used.
	MachinePolicyId *string `pulumi:"machinePolicyId"`
	// The name of this resource.
	Name *string `pulumi:"name"`
	// The space ID associated with this resource.
	SpaceId *string `pulumi:"spaceId"`
	// The thumbprint of the Kubernetes agent's certificate used by server to verify the identity of the agent. This is the same thumbprint that was used when installing the agent.
	Thumbprint string `pulumi:"thumbprint"`
	// If enabled the Kubernetes agent will not automatically upgrade and will stay on the currently installed version, even if the associated machine policy is configured to automatically upgrade.
	UpgradeLocked *bool `pulumi:"upgradeLocked"`
	// The URI of the Kubernetes agent's used by the server to queue messages. This is the same subscription uri that was used when installing the agent.
	Uri string `pulumi:"uri"`
	// A list of worker pool Ids specifying the pools in which this worker belongs
	WorkerPoolIds []string `pulumi:"workerPoolIds"`
}

// The set of arguments for constructing a KubernetesAgentWorker resource.
type KubernetesAgentWorkerArgs struct {
	// The communication mode used by the Kubernetes agent to communicate with Octopus Server. Currently, the only supported value is 'Polling'.
	CommunicationMode pulumi.StringPtrInput
	// Whether the Kubernetes agent is disabled. If the agent is disabled, it will not be included in any deployments.
	IsDisabled pulumi.BoolPtrInput
	// Optional ID of the machine policy that the Kubernetes agent will use. If not provided the default machine policy will be used.
	MachinePolicyId pulumi.StringPtrInput
	// The name of this resource.
	Name pulumi.StringPtrInput
	// The space ID associated with this resource.
	SpaceId pulumi.StringPtrInput
	// The thumbprint of the Kubernetes agent's certificate used by server to verify the identity of the agent. This is the same thumbprint that was used when installing the agent.
	Thumbprint pulumi.StringInput
	// If enabled the Kubernetes agent will not automatically upgrade and will stay on the currently installed version, even if the associated machine policy is configured to automatically upgrade.
	UpgradeLocked pulumi.BoolPtrInput
	// The URI of the Kubernetes agent's used by the server to queue messages. This is the same subscription uri that was used when installing the agent.
	Uri pulumi.StringInput
	// A list of worker pool Ids specifying the pools in which this worker belongs
	WorkerPoolIds pulumi.StringArrayInput
}

func (KubernetesAgentWorkerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesAgentWorkerArgs)(nil)).Elem()
}

type KubernetesAgentWorkerInput interface {
	pulumi.Input

	ToKubernetesAgentWorkerOutput() KubernetesAgentWorkerOutput
	ToKubernetesAgentWorkerOutputWithContext(ctx context.Context) KubernetesAgentWorkerOutput
}

func (*KubernetesAgentWorker) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesAgentWorker)(nil)).Elem()
}

func (i *KubernetesAgentWorker) ToKubernetesAgentWorkerOutput() KubernetesAgentWorkerOutput {
	return i.ToKubernetesAgentWorkerOutputWithContext(context.Background())
}

func (i *KubernetesAgentWorker) ToKubernetesAgentWorkerOutputWithContext(ctx context.Context) KubernetesAgentWorkerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesAgentWorkerOutput)
}

// KubernetesAgentWorkerArrayInput is an input type that accepts KubernetesAgentWorkerArray and KubernetesAgentWorkerArrayOutput values.
// You can construct a concrete instance of `KubernetesAgentWorkerArrayInput` via:
//
//	KubernetesAgentWorkerArray{ KubernetesAgentWorkerArgs{...} }
type KubernetesAgentWorkerArrayInput interface {
	pulumi.Input

	ToKubernetesAgentWorkerArrayOutput() KubernetesAgentWorkerArrayOutput
	ToKubernetesAgentWorkerArrayOutputWithContext(context.Context) KubernetesAgentWorkerArrayOutput
}

type KubernetesAgentWorkerArray []KubernetesAgentWorkerInput

func (KubernetesAgentWorkerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubernetesAgentWorker)(nil)).Elem()
}

func (i KubernetesAgentWorkerArray) ToKubernetesAgentWorkerArrayOutput() KubernetesAgentWorkerArrayOutput {
	return i.ToKubernetesAgentWorkerArrayOutputWithContext(context.Background())
}

func (i KubernetesAgentWorkerArray) ToKubernetesAgentWorkerArrayOutputWithContext(ctx context.Context) KubernetesAgentWorkerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesAgentWorkerArrayOutput)
}

// KubernetesAgentWorkerMapInput is an input type that accepts KubernetesAgentWorkerMap and KubernetesAgentWorkerMapOutput values.
// You can construct a concrete instance of `KubernetesAgentWorkerMapInput` via:
//
//	KubernetesAgentWorkerMap{ "key": KubernetesAgentWorkerArgs{...} }
type KubernetesAgentWorkerMapInput interface {
	pulumi.Input

	ToKubernetesAgentWorkerMapOutput() KubernetesAgentWorkerMapOutput
	ToKubernetesAgentWorkerMapOutputWithContext(context.Context) KubernetesAgentWorkerMapOutput
}

type KubernetesAgentWorkerMap map[string]KubernetesAgentWorkerInput

func (KubernetesAgentWorkerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubernetesAgentWorker)(nil)).Elem()
}

func (i KubernetesAgentWorkerMap) ToKubernetesAgentWorkerMapOutput() KubernetesAgentWorkerMapOutput {
	return i.ToKubernetesAgentWorkerMapOutputWithContext(context.Background())
}

func (i KubernetesAgentWorkerMap) ToKubernetesAgentWorkerMapOutputWithContext(ctx context.Context) KubernetesAgentWorkerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesAgentWorkerMapOutput)
}

type KubernetesAgentWorkerOutput struct{ *pulumi.OutputState }

func (KubernetesAgentWorkerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesAgentWorker)(nil)).Elem()
}

func (o KubernetesAgentWorkerOutput) ToKubernetesAgentWorkerOutput() KubernetesAgentWorkerOutput {
	return o
}

func (o KubernetesAgentWorkerOutput) ToKubernetesAgentWorkerOutputWithContext(ctx context.Context) KubernetesAgentWorkerOutput {
	return o
}

// Name of the Helm release that the agent belongs to.
func (o KubernetesAgentWorkerOutput) AgentHelmReleaseName() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesAgentWorker) pulumi.StringOutput { return v.AgentHelmReleaseName }).(pulumi.StringOutput)
}

// Name of the Kubernetes namespace where the agent is installed.
func (o KubernetesAgentWorkerOutput) AgentKubernetesNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesAgentWorker) pulumi.StringOutput { return v.AgentKubernetesNamespace }).(pulumi.StringOutput)
}

// Current Tentacle version of the agent
func (o KubernetesAgentWorkerOutput) AgentTentacleVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesAgentWorker) pulumi.StringOutput { return v.AgentTentacleVersion }).(pulumi.StringOutput)
}

// Current upgrade availability status of the agent. One of 'NoUpgrades', 'UpgradeAvailable', 'UpgradeSuggested', 'UpgradeRequired'
func (o KubernetesAgentWorkerOutput) AgentUpgradeStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesAgentWorker) pulumi.StringOutput { return v.AgentUpgradeStatus }).(pulumi.StringOutput)
}

// Current Helm chart version of the agent.
func (o KubernetesAgentWorkerOutput) AgentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesAgentWorker) pulumi.StringOutput { return v.AgentVersion }).(pulumi.StringOutput)
}

// The communication mode used by the Kubernetes agent to communicate with Octopus Server. Currently, the only supported value is 'Polling'.
func (o KubernetesAgentWorkerOutput) CommunicationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesAgentWorker) pulumi.StringPtrOutput { return v.CommunicationMode }).(pulumi.StringPtrOutput)
}

// Whether the Kubernetes agent is disabled. If the agent is disabled, it will not be included in any deployments.
func (o KubernetesAgentWorkerOutput) IsDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesAgentWorker) pulumi.BoolPtrOutput { return v.IsDisabled }).(pulumi.BoolPtrOutput)
}

// Optional ID of the machine policy that the Kubernetes agent will use. If not provided the default machine policy will be used.
func (o KubernetesAgentWorkerOutput) MachinePolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesAgentWorker) pulumi.StringOutput { return v.MachinePolicyId }).(pulumi.StringOutput)
}

// The name of this resource.
func (o KubernetesAgentWorkerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesAgentWorker) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The space ID associated with this resource.
func (o KubernetesAgentWorkerOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesAgentWorker) pulumi.StringOutput { return v.SpaceId }).(pulumi.StringOutput)
}

// The thumbprint of the Kubernetes agent's certificate used by server to verify the identity of the agent. This is the same thumbprint that was used when installing the agent.
func (o KubernetesAgentWorkerOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesAgentWorker) pulumi.StringOutput { return v.Thumbprint }).(pulumi.StringOutput)
}

// If enabled the Kubernetes agent will not automatically upgrade and will stay on the currently installed version, even if the associated machine policy is configured to automatically upgrade.
func (o KubernetesAgentWorkerOutput) UpgradeLocked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesAgentWorker) pulumi.BoolPtrOutput { return v.UpgradeLocked }).(pulumi.BoolPtrOutput)
}

// The URI of the Kubernetes agent's used by the server to queue messages. This is the same subscription uri that was used when installing the agent.
func (o KubernetesAgentWorkerOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesAgentWorker) pulumi.StringOutput { return v.Uri }).(pulumi.StringOutput)
}

// A list of worker pool Ids specifying the pools in which this worker belongs
func (o KubernetesAgentWorkerOutput) WorkerPoolIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesAgentWorker) pulumi.StringArrayOutput { return v.WorkerPoolIds }).(pulumi.StringArrayOutput)
}

type KubernetesAgentWorkerArrayOutput struct{ *pulumi.OutputState }

func (KubernetesAgentWorkerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubernetesAgentWorker)(nil)).Elem()
}

func (o KubernetesAgentWorkerArrayOutput) ToKubernetesAgentWorkerArrayOutput() KubernetesAgentWorkerArrayOutput {
	return o
}

func (o KubernetesAgentWorkerArrayOutput) ToKubernetesAgentWorkerArrayOutputWithContext(ctx context.Context) KubernetesAgentWorkerArrayOutput {
	return o
}

func (o KubernetesAgentWorkerArrayOutput) Index(i pulumi.IntInput) KubernetesAgentWorkerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KubernetesAgentWorker {
		return vs[0].([]*KubernetesAgentWorker)[vs[1].(int)]
	}).(KubernetesAgentWorkerOutput)
}

type KubernetesAgentWorkerMapOutput struct{ *pulumi.OutputState }

func (KubernetesAgentWorkerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubernetesAgentWorker)(nil)).Elem()
}

func (o KubernetesAgentWorkerMapOutput) ToKubernetesAgentWorkerMapOutput() KubernetesAgentWorkerMapOutput {
	return o
}

func (o KubernetesAgentWorkerMapOutput) ToKubernetesAgentWorkerMapOutputWithContext(ctx context.Context) KubernetesAgentWorkerMapOutput {
	return o
}

func (o KubernetesAgentWorkerMapOutput) MapIndex(k pulumi.StringInput) KubernetesAgentWorkerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KubernetesAgentWorker {
		return vs[0].(map[string]*KubernetesAgentWorker)[vs[1].(string)]
	}).(KubernetesAgentWorkerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesAgentWorkerInput)(nil)).Elem(), &KubernetesAgentWorker{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesAgentWorkerArrayInput)(nil)).Elem(), KubernetesAgentWorkerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesAgentWorkerMapInput)(nil)).Elem(), KubernetesAgentWorkerMap{})
	pulumi.RegisterOutputType(KubernetesAgentWorkerOutput{})
	pulumi.RegisterOutputType(KubernetesAgentWorkerArrayOutput{})
	pulumi.RegisterOutputType(KubernetesAgentWorkerMapOutput{})
}
