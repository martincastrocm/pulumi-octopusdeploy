// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package octopusdeploy

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource manages a Artifactory Generic feed in Octopus Deploy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := octopusdeploy.NewArtifactoryGenericFeed(ctx, "example", &octopusdeploy.ArtifactoryGenericFeedArgs{
//				FeedUri:     pulumi.String("https://example.jfrog.io"),
//				LayoutRegex: pulumi.String("this is regex"),
//				Password:    pulumi.String("test-password"),
//				Repository:  pulumi.String("repo"),
//				Username:    pulumi.String("test-username"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import octopusdeploy:index/artifactoryGenericFeed:ArtifactoryGenericFeed [options] octopusdeploy_artifactory_generic_feed.<name> <feed-id>
// ```
type ArtifactoryGenericFeed struct {
	pulumi.CustomResourceState

	FeedUri     pulumi.StringOutput    `pulumi:"feedUri"`
	LayoutRegex pulumi.StringPtrOutput `pulumi:"layoutRegex"`
	// The name of this resource.
	Name                              pulumi.StringOutput      `pulumi:"name"`
	PackageAcquisitionLocationOptions pulumi.StringArrayOutput `pulumi:"packageAcquisitionLocationOptions"`
	// The password associated with this resource.
	Password   pulumi.StringPtrOutput `pulumi:"password"`
	Repository pulumi.StringOutput    `pulumi:"repository"`
	// The space ID associated with this artifactory generic feed.
	SpaceId pulumi.StringOutput `pulumi:"spaceId"`
	// The username associated with this resource.
	Username pulumi.StringPtrOutput `pulumi:"username"`
}

// NewArtifactoryGenericFeed registers a new resource with the given unique name, arguments, and options.
func NewArtifactoryGenericFeed(ctx *pulumi.Context,
	name string, args *ArtifactoryGenericFeedArgs, opts ...pulumi.ResourceOption) (*ArtifactoryGenericFeed, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeedUri == nil {
		return nil, errors.New("invalid value for required argument 'FeedUri'")
	}
	if args.Repository == nil {
		return nil, errors.New("invalid value for required argument 'Repository'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	if args.Username != nil {
		args.Username = pulumi.ToSecret(args.Username).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
		"username",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ArtifactoryGenericFeed
	err := ctx.RegisterResource("octopusdeploy:index/artifactoryGenericFeed:ArtifactoryGenericFeed", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetArtifactoryGenericFeed gets an existing ArtifactoryGenericFeed resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetArtifactoryGenericFeed(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ArtifactoryGenericFeedState, opts ...pulumi.ResourceOption) (*ArtifactoryGenericFeed, error) {
	var resource ArtifactoryGenericFeed
	err := ctx.ReadResource("octopusdeploy:index/artifactoryGenericFeed:ArtifactoryGenericFeed", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ArtifactoryGenericFeed resources.
type artifactoryGenericFeedState struct {
	FeedUri     *string `pulumi:"feedUri"`
	LayoutRegex *string `pulumi:"layoutRegex"`
	// The name of this resource.
	Name                              *string  `pulumi:"name"`
	PackageAcquisitionLocationOptions []string `pulumi:"packageAcquisitionLocationOptions"`
	// The password associated with this resource.
	Password   *string `pulumi:"password"`
	Repository *string `pulumi:"repository"`
	// The space ID associated with this artifactory generic feed.
	SpaceId *string `pulumi:"spaceId"`
	// The username associated with this resource.
	Username *string `pulumi:"username"`
}

type ArtifactoryGenericFeedState struct {
	FeedUri     pulumi.StringPtrInput
	LayoutRegex pulumi.StringPtrInput
	// The name of this resource.
	Name                              pulumi.StringPtrInput
	PackageAcquisitionLocationOptions pulumi.StringArrayInput
	// The password associated with this resource.
	Password   pulumi.StringPtrInput
	Repository pulumi.StringPtrInput
	// The space ID associated with this artifactory generic feed.
	SpaceId pulumi.StringPtrInput
	// The username associated with this resource.
	Username pulumi.StringPtrInput
}

func (ArtifactoryGenericFeedState) ElementType() reflect.Type {
	return reflect.TypeOf((*artifactoryGenericFeedState)(nil)).Elem()
}

type artifactoryGenericFeedArgs struct {
	FeedUri     string  `pulumi:"feedUri"`
	LayoutRegex *string `pulumi:"layoutRegex"`
	// The name of this resource.
	Name                              *string  `pulumi:"name"`
	PackageAcquisitionLocationOptions []string `pulumi:"packageAcquisitionLocationOptions"`
	// The password associated with this resource.
	Password   *string `pulumi:"password"`
	Repository string  `pulumi:"repository"`
	// The space ID associated with this artifactory generic feed.
	SpaceId *string `pulumi:"spaceId"`
	// The username associated with this resource.
	Username *string `pulumi:"username"`
}

// The set of arguments for constructing a ArtifactoryGenericFeed resource.
type ArtifactoryGenericFeedArgs struct {
	FeedUri     pulumi.StringInput
	LayoutRegex pulumi.StringPtrInput
	// The name of this resource.
	Name                              pulumi.StringPtrInput
	PackageAcquisitionLocationOptions pulumi.StringArrayInput
	// The password associated with this resource.
	Password   pulumi.StringPtrInput
	Repository pulumi.StringInput
	// The space ID associated with this artifactory generic feed.
	SpaceId pulumi.StringPtrInput
	// The username associated with this resource.
	Username pulumi.StringPtrInput
}

func (ArtifactoryGenericFeedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*artifactoryGenericFeedArgs)(nil)).Elem()
}

type ArtifactoryGenericFeedInput interface {
	pulumi.Input

	ToArtifactoryGenericFeedOutput() ArtifactoryGenericFeedOutput
	ToArtifactoryGenericFeedOutputWithContext(ctx context.Context) ArtifactoryGenericFeedOutput
}

func (*ArtifactoryGenericFeed) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactoryGenericFeed)(nil)).Elem()
}

func (i *ArtifactoryGenericFeed) ToArtifactoryGenericFeedOutput() ArtifactoryGenericFeedOutput {
	return i.ToArtifactoryGenericFeedOutputWithContext(context.Background())
}

func (i *ArtifactoryGenericFeed) ToArtifactoryGenericFeedOutputWithContext(ctx context.Context) ArtifactoryGenericFeedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactoryGenericFeedOutput)
}

// ArtifactoryGenericFeedArrayInput is an input type that accepts ArtifactoryGenericFeedArray and ArtifactoryGenericFeedArrayOutput values.
// You can construct a concrete instance of `ArtifactoryGenericFeedArrayInput` via:
//
//	ArtifactoryGenericFeedArray{ ArtifactoryGenericFeedArgs{...} }
type ArtifactoryGenericFeedArrayInput interface {
	pulumi.Input

	ToArtifactoryGenericFeedArrayOutput() ArtifactoryGenericFeedArrayOutput
	ToArtifactoryGenericFeedArrayOutputWithContext(context.Context) ArtifactoryGenericFeedArrayOutput
}

type ArtifactoryGenericFeedArray []ArtifactoryGenericFeedInput

func (ArtifactoryGenericFeedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ArtifactoryGenericFeed)(nil)).Elem()
}

func (i ArtifactoryGenericFeedArray) ToArtifactoryGenericFeedArrayOutput() ArtifactoryGenericFeedArrayOutput {
	return i.ToArtifactoryGenericFeedArrayOutputWithContext(context.Background())
}

func (i ArtifactoryGenericFeedArray) ToArtifactoryGenericFeedArrayOutputWithContext(ctx context.Context) ArtifactoryGenericFeedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactoryGenericFeedArrayOutput)
}

// ArtifactoryGenericFeedMapInput is an input type that accepts ArtifactoryGenericFeedMap and ArtifactoryGenericFeedMapOutput values.
// You can construct a concrete instance of `ArtifactoryGenericFeedMapInput` via:
//
//	ArtifactoryGenericFeedMap{ "key": ArtifactoryGenericFeedArgs{...} }
type ArtifactoryGenericFeedMapInput interface {
	pulumi.Input

	ToArtifactoryGenericFeedMapOutput() ArtifactoryGenericFeedMapOutput
	ToArtifactoryGenericFeedMapOutputWithContext(context.Context) ArtifactoryGenericFeedMapOutput
}

type ArtifactoryGenericFeedMap map[string]ArtifactoryGenericFeedInput

func (ArtifactoryGenericFeedMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ArtifactoryGenericFeed)(nil)).Elem()
}

func (i ArtifactoryGenericFeedMap) ToArtifactoryGenericFeedMapOutput() ArtifactoryGenericFeedMapOutput {
	return i.ToArtifactoryGenericFeedMapOutputWithContext(context.Background())
}

func (i ArtifactoryGenericFeedMap) ToArtifactoryGenericFeedMapOutputWithContext(ctx context.Context) ArtifactoryGenericFeedMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactoryGenericFeedMapOutput)
}

type ArtifactoryGenericFeedOutput struct{ *pulumi.OutputState }

func (ArtifactoryGenericFeedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactoryGenericFeed)(nil)).Elem()
}

func (o ArtifactoryGenericFeedOutput) ToArtifactoryGenericFeedOutput() ArtifactoryGenericFeedOutput {
	return o
}

func (o ArtifactoryGenericFeedOutput) ToArtifactoryGenericFeedOutputWithContext(ctx context.Context) ArtifactoryGenericFeedOutput {
	return o
}

func (o ArtifactoryGenericFeedOutput) FeedUri() pulumi.StringOutput {
	return o.ApplyT(func(v *ArtifactoryGenericFeed) pulumi.StringOutput { return v.FeedUri }).(pulumi.StringOutput)
}

func (o ArtifactoryGenericFeedOutput) LayoutRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArtifactoryGenericFeed) pulumi.StringPtrOutput { return v.LayoutRegex }).(pulumi.StringPtrOutput)
}

// The name of this resource.
func (o ArtifactoryGenericFeedOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ArtifactoryGenericFeed) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ArtifactoryGenericFeedOutput) PackageAcquisitionLocationOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ArtifactoryGenericFeed) pulumi.StringArrayOutput { return v.PackageAcquisitionLocationOptions }).(pulumi.StringArrayOutput)
}

// The password associated with this resource.
func (o ArtifactoryGenericFeedOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArtifactoryGenericFeed) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ArtifactoryGenericFeedOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v *ArtifactoryGenericFeed) pulumi.StringOutput { return v.Repository }).(pulumi.StringOutput)
}

// The space ID associated with this artifactory generic feed.
func (o ArtifactoryGenericFeedOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ArtifactoryGenericFeed) pulumi.StringOutput { return v.SpaceId }).(pulumi.StringOutput)
}

// The username associated with this resource.
func (o ArtifactoryGenericFeedOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArtifactoryGenericFeed) pulumi.StringPtrOutput { return v.Username }).(pulumi.StringPtrOutput)
}

type ArtifactoryGenericFeedArrayOutput struct{ *pulumi.OutputState }

func (ArtifactoryGenericFeedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ArtifactoryGenericFeed)(nil)).Elem()
}

func (o ArtifactoryGenericFeedArrayOutput) ToArtifactoryGenericFeedArrayOutput() ArtifactoryGenericFeedArrayOutput {
	return o
}

func (o ArtifactoryGenericFeedArrayOutput) ToArtifactoryGenericFeedArrayOutputWithContext(ctx context.Context) ArtifactoryGenericFeedArrayOutput {
	return o
}

func (o ArtifactoryGenericFeedArrayOutput) Index(i pulumi.IntInput) ArtifactoryGenericFeedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ArtifactoryGenericFeed {
		return vs[0].([]*ArtifactoryGenericFeed)[vs[1].(int)]
	}).(ArtifactoryGenericFeedOutput)
}

type ArtifactoryGenericFeedMapOutput struct{ *pulumi.OutputState }

func (ArtifactoryGenericFeedMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ArtifactoryGenericFeed)(nil)).Elem()
}

func (o ArtifactoryGenericFeedMapOutput) ToArtifactoryGenericFeedMapOutput() ArtifactoryGenericFeedMapOutput {
	return o
}

func (o ArtifactoryGenericFeedMapOutput) ToArtifactoryGenericFeedMapOutputWithContext(ctx context.Context) ArtifactoryGenericFeedMapOutput {
	return o
}

func (o ArtifactoryGenericFeedMapOutput) MapIndex(k pulumi.StringInput) ArtifactoryGenericFeedOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ArtifactoryGenericFeed {
		return vs[0].(map[string]*ArtifactoryGenericFeed)[vs[1].(string)]
	}).(ArtifactoryGenericFeedOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ArtifactoryGenericFeedInput)(nil)).Elem(), &ArtifactoryGenericFeed{})
	pulumi.RegisterInputType(reflect.TypeOf((*ArtifactoryGenericFeedArrayInput)(nil)).Elem(), ArtifactoryGenericFeedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ArtifactoryGenericFeedMapInput)(nil)).Elem(), ArtifactoryGenericFeedMap{})
	pulumi.RegisterOutputType(ArtifactoryGenericFeedOutput{})
	pulumi.RegisterOutputType(ArtifactoryGenericFeedArrayOutput{})
	pulumi.RegisterOutputType(ArtifactoryGenericFeedMapOutput{})
}
