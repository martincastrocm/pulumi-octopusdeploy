// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package octopusdeploy

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource manages Azure OpenID Connect accounts in Octopus Deploy.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := octopusdeploy.NewAzureOpenidConnect(ctx, "example", &octopusdeploy.AzureOpenidConnectArgs{
//				AccountTestSubjectKeys: pulumi.StringArray{
//					pulumi.String("space"),
//					pulumi.String("type"),
//				},
//				ApplicationId: pulumi.String("00000000-0000-0000-0000-000000000000"),
//				Audience:      pulumi.String("api://AzureADTokenExchange"),
//				ExecutionSubjectKeys: pulumi.StringArray{
//					pulumi.String("space"),
//					pulumi.String("project"),
//				},
//				HealthSubjectKeys: pulumi.StringArray{
//					pulumi.String("space"),
//					pulumi.String("target"),
//					pulumi.String("type"),
//				},
//				SubscriptionId: pulumi.String("00000000-0000-0000-0000-000000000000"),
//				TenantId:       pulumi.String("00000000-0000-0000-0000-000000000000"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// ```sh
// $ pulumi import octopusdeploy:index/azureOpenidConnect:AzureOpenidConnect [options] octopusdeploy_azure_openid_connect.<name> <account-id>
// ```
type AzureOpenidConnect struct {
	pulumi.CustomResourceState

	// Keys to include in an account test. Valid options are: `space`, `account`, `type`
	AccountTestSubjectKeys pulumi.StringArrayOutput `pulumi:"accountTestSubjectKeys"`
	// The application ID of this resource.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// Federated credentials audience, this value is used to establish a connection between external workload identities and Microsoft Entra ID.
	Audience pulumi.StringPtrOutput `pulumi:"audience"`
	// The authentication endpoint URI for this resource.
	AuthenticationEndpoint pulumi.StringPtrOutput `pulumi:"authenticationEndpoint"`
	// The Azure environment associated with this resource. Valid Azure environments are `AzureCloud`, `AzureChinaCloud`, `AzureGermanCloud`, or `AzureUSGovernment`.
	AzureEnvironment pulumi.StringOutput `pulumi:"azureEnvironment"`
	// The description of this Azure OpenID Connect account.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A list of environment IDs associated with this resource.
	Environments pulumi.StringArrayOutput `pulumi:"environments"`
	// Keys to include in a deployment or runbook. Valid options are `space`, `environment`, `project`, `tenant`, `runbook`, `account`, `type`
	ExecutionSubjectKeys pulumi.StringArrayOutput `pulumi:"executionSubjectKeys"`
	// Keys to include in a health check. Valid options are `space`, `account`, `target`, `type`
	HealthSubjectKeys pulumi.StringArrayOutput `pulumi:"healthSubjectKeys"`
	// The name of this resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource manager endpoint URI for this resource.
	ResourceManagerEndpoint pulumi.StringPtrOutput `pulumi:"resourceManagerEndpoint"`
	// The space ID associated with this resource.
	SpaceId pulumi.StringOutput `pulumi:"spaceId"`
	// The subscription ID of this resource.
	SubscriptionId pulumi.StringOutput `pulumi:"subscriptionId"`
	// The tenant ID of this resource.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// A list of tenant tags associated with this resource.
	TenantTags pulumi.StringArrayOutput `pulumi:"tenantTags"`
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation pulumi.StringOutput `pulumi:"tenantedDeploymentParticipation"`
	// A list of tenant IDs associated with this resource.
	Tenants pulumi.StringArrayOutput `pulumi:"tenants"`
}

// NewAzureOpenidConnect registers a new resource with the given unique name, arguments, and options.
func NewAzureOpenidConnect(ctx *pulumi.Context,
	name string, args *AzureOpenidConnectArgs, opts ...pulumi.ResourceOption) (*AzureOpenidConnect, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.SubscriptionId == nil {
		return nil, errors.New("invalid value for required argument 'SubscriptionId'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AzureOpenidConnect
	err := ctx.RegisterResource("octopusdeploy:index/azureOpenidConnect:AzureOpenidConnect", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzureOpenidConnect gets an existing AzureOpenidConnect resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzureOpenidConnect(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzureOpenidConnectState, opts ...pulumi.ResourceOption) (*AzureOpenidConnect, error) {
	var resource AzureOpenidConnect
	err := ctx.ReadResource("octopusdeploy:index/azureOpenidConnect:AzureOpenidConnect", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzureOpenidConnect resources.
type azureOpenidConnectState struct {
	// Keys to include in an account test. Valid options are: `space`, `account`, `type`
	AccountTestSubjectKeys []string `pulumi:"accountTestSubjectKeys"`
	// The application ID of this resource.
	ApplicationId *string `pulumi:"applicationId"`
	// Federated credentials audience, this value is used to establish a connection between external workload identities and Microsoft Entra ID.
	Audience *string `pulumi:"audience"`
	// The authentication endpoint URI for this resource.
	AuthenticationEndpoint *string `pulumi:"authenticationEndpoint"`
	// The Azure environment associated with this resource. Valid Azure environments are `AzureCloud`, `AzureChinaCloud`, `AzureGermanCloud`, or `AzureUSGovernment`.
	AzureEnvironment *string `pulumi:"azureEnvironment"`
	// The description of this Azure OpenID Connect account.
	Description *string `pulumi:"description"`
	// A list of environment IDs associated with this resource.
	Environments []string `pulumi:"environments"`
	// Keys to include in a deployment or runbook. Valid options are `space`, `environment`, `project`, `tenant`, `runbook`, `account`, `type`
	ExecutionSubjectKeys []string `pulumi:"executionSubjectKeys"`
	// Keys to include in a health check. Valid options are `space`, `account`, `target`, `type`
	HealthSubjectKeys []string `pulumi:"healthSubjectKeys"`
	// The name of this resource.
	Name *string `pulumi:"name"`
	// The resource manager endpoint URI for this resource.
	ResourceManagerEndpoint *string `pulumi:"resourceManagerEndpoint"`
	// The space ID associated with this resource.
	SpaceId *string `pulumi:"spaceId"`
	// The subscription ID of this resource.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// The tenant ID of this resource.
	TenantId *string `pulumi:"tenantId"`
	// A list of tenant tags associated with this resource.
	TenantTags []string `pulumi:"tenantTags"`
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation *string `pulumi:"tenantedDeploymentParticipation"`
	// A list of tenant IDs associated with this resource.
	Tenants []string `pulumi:"tenants"`
}

type AzureOpenidConnectState struct {
	// Keys to include in an account test. Valid options are: `space`, `account`, `type`
	AccountTestSubjectKeys pulumi.StringArrayInput
	// The application ID of this resource.
	ApplicationId pulumi.StringPtrInput
	// Federated credentials audience, this value is used to establish a connection between external workload identities and Microsoft Entra ID.
	Audience pulumi.StringPtrInput
	// The authentication endpoint URI for this resource.
	AuthenticationEndpoint pulumi.StringPtrInput
	// The Azure environment associated with this resource. Valid Azure environments are `AzureCloud`, `AzureChinaCloud`, `AzureGermanCloud`, or `AzureUSGovernment`.
	AzureEnvironment pulumi.StringPtrInput
	// The description of this Azure OpenID Connect account.
	Description pulumi.StringPtrInput
	// A list of environment IDs associated with this resource.
	Environments pulumi.StringArrayInput
	// Keys to include in a deployment or runbook. Valid options are `space`, `environment`, `project`, `tenant`, `runbook`, `account`, `type`
	ExecutionSubjectKeys pulumi.StringArrayInput
	// Keys to include in a health check. Valid options are `space`, `account`, `target`, `type`
	HealthSubjectKeys pulumi.StringArrayInput
	// The name of this resource.
	Name pulumi.StringPtrInput
	// The resource manager endpoint URI for this resource.
	ResourceManagerEndpoint pulumi.StringPtrInput
	// The space ID associated with this resource.
	SpaceId pulumi.StringPtrInput
	// The subscription ID of this resource.
	SubscriptionId pulumi.StringPtrInput
	// The tenant ID of this resource.
	TenantId pulumi.StringPtrInput
	// A list of tenant tags associated with this resource.
	TenantTags pulumi.StringArrayInput
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation pulumi.StringPtrInput
	// A list of tenant IDs associated with this resource.
	Tenants pulumi.StringArrayInput
}

func (AzureOpenidConnectState) ElementType() reflect.Type {
	return reflect.TypeOf((*azureOpenidConnectState)(nil)).Elem()
}

type azureOpenidConnectArgs struct {
	// Keys to include in an account test. Valid options are: `space`, `account`, `type`
	AccountTestSubjectKeys []string `pulumi:"accountTestSubjectKeys"`
	// The application ID of this resource.
	ApplicationId string `pulumi:"applicationId"`
	// Federated credentials audience, this value is used to establish a connection between external workload identities and Microsoft Entra ID.
	Audience *string `pulumi:"audience"`
	// The authentication endpoint URI for this resource.
	AuthenticationEndpoint *string `pulumi:"authenticationEndpoint"`
	// The Azure environment associated with this resource. Valid Azure environments are `AzureCloud`, `AzureChinaCloud`, `AzureGermanCloud`, or `AzureUSGovernment`.
	AzureEnvironment *string `pulumi:"azureEnvironment"`
	// The description of this Azure OpenID Connect account.
	Description *string `pulumi:"description"`
	// A list of environment IDs associated with this resource.
	Environments []string `pulumi:"environments"`
	// Keys to include in a deployment or runbook. Valid options are `space`, `environment`, `project`, `tenant`, `runbook`, `account`, `type`
	ExecutionSubjectKeys []string `pulumi:"executionSubjectKeys"`
	// Keys to include in a health check. Valid options are `space`, `account`, `target`, `type`
	HealthSubjectKeys []string `pulumi:"healthSubjectKeys"`
	// The name of this resource.
	Name *string `pulumi:"name"`
	// The resource manager endpoint URI for this resource.
	ResourceManagerEndpoint *string `pulumi:"resourceManagerEndpoint"`
	// The space ID associated with this resource.
	SpaceId *string `pulumi:"spaceId"`
	// The subscription ID of this resource.
	SubscriptionId string `pulumi:"subscriptionId"`
	// The tenant ID of this resource.
	TenantId string `pulumi:"tenantId"`
	// A list of tenant tags associated with this resource.
	TenantTags []string `pulumi:"tenantTags"`
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation *string `pulumi:"tenantedDeploymentParticipation"`
	// A list of tenant IDs associated with this resource.
	Tenants []string `pulumi:"tenants"`
}

// The set of arguments for constructing a AzureOpenidConnect resource.
type AzureOpenidConnectArgs struct {
	// Keys to include in an account test. Valid options are: `space`, `account`, `type`
	AccountTestSubjectKeys pulumi.StringArrayInput
	// The application ID of this resource.
	ApplicationId pulumi.StringInput
	// Federated credentials audience, this value is used to establish a connection between external workload identities and Microsoft Entra ID.
	Audience pulumi.StringPtrInput
	// The authentication endpoint URI for this resource.
	AuthenticationEndpoint pulumi.StringPtrInput
	// The Azure environment associated with this resource. Valid Azure environments are `AzureCloud`, `AzureChinaCloud`, `AzureGermanCloud`, or `AzureUSGovernment`.
	AzureEnvironment pulumi.StringPtrInput
	// The description of this Azure OpenID Connect account.
	Description pulumi.StringPtrInput
	// A list of environment IDs associated with this resource.
	Environments pulumi.StringArrayInput
	// Keys to include in a deployment or runbook. Valid options are `space`, `environment`, `project`, `tenant`, `runbook`, `account`, `type`
	ExecutionSubjectKeys pulumi.StringArrayInput
	// Keys to include in a health check. Valid options are `space`, `account`, `target`, `type`
	HealthSubjectKeys pulumi.StringArrayInput
	// The name of this resource.
	Name pulumi.StringPtrInput
	// The resource manager endpoint URI for this resource.
	ResourceManagerEndpoint pulumi.StringPtrInput
	// The space ID associated with this resource.
	SpaceId pulumi.StringPtrInput
	// The subscription ID of this resource.
	SubscriptionId pulumi.StringInput
	// The tenant ID of this resource.
	TenantId pulumi.StringInput
	// A list of tenant tags associated with this resource.
	TenantTags pulumi.StringArrayInput
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation pulumi.StringPtrInput
	// A list of tenant IDs associated with this resource.
	Tenants pulumi.StringArrayInput
}

func (AzureOpenidConnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azureOpenidConnectArgs)(nil)).Elem()
}

type AzureOpenidConnectInput interface {
	pulumi.Input

	ToAzureOpenidConnectOutput() AzureOpenidConnectOutput
	ToAzureOpenidConnectOutputWithContext(ctx context.Context) AzureOpenidConnectOutput
}

func (*AzureOpenidConnect) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureOpenidConnect)(nil)).Elem()
}

func (i *AzureOpenidConnect) ToAzureOpenidConnectOutput() AzureOpenidConnectOutput {
	return i.ToAzureOpenidConnectOutputWithContext(context.Background())
}

func (i *AzureOpenidConnect) ToAzureOpenidConnectOutputWithContext(ctx context.Context) AzureOpenidConnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureOpenidConnectOutput)
}

// AzureOpenidConnectArrayInput is an input type that accepts AzureOpenidConnectArray and AzureOpenidConnectArrayOutput values.
// You can construct a concrete instance of `AzureOpenidConnectArrayInput` via:
//
//	AzureOpenidConnectArray{ AzureOpenidConnectArgs{...} }
type AzureOpenidConnectArrayInput interface {
	pulumi.Input

	ToAzureOpenidConnectArrayOutput() AzureOpenidConnectArrayOutput
	ToAzureOpenidConnectArrayOutputWithContext(context.Context) AzureOpenidConnectArrayOutput
}

type AzureOpenidConnectArray []AzureOpenidConnectInput

func (AzureOpenidConnectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureOpenidConnect)(nil)).Elem()
}

func (i AzureOpenidConnectArray) ToAzureOpenidConnectArrayOutput() AzureOpenidConnectArrayOutput {
	return i.ToAzureOpenidConnectArrayOutputWithContext(context.Background())
}

func (i AzureOpenidConnectArray) ToAzureOpenidConnectArrayOutputWithContext(ctx context.Context) AzureOpenidConnectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureOpenidConnectArrayOutput)
}

// AzureOpenidConnectMapInput is an input type that accepts AzureOpenidConnectMap and AzureOpenidConnectMapOutput values.
// You can construct a concrete instance of `AzureOpenidConnectMapInput` via:
//
//	AzureOpenidConnectMap{ "key": AzureOpenidConnectArgs{...} }
type AzureOpenidConnectMapInput interface {
	pulumi.Input

	ToAzureOpenidConnectMapOutput() AzureOpenidConnectMapOutput
	ToAzureOpenidConnectMapOutputWithContext(context.Context) AzureOpenidConnectMapOutput
}

type AzureOpenidConnectMap map[string]AzureOpenidConnectInput

func (AzureOpenidConnectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureOpenidConnect)(nil)).Elem()
}

func (i AzureOpenidConnectMap) ToAzureOpenidConnectMapOutput() AzureOpenidConnectMapOutput {
	return i.ToAzureOpenidConnectMapOutputWithContext(context.Background())
}

func (i AzureOpenidConnectMap) ToAzureOpenidConnectMapOutputWithContext(ctx context.Context) AzureOpenidConnectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureOpenidConnectMapOutput)
}

type AzureOpenidConnectOutput struct{ *pulumi.OutputState }

func (AzureOpenidConnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureOpenidConnect)(nil)).Elem()
}

func (o AzureOpenidConnectOutput) ToAzureOpenidConnectOutput() AzureOpenidConnectOutput {
	return o
}

func (o AzureOpenidConnectOutput) ToAzureOpenidConnectOutputWithContext(ctx context.Context) AzureOpenidConnectOutput {
	return o
}

// Keys to include in an account test. Valid options are: `space`, `account`, `type`
func (o AzureOpenidConnectOutput) AccountTestSubjectKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureOpenidConnect) pulumi.StringArrayOutput { return v.AccountTestSubjectKeys }).(pulumi.StringArrayOutput)
}

// The application ID of this resource.
func (o AzureOpenidConnectOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureOpenidConnect) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// Federated credentials audience, this value is used to establish a connection between external workload identities and Microsoft Entra ID.
func (o AzureOpenidConnectOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureOpenidConnect) pulumi.StringPtrOutput { return v.Audience }).(pulumi.StringPtrOutput)
}

// The authentication endpoint URI for this resource.
func (o AzureOpenidConnectOutput) AuthenticationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureOpenidConnect) pulumi.StringPtrOutput { return v.AuthenticationEndpoint }).(pulumi.StringPtrOutput)
}

// The Azure environment associated with this resource. Valid Azure environments are `AzureCloud`, `AzureChinaCloud`, `AzureGermanCloud`, or `AzureUSGovernment`.
func (o AzureOpenidConnectOutput) AzureEnvironment() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureOpenidConnect) pulumi.StringOutput { return v.AzureEnvironment }).(pulumi.StringOutput)
}

// The description of this Azure OpenID Connect account.
func (o AzureOpenidConnectOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureOpenidConnect) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of environment IDs associated with this resource.
func (o AzureOpenidConnectOutput) Environments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureOpenidConnect) pulumi.StringArrayOutput { return v.Environments }).(pulumi.StringArrayOutput)
}

// Keys to include in a deployment or runbook. Valid options are `space`, `environment`, `project`, `tenant`, `runbook`, `account`, `type`
func (o AzureOpenidConnectOutput) ExecutionSubjectKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureOpenidConnect) pulumi.StringArrayOutput { return v.ExecutionSubjectKeys }).(pulumi.StringArrayOutput)
}

// Keys to include in a health check. Valid options are `space`, `account`, `target`, `type`
func (o AzureOpenidConnectOutput) HealthSubjectKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureOpenidConnect) pulumi.StringArrayOutput { return v.HealthSubjectKeys }).(pulumi.StringArrayOutput)
}

// The name of this resource.
func (o AzureOpenidConnectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureOpenidConnect) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource manager endpoint URI for this resource.
func (o AzureOpenidConnectOutput) ResourceManagerEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureOpenidConnect) pulumi.StringPtrOutput { return v.ResourceManagerEndpoint }).(pulumi.StringPtrOutput)
}

// The space ID associated with this resource.
func (o AzureOpenidConnectOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureOpenidConnect) pulumi.StringOutput { return v.SpaceId }).(pulumi.StringOutput)
}

// The subscription ID of this resource.
func (o AzureOpenidConnectOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureOpenidConnect) pulumi.StringOutput { return v.SubscriptionId }).(pulumi.StringOutput)
}

// The tenant ID of this resource.
func (o AzureOpenidConnectOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureOpenidConnect) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// A list of tenant tags associated with this resource.
func (o AzureOpenidConnectOutput) TenantTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureOpenidConnect) pulumi.StringArrayOutput { return v.TenantTags }).(pulumi.StringArrayOutput)
}

// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
func (o AzureOpenidConnectOutput) TenantedDeploymentParticipation() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureOpenidConnect) pulumi.StringOutput { return v.TenantedDeploymentParticipation }).(pulumi.StringOutput)
}

// A list of tenant IDs associated with this resource.
func (o AzureOpenidConnectOutput) Tenants() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureOpenidConnect) pulumi.StringArrayOutput { return v.Tenants }).(pulumi.StringArrayOutput)
}

type AzureOpenidConnectArrayOutput struct{ *pulumi.OutputState }

func (AzureOpenidConnectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureOpenidConnect)(nil)).Elem()
}

func (o AzureOpenidConnectArrayOutput) ToAzureOpenidConnectArrayOutput() AzureOpenidConnectArrayOutput {
	return o
}

func (o AzureOpenidConnectArrayOutput) ToAzureOpenidConnectArrayOutputWithContext(ctx context.Context) AzureOpenidConnectArrayOutput {
	return o
}

func (o AzureOpenidConnectArrayOutput) Index(i pulumi.IntInput) AzureOpenidConnectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AzureOpenidConnect {
		return vs[0].([]*AzureOpenidConnect)[vs[1].(int)]
	}).(AzureOpenidConnectOutput)
}

type AzureOpenidConnectMapOutput struct{ *pulumi.OutputState }

func (AzureOpenidConnectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureOpenidConnect)(nil)).Elem()
}

func (o AzureOpenidConnectMapOutput) ToAzureOpenidConnectMapOutput() AzureOpenidConnectMapOutput {
	return o
}

func (o AzureOpenidConnectMapOutput) ToAzureOpenidConnectMapOutputWithContext(ctx context.Context) AzureOpenidConnectMapOutput {
	return o
}

func (o AzureOpenidConnectMapOutput) MapIndex(k pulumi.StringInput) AzureOpenidConnectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AzureOpenidConnect {
		return vs[0].(map[string]*AzureOpenidConnect)[vs[1].(string)]
	}).(AzureOpenidConnectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AzureOpenidConnectInput)(nil)).Elem(), &AzureOpenidConnect{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureOpenidConnectArrayInput)(nil)).Elem(), AzureOpenidConnectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureOpenidConnectMapInput)(nil)).Elem(), AzureOpenidConnectMap{})
	pulumi.RegisterOutputType(AzureOpenidConnectOutput{})
	pulumi.RegisterOutputType(AzureOpenidConnectArrayOutput{})
	pulumi.RegisterOutputType(AzureOpenidConnectMapOutput{})
}
