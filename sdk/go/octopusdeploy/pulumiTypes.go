// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package octopusdeploy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type EnvironmentJiraExtensionSetting struct {
	// The Jira environment type of this Octopus deployment environment. Valid values are `"development"`, `"production"`, `"staging"`, `"testing"`, `"unmapped"`.
	EnvironmentType *string `pulumi:"environmentType"`
}

// EnvironmentJiraExtensionSettingInput is an input type that accepts EnvironmentJiraExtensionSettingArgs and EnvironmentJiraExtensionSettingOutput values.
// You can construct a concrete instance of `EnvironmentJiraExtensionSettingInput` via:
//
//	EnvironmentJiraExtensionSettingArgs{...}
type EnvironmentJiraExtensionSettingInput interface {
	pulumi.Input

	ToEnvironmentJiraExtensionSettingOutput() EnvironmentJiraExtensionSettingOutput
	ToEnvironmentJiraExtensionSettingOutputWithContext(context.Context) EnvironmentJiraExtensionSettingOutput
}

type EnvironmentJiraExtensionSettingArgs struct {
	// The Jira environment type of this Octopus deployment environment. Valid values are `"development"`, `"production"`, `"staging"`, `"testing"`, `"unmapped"`.
	EnvironmentType pulumi.StringPtrInput `pulumi:"environmentType"`
}

func (EnvironmentJiraExtensionSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentJiraExtensionSetting)(nil)).Elem()
}

func (i EnvironmentJiraExtensionSettingArgs) ToEnvironmentJiraExtensionSettingOutput() EnvironmentJiraExtensionSettingOutput {
	return i.ToEnvironmentJiraExtensionSettingOutputWithContext(context.Background())
}

func (i EnvironmentJiraExtensionSettingArgs) ToEnvironmentJiraExtensionSettingOutputWithContext(ctx context.Context) EnvironmentJiraExtensionSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentJiraExtensionSettingOutput)
}

// EnvironmentJiraExtensionSettingArrayInput is an input type that accepts EnvironmentJiraExtensionSettingArray and EnvironmentJiraExtensionSettingArrayOutput values.
// You can construct a concrete instance of `EnvironmentJiraExtensionSettingArrayInput` via:
//
//	EnvironmentJiraExtensionSettingArray{ EnvironmentJiraExtensionSettingArgs{...} }
type EnvironmentJiraExtensionSettingArrayInput interface {
	pulumi.Input

	ToEnvironmentJiraExtensionSettingArrayOutput() EnvironmentJiraExtensionSettingArrayOutput
	ToEnvironmentJiraExtensionSettingArrayOutputWithContext(context.Context) EnvironmentJiraExtensionSettingArrayOutput
}

type EnvironmentJiraExtensionSettingArray []EnvironmentJiraExtensionSettingInput

func (EnvironmentJiraExtensionSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentJiraExtensionSetting)(nil)).Elem()
}

func (i EnvironmentJiraExtensionSettingArray) ToEnvironmentJiraExtensionSettingArrayOutput() EnvironmentJiraExtensionSettingArrayOutput {
	return i.ToEnvironmentJiraExtensionSettingArrayOutputWithContext(context.Background())
}

func (i EnvironmentJiraExtensionSettingArray) ToEnvironmentJiraExtensionSettingArrayOutputWithContext(ctx context.Context) EnvironmentJiraExtensionSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentJiraExtensionSettingArrayOutput)
}

type EnvironmentJiraExtensionSettingOutput struct{ *pulumi.OutputState }

func (EnvironmentJiraExtensionSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentJiraExtensionSetting)(nil)).Elem()
}

func (o EnvironmentJiraExtensionSettingOutput) ToEnvironmentJiraExtensionSettingOutput() EnvironmentJiraExtensionSettingOutput {
	return o
}

func (o EnvironmentJiraExtensionSettingOutput) ToEnvironmentJiraExtensionSettingOutputWithContext(ctx context.Context) EnvironmentJiraExtensionSettingOutput {
	return o
}

// The Jira environment type of this Octopus deployment environment. Valid values are `"development"`, `"production"`, `"staging"`, `"testing"`, `"unmapped"`.
func (o EnvironmentJiraExtensionSettingOutput) EnvironmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentJiraExtensionSetting) *string { return v.EnvironmentType }).(pulumi.StringPtrOutput)
}

type EnvironmentJiraExtensionSettingArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentJiraExtensionSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentJiraExtensionSetting)(nil)).Elem()
}

func (o EnvironmentJiraExtensionSettingArrayOutput) ToEnvironmentJiraExtensionSettingArrayOutput() EnvironmentJiraExtensionSettingArrayOutput {
	return o
}

func (o EnvironmentJiraExtensionSettingArrayOutput) ToEnvironmentJiraExtensionSettingArrayOutputWithContext(ctx context.Context) EnvironmentJiraExtensionSettingArrayOutput {
	return o
}

func (o EnvironmentJiraExtensionSettingArrayOutput) Index(i pulumi.IntInput) EnvironmentJiraExtensionSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentJiraExtensionSetting {
		return vs[0].([]EnvironmentJiraExtensionSetting)[vs[1].(int)]
	}).(EnvironmentJiraExtensionSettingOutput)
}

type EnvironmentJiraServiceManagementExtensionSetting struct {
	// Specifies whether or not this extension is enabled for this project.
	IsEnabled *bool `pulumi:"isEnabled"`
}

// EnvironmentJiraServiceManagementExtensionSettingInput is an input type that accepts EnvironmentJiraServiceManagementExtensionSettingArgs and EnvironmentJiraServiceManagementExtensionSettingOutput values.
// You can construct a concrete instance of `EnvironmentJiraServiceManagementExtensionSettingInput` via:
//
//	EnvironmentJiraServiceManagementExtensionSettingArgs{...}
type EnvironmentJiraServiceManagementExtensionSettingInput interface {
	pulumi.Input

	ToEnvironmentJiraServiceManagementExtensionSettingOutput() EnvironmentJiraServiceManagementExtensionSettingOutput
	ToEnvironmentJiraServiceManagementExtensionSettingOutputWithContext(context.Context) EnvironmentJiraServiceManagementExtensionSettingOutput
}

type EnvironmentJiraServiceManagementExtensionSettingArgs struct {
	// Specifies whether or not this extension is enabled for this project.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
}

func (EnvironmentJiraServiceManagementExtensionSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentJiraServiceManagementExtensionSetting)(nil)).Elem()
}

func (i EnvironmentJiraServiceManagementExtensionSettingArgs) ToEnvironmentJiraServiceManagementExtensionSettingOutput() EnvironmentJiraServiceManagementExtensionSettingOutput {
	return i.ToEnvironmentJiraServiceManagementExtensionSettingOutputWithContext(context.Background())
}

func (i EnvironmentJiraServiceManagementExtensionSettingArgs) ToEnvironmentJiraServiceManagementExtensionSettingOutputWithContext(ctx context.Context) EnvironmentJiraServiceManagementExtensionSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentJiraServiceManagementExtensionSettingOutput)
}

// EnvironmentJiraServiceManagementExtensionSettingArrayInput is an input type that accepts EnvironmentJiraServiceManagementExtensionSettingArray and EnvironmentJiraServiceManagementExtensionSettingArrayOutput values.
// You can construct a concrete instance of `EnvironmentJiraServiceManagementExtensionSettingArrayInput` via:
//
//	EnvironmentJiraServiceManagementExtensionSettingArray{ EnvironmentJiraServiceManagementExtensionSettingArgs{...} }
type EnvironmentJiraServiceManagementExtensionSettingArrayInput interface {
	pulumi.Input

	ToEnvironmentJiraServiceManagementExtensionSettingArrayOutput() EnvironmentJiraServiceManagementExtensionSettingArrayOutput
	ToEnvironmentJiraServiceManagementExtensionSettingArrayOutputWithContext(context.Context) EnvironmentJiraServiceManagementExtensionSettingArrayOutput
}

type EnvironmentJiraServiceManagementExtensionSettingArray []EnvironmentJiraServiceManagementExtensionSettingInput

func (EnvironmentJiraServiceManagementExtensionSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentJiraServiceManagementExtensionSetting)(nil)).Elem()
}

func (i EnvironmentJiraServiceManagementExtensionSettingArray) ToEnvironmentJiraServiceManagementExtensionSettingArrayOutput() EnvironmentJiraServiceManagementExtensionSettingArrayOutput {
	return i.ToEnvironmentJiraServiceManagementExtensionSettingArrayOutputWithContext(context.Background())
}

func (i EnvironmentJiraServiceManagementExtensionSettingArray) ToEnvironmentJiraServiceManagementExtensionSettingArrayOutputWithContext(ctx context.Context) EnvironmentJiraServiceManagementExtensionSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentJiraServiceManagementExtensionSettingArrayOutput)
}

type EnvironmentJiraServiceManagementExtensionSettingOutput struct{ *pulumi.OutputState }

func (EnvironmentJiraServiceManagementExtensionSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentJiraServiceManagementExtensionSetting)(nil)).Elem()
}

func (o EnvironmentJiraServiceManagementExtensionSettingOutput) ToEnvironmentJiraServiceManagementExtensionSettingOutput() EnvironmentJiraServiceManagementExtensionSettingOutput {
	return o
}

func (o EnvironmentJiraServiceManagementExtensionSettingOutput) ToEnvironmentJiraServiceManagementExtensionSettingOutputWithContext(ctx context.Context) EnvironmentJiraServiceManagementExtensionSettingOutput {
	return o
}

// Specifies whether or not this extension is enabled for this project.
func (o EnvironmentJiraServiceManagementExtensionSettingOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EnvironmentJiraServiceManagementExtensionSetting) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

type EnvironmentJiraServiceManagementExtensionSettingArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentJiraServiceManagementExtensionSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentJiraServiceManagementExtensionSetting)(nil)).Elem()
}

func (o EnvironmentJiraServiceManagementExtensionSettingArrayOutput) ToEnvironmentJiraServiceManagementExtensionSettingArrayOutput() EnvironmentJiraServiceManagementExtensionSettingArrayOutput {
	return o
}

func (o EnvironmentJiraServiceManagementExtensionSettingArrayOutput) ToEnvironmentJiraServiceManagementExtensionSettingArrayOutputWithContext(ctx context.Context) EnvironmentJiraServiceManagementExtensionSettingArrayOutput {
	return o
}

func (o EnvironmentJiraServiceManagementExtensionSettingArrayOutput) Index(i pulumi.IntInput) EnvironmentJiraServiceManagementExtensionSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentJiraServiceManagementExtensionSetting {
		return vs[0].([]EnvironmentJiraServiceManagementExtensionSetting)[vs[1].(int)]
	}).(EnvironmentJiraServiceManagementExtensionSettingOutput)
}

type EnvironmentServicenowExtensionSetting struct {
	// Specifies whether or not this extension is enabled for this project.
	IsEnabled *bool `pulumi:"isEnabled"`
}

// EnvironmentServicenowExtensionSettingInput is an input type that accepts EnvironmentServicenowExtensionSettingArgs and EnvironmentServicenowExtensionSettingOutput values.
// You can construct a concrete instance of `EnvironmentServicenowExtensionSettingInput` via:
//
//	EnvironmentServicenowExtensionSettingArgs{...}
type EnvironmentServicenowExtensionSettingInput interface {
	pulumi.Input

	ToEnvironmentServicenowExtensionSettingOutput() EnvironmentServicenowExtensionSettingOutput
	ToEnvironmentServicenowExtensionSettingOutputWithContext(context.Context) EnvironmentServicenowExtensionSettingOutput
}

type EnvironmentServicenowExtensionSettingArgs struct {
	// Specifies whether or not this extension is enabled for this project.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
}

func (EnvironmentServicenowExtensionSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentServicenowExtensionSetting)(nil)).Elem()
}

func (i EnvironmentServicenowExtensionSettingArgs) ToEnvironmentServicenowExtensionSettingOutput() EnvironmentServicenowExtensionSettingOutput {
	return i.ToEnvironmentServicenowExtensionSettingOutputWithContext(context.Background())
}

func (i EnvironmentServicenowExtensionSettingArgs) ToEnvironmentServicenowExtensionSettingOutputWithContext(ctx context.Context) EnvironmentServicenowExtensionSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentServicenowExtensionSettingOutput)
}

// EnvironmentServicenowExtensionSettingArrayInput is an input type that accepts EnvironmentServicenowExtensionSettingArray and EnvironmentServicenowExtensionSettingArrayOutput values.
// You can construct a concrete instance of `EnvironmentServicenowExtensionSettingArrayInput` via:
//
//	EnvironmentServicenowExtensionSettingArray{ EnvironmentServicenowExtensionSettingArgs{...} }
type EnvironmentServicenowExtensionSettingArrayInput interface {
	pulumi.Input

	ToEnvironmentServicenowExtensionSettingArrayOutput() EnvironmentServicenowExtensionSettingArrayOutput
	ToEnvironmentServicenowExtensionSettingArrayOutputWithContext(context.Context) EnvironmentServicenowExtensionSettingArrayOutput
}

type EnvironmentServicenowExtensionSettingArray []EnvironmentServicenowExtensionSettingInput

func (EnvironmentServicenowExtensionSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentServicenowExtensionSetting)(nil)).Elem()
}

func (i EnvironmentServicenowExtensionSettingArray) ToEnvironmentServicenowExtensionSettingArrayOutput() EnvironmentServicenowExtensionSettingArrayOutput {
	return i.ToEnvironmentServicenowExtensionSettingArrayOutputWithContext(context.Background())
}

func (i EnvironmentServicenowExtensionSettingArray) ToEnvironmentServicenowExtensionSettingArrayOutputWithContext(ctx context.Context) EnvironmentServicenowExtensionSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentServicenowExtensionSettingArrayOutput)
}

type EnvironmentServicenowExtensionSettingOutput struct{ *pulumi.OutputState }

func (EnvironmentServicenowExtensionSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentServicenowExtensionSetting)(nil)).Elem()
}

func (o EnvironmentServicenowExtensionSettingOutput) ToEnvironmentServicenowExtensionSettingOutput() EnvironmentServicenowExtensionSettingOutput {
	return o
}

func (o EnvironmentServicenowExtensionSettingOutput) ToEnvironmentServicenowExtensionSettingOutputWithContext(ctx context.Context) EnvironmentServicenowExtensionSettingOutput {
	return o
}

// Specifies whether or not this extension is enabled for this project.
func (o EnvironmentServicenowExtensionSettingOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EnvironmentServicenowExtensionSetting) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

type EnvironmentServicenowExtensionSettingArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentServicenowExtensionSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentServicenowExtensionSetting)(nil)).Elem()
}

func (o EnvironmentServicenowExtensionSettingArrayOutput) ToEnvironmentServicenowExtensionSettingArrayOutput() EnvironmentServicenowExtensionSettingArrayOutput {
	return o
}

func (o EnvironmentServicenowExtensionSettingArrayOutput) ToEnvironmentServicenowExtensionSettingArrayOutputWithContext(ctx context.Context) EnvironmentServicenowExtensionSettingArrayOutput {
	return o
}

func (o EnvironmentServicenowExtensionSettingArrayOutput) Index(i pulumi.IntInput) EnvironmentServicenowExtensionSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentServicenowExtensionSetting {
		return vs[0].([]EnvironmentServicenowExtensionSetting)[vs[1].(int)]
	}).(EnvironmentServicenowExtensionSettingOutput)
}

type LibraryVariableSetTemplate struct {
	// A default value for the parameter, if applicable. This can be a hard-coded value or a variable reference.
	DefaultValue *string `pulumi:"defaultValue"`
	// The display settings for the parameter.
	DisplaySettings map[string]string `pulumi:"displaySettings"`
	// The help presented alongside the parameter input.
	HelpText *string `pulumi:"helpText"`
	// The unique ID for this resource.
	Id *string `pulumi:"id"`
	// The label shown beside the parameter when presented in the deployment process. Example: `Server name`.
	Label *string `pulumi:"label"`
	// The name of the variable set by the parameter. The name can contain letters, digits, dashes and periods. Example: `ServerName`
	Name string `pulumi:"name"`
}

// LibraryVariableSetTemplateInput is an input type that accepts LibraryVariableSetTemplateArgs and LibraryVariableSetTemplateOutput values.
// You can construct a concrete instance of `LibraryVariableSetTemplateInput` via:
//
//	LibraryVariableSetTemplateArgs{...}
type LibraryVariableSetTemplateInput interface {
	pulumi.Input

	ToLibraryVariableSetTemplateOutput() LibraryVariableSetTemplateOutput
	ToLibraryVariableSetTemplateOutputWithContext(context.Context) LibraryVariableSetTemplateOutput
}

type LibraryVariableSetTemplateArgs struct {
	// A default value for the parameter, if applicable. This can be a hard-coded value or a variable reference.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// The display settings for the parameter.
	DisplaySettings pulumi.StringMapInput `pulumi:"displaySettings"`
	// The help presented alongside the parameter input.
	HelpText pulumi.StringPtrInput `pulumi:"helpText"`
	// The unique ID for this resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The label shown beside the parameter when presented in the deployment process. Example: `Server name`.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// The name of the variable set by the parameter. The name can contain letters, digits, dashes and periods. Example: `ServerName`
	Name pulumi.StringInput `pulumi:"name"`
}

func (LibraryVariableSetTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LibraryVariableSetTemplate)(nil)).Elem()
}

func (i LibraryVariableSetTemplateArgs) ToLibraryVariableSetTemplateOutput() LibraryVariableSetTemplateOutput {
	return i.ToLibraryVariableSetTemplateOutputWithContext(context.Background())
}

func (i LibraryVariableSetTemplateArgs) ToLibraryVariableSetTemplateOutputWithContext(ctx context.Context) LibraryVariableSetTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LibraryVariableSetTemplateOutput)
}

// LibraryVariableSetTemplateArrayInput is an input type that accepts LibraryVariableSetTemplateArray and LibraryVariableSetTemplateArrayOutput values.
// You can construct a concrete instance of `LibraryVariableSetTemplateArrayInput` via:
//
//	LibraryVariableSetTemplateArray{ LibraryVariableSetTemplateArgs{...} }
type LibraryVariableSetTemplateArrayInput interface {
	pulumi.Input

	ToLibraryVariableSetTemplateArrayOutput() LibraryVariableSetTemplateArrayOutput
	ToLibraryVariableSetTemplateArrayOutputWithContext(context.Context) LibraryVariableSetTemplateArrayOutput
}

type LibraryVariableSetTemplateArray []LibraryVariableSetTemplateInput

func (LibraryVariableSetTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LibraryVariableSetTemplate)(nil)).Elem()
}

func (i LibraryVariableSetTemplateArray) ToLibraryVariableSetTemplateArrayOutput() LibraryVariableSetTemplateArrayOutput {
	return i.ToLibraryVariableSetTemplateArrayOutputWithContext(context.Background())
}

func (i LibraryVariableSetTemplateArray) ToLibraryVariableSetTemplateArrayOutputWithContext(ctx context.Context) LibraryVariableSetTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LibraryVariableSetTemplateArrayOutput)
}

type LibraryVariableSetTemplateOutput struct{ *pulumi.OutputState }

func (LibraryVariableSetTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LibraryVariableSetTemplate)(nil)).Elem()
}

func (o LibraryVariableSetTemplateOutput) ToLibraryVariableSetTemplateOutput() LibraryVariableSetTemplateOutput {
	return o
}

func (o LibraryVariableSetTemplateOutput) ToLibraryVariableSetTemplateOutputWithContext(ctx context.Context) LibraryVariableSetTemplateOutput {
	return o
}

// A default value for the parameter, if applicable. This can be a hard-coded value or a variable reference.
func (o LibraryVariableSetTemplateOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LibraryVariableSetTemplate) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// The display settings for the parameter.
func (o LibraryVariableSetTemplateOutput) DisplaySettings() pulumi.StringMapOutput {
	return o.ApplyT(func(v LibraryVariableSetTemplate) map[string]string { return v.DisplaySettings }).(pulumi.StringMapOutput)
}

// The help presented alongside the parameter input.
func (o LibraryVariableSetTemplateOutput) HelpText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LibraryVariableSetTemplate) *string { return v.HelpText }).(pulumi.StringPtrOutput)
}

// The unique ID for this resource.
func (o LibraryVariableSetTemplateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LibraryVariableSetTemplate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The label shown beside the parameter when presented in the deployment process. Example: `Server name`.
func (o LibraryVariableSetTemplateOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LibraryVariableSetTemplate) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// The name of the variable set by the parameter. The name can contain letters, digits, dashes and periods. Example: `ServerName`
func (o LibraryVariableSetTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LibraryVariableSetTemplate) string { return v.Name }).(pulumi.StringOutput)
}

type LibraryVariableSetTemplateArrayOutput struct{ *pulumi.OutputState }

func (LibraryVariableSetTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LibraryVariableSetTemplate)(nil)).Elem()
}

func (o LibraryVariableSetTemplateArrayOutput) ToLibraryVariableSetTemplateArrayOutput() LibraryVariableSetTemplateArrayOutput {
	return o
}

func (o LibraryVariableSetTemplateArrayOutput) ToLibraryVariableSetTemplateArrayOutputWithContext(ctx context.Context) LibraryVariableSetTemplateArrayOutput {
	return o
}

func (o LibraryVariableSetTemplateArrayOutput) Index(i pulumi.IntInput) LibraryVariableSetTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LibraryVariableSetTemplate {
		return vs[0].([]LibraryVariableSetTemplate)[vs[1].(int)]
	}).(LibraryVariableSetTemplateOutput)
}

type LifecyclePhase struct {
	// Environment IDs in this phase that a release is automatically deployed to when it is eligible for this phase
	AutomaticDeploymentTargets []string `pulumi:"automaticDeploymentTargets"`
	// The unique ID for this resource.
	Id *string `pulumi:"id"`
	// If false a release must be deployed to this phase before it can be deployed to the next phase.
	IsOptionalPhase *bool `pulumi:"isOptionalPhase"`
	// The number of units required before a release can enter the next phase. If 0, all environments are required.
	MinimumEnvironmentsBeforePromotion *int `pulumi:"minimumEnvironmentsBeforePromotion"`
	// The name of this resource.
	Name string `pulumi:"name"`
	// Environment IDs in this phase that a release can be deployed to, but is not automatically deployed to
	OptionalDeploymentTargets []string `pulumi:"optionalDeploymentTargets"`
	// Defines the retention policy for releases or tentacles.
	ReleaseRetentionPolicies []LifecyclePhaseReleaseRetentionPolicy `pulumi:"releaseRetentionPolicies"`
	// Defines the retention policy for releases or tentacles.
	TentacleRetentionPolicies []LifecyclePhaseTentacleRetentionPolicy `pulumi:"tentacleRetentionPolicies"`
}

// LifecyclePhaseInput is an input type that accepts LifecyclePhaseArgs and LifecyclePhaseOutput values.
// You can construct a concrete instance of `LifecyclePhaseInput` via:
//
//	LifecyclePhaseArgs{...}
type LifecyclePhaseInput interface {
	pulumi.Input

	ToLifecyclePhaseOutput() LifecyclePhaseOutput
	ToLifecyclePhaseOutputWithContext(context.Context) LifecyclePhaseOutput
}

type LifecyclePhaseArgs struct {
	// Environment IDs in this phase that a release is automatically deployed to when it is eligible for this phase
	AutomaticDeploymentTargets pulumi.StringArrayInput `pulumi:"automaticDeploymentTargets"`
	// The unique ID for this resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// If false a release must be deployed to this phase before it can be deployed to the next phase.
	IsOptionalPhase pulumi.BoolPtrInput `pulumi:"isOptionalPhase"`
	// The number of units required before a release can enter the next phase. If 0, all environments are required.
	MinimumEnvironmentsBeforePromotion pulumi.IntPtrInput `pulumi:"minimumEnvironmentsBeforePromotion"`
	// The name of this resource.
	Name pulumi.StringInput `pulumi:"name"`
	// Environment IDs in this phase that a release can be deployed to, but is not automatically deployed to
	OptionalDeploymentTargets pulumi.StringArrayInput `pulumi:"optionalDeploymentTargets"`
	// Defines the retention policy for releases or tentacles.
	ReleaseRetentionPolicies LifecyclePhaseReleaseRetentionPolicyArrayInput `pulumi:"releaseRetentionPolicies"`
	// Defines the retention policy for releases or tentacles.
	TentacleRetentionPolicies LifecyclePhaseTentacleRetentionPolicyArrayInput `pulumi:"tentacleRetentionPolicies"`
}

func (LifecyclePhaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePhase)(nil)).Elem()
}

func (i LifecyclePhaseArgs) ToLifecyclePhaseOutput() LifecyclePhaseOutput {
	return i.ToLifecyclePhaseOutputWithContext(context.Background())
}

func (i LifecyclePhaseArgs) ToLifecyclePhaseOutputWithContext(ctx context.Context) LifecyclePhaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePhaseOutput)
}

// LifecyclePhaseArrayInput is an input type that accepts LifecyclePhaseArray and LifecyclePhaseArrayOutput values.
// You can construct a concrete instance of `LifecyclePhaseArrayInput` via:
//
//	LifecyclePhaseArray{ LifecyclePhaseArgs{...} }
type LifecyclePhaseArrayInput interface {
	pulumi.Input

	ToLifecyclePhaseArrayOutput() LifecyclePhaseArrayOutput
	ToLifecyclePhaseArrayOutputWithContext(context.Context) LifecyclePhaseArrayOutput
}

type LifecyclePhaseArray []LifecyclePhaseInput

func (LifecyclePhaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecyclePhase)(nil)).Elem()
}

func (i LifecyclePhaseArray) ToLifecyclePhaseArrayOutput() LifecyclePhaseArrayOutput {
	return i.ToLifecyclePhaseArrayOutputWithContext(context.Background())
}

func (i LifecyclePhaseArray) ToLifecyclePhaseArrayOutputWithContext(ctx context.Context) LifecyclePhaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePhaseArrayOutput)
}

type LifecyclePhaseOutput struct{ *pulumi.OutputState }

func (LifecyclePhaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePhase)(nil)).Elem()
}

func (o LifecyclePhaseOutput) ToLifecyclePhaseOutput() LifecyclePhaseOutput {
	return o
}

func (o LifecyclePhaseOutput) ToLifecyclePhaseOutputWithContext(ctx context.Context) LifecyclePhaseOutput {
	return o
}

// Environment IDs in this phase that a release is automatically deployed to when it is eligible for this phase
func (o LifecyclePhaseOutput) AutomaticDeploymentTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LifecyclePhase) []string { return v.AutomaticDeploymentTargets }).(pulumi.StringArrayOutput)
}

// The unique ID for this resource.
func (o LifecyclePhaseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecyclePhase) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// If false a release must be deployed to this phase before it can be deployed to the next phase.
func (o LifecyclePhaseOutput) IsOptionalPhase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LifecyclePhase) *bool { return v.IsOptionalPhase }).(pulumi.BoolPtrOutput)
}

// The number of units required before a release can enter the next phase. If 0, all environments are required.
func (o LifecyclePhaseOutput) MinimumEnvironmentsBeforePromotion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LifecyclePhase) *int { return v.MinimumEnvironmentsBeforePromotion }).(pulumi.IntPtrOutput)
}

// The name of this resource.
func (o LifecyclePhaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LifecyclePhase) string { return v.Name }).(pulumi.StringOutput)
}

// Environment IDs in this phase that a release can be deployed to, but is not automatically deployed to
func (o LifecyclePhaseOutput) OptionalDeploymentTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LifecyclePhase) []string { return v.OptionalDeploymentTargets }).(pulumi.StringArrayOutput)
}

// Defines the retention policy for releases or tentacles.
func (o LifecyclePhaseOutput) ReleaseRetentionPolicies() LifecyclePhaseReleaseRetentionPolicyArrayOutput {
	return o.ApplyT(func(v LifecyclePhase) []LifecyclePhaseReleaseRetentionPolicy { return v.ReleaseRetentionPolicies }).(LifecyclePhaseReleaseRetentionPolicyArrayOutput)
}

// Defines the retention policy for releases or tentacles.
func (o LifecyclePhaseOutput) TentacleRetentionPolicies() LifecyclePhaseTentacleRetentionPolicyArrayOutput {
	return o.ApplyT(func(v LifecyclePhase) []LifecyclePhaseTentacleRetentionPolicy { return v.TentacleRetentionPolicies }).(LifecyclePhaseTentacleRetentionPolicyArrayOutput)
}

type LifecyclePhaseArrayOutput struct{ *pulumi.OutputState }

func (LifecyclePhaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecyclePhase)(nil)).Elem()
}

func (o LifecyclePhaseArrayOutput) ToLifecyclePhaseArrayOutput() LifecyclePhaseArrayOutput {
	return o
}

func (o LifecyclePhaseArrayOutput) ToLifecyclePhaseArrayOutputWithContext(ctx context.Context) LifecyclePhaseArrayOutput {
	return o
}

func (o LifecyclePhaseArrayOutput) Index(i pulumi.IntInput) LifecyclePhaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LifecyclePhase {
		return vs[0].([]LifecyclePhase)[vs[1].(int)]
	}).(LifecyclePhaseOutput)
}

type LifecyclePhaseReleaseRetentionPolicy struct {
	// The number of days/releases to keep. The default value is 30. If 0 then all are kept.
	QuantityToKeep *int `pulumi:"quantityToKeep"`
	// Indicates if items should never be deleted. The default value is false.
	ShouldKeepForever *bool `pulumi:"shouldKeepForever"`
	// The unit of quantity to keep. Valid units are Days or Items. The default value is Days.
	Unit *string `pulumi:"unit"`
}

// LifecyclePhaseReleaseRetentionPolicyInput is an input type that accepts LifecyclePhaseReleaseRetentionPolicyArgs and LifecyclePhaseReleaseRetentionPolicyOutput values.
// You can construct a concrete instance of `LifecyclePhaseReleaseRetentionPolicyInput` via:
//
//	LifecyclePhaseReleaseRetentionPolicyArgs{...}
type LifecyclePhaseReleaseRetentionPolicyInput interface {
	pulumi.Input

	ToLifecyclePhaseReleaseRetentionPolicyOutput() LifecyclePhaseReleaseRetentionPolicyOutput
	ToLifecyclePhaseReleaseRetentionPolicyOutputWithContext(context.Context) LifecyclePhaseReleaseRetentionPolicyOutput
}

type LifecyclePhaseReleaseRetentionPolicyArgs struct {
	// The number of days/releases to keep. The default value is 30. If 0 then all are kept.
	QuantityToKeep pulumi.IntPtrInput `pulumi:"quantityToKeep"`
	// Indicates if items should never be deleted. The default value is false.
	ShouldKeepForever pulumi.BoolPtrInput `pulumi:"shouldKeepForever"`
	// The unit of quantity to keep. Valid units are Days or Items. The default value is Days.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (LifecyclePhaseReleaseRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePhaseReleaseRetentionPolicy)(nil)).Elem()
}

func (i LifecyclePhaseReleaseRetentionPolicyArgs) ToLifecyclePhaseReleaseRetentionPolicyOutput() LifecyclePhaseReleaseRetentionPolicyOutput {
	return i.ToLifecyclePhaseReleaseRetentionPolicyOutputWithContext(context.Background())
}

func (i LifecyclePhaseReleaseRetentionPolicyArgs) ToLifecyclePhaseReleaseRetentionPolicyOutputWithContext(ctx context.Context) LifecyclePhaseReleaseRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePhaseReleaseRetentionPolicyOutput)
}

// LifecyclePhaseReleaseRetentionPolicyArrayInput is an input type that accepts LifecyclePhaseReleaseRetentionPolicyArray and LifecyclePhaseReleaseRetentionPolicyArrayOutput values.
// You can construct a concrete instance of `LifecyclePhaseReleaseRetentionPolicyArrayInput` via:
//
//	LifecyclePhaseReleaseRetentionPolicyArray{ LifecyclePhaseReleaseRetentionPolicyArgs{...} }
type LifecyclePhaseReleaseRetentionPolicyArrayInput interface {
	pulumi.Input

	ToLifecyclePhaseReleaseRetentionPolicyArrayOutput() LifecyclePhaseReleaseRetentionPolicyArrayOutput
	ToLifecyclePhaseReleaseRetentionPolicyArrayOutputWithContext(context.Context) LifecyclePhaseReleaseRetentionPolicyArrayOutput
}

type LifecyclePhaseReleaseRetentionPolicyArray []LifecyclePhaseReleaseRetentionPolicyInput

func (LifecyclePhaseReleaseRetentionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecyclePhaseReleaseRetentionPolicy)(nil)).Elem()
}

func (i LifecyclePhaseReleaseRetentionPolicyArray) ToLifecyclePhaseReleaseRetentionPolicyArrayOutput() LifecyclePhaseReleaseRetentionPolicyArrayOutput {
	return i.ToLifecyclePhaseReleaseRetentionPolicyArrayOutputWithContext(context.Background())
}

func (i LifecyclePhaseReleaseRetentionPolicyArray) ToLifecyclePhaseReleaseRetentionPolicyArrayOutputWithContext(ctx context.Context) LifecyclePhaseReleaseRetentionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePhaseReleaseRetentionPolicyArrayOutput)
}

type LifecyclePhaseReleaseRetentionPolicyOutput struct{ *pulumi.OutputState }

func (LifecyclePhaseReleaseRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePhaseReleaseRetentionPolicy)(nil)).Elem()
}

func (o LifecyclePhaseReleaseRetentionPolicyOutput) ToLifecyclePhaseReleaseRetentionPolicyOutput() LifecyclePhaseReleaseRetentionPolicyOutput {
	return o
}

func (o LifecyclePhaseReleaseRetentionPolicyOutput) ToLifecyclePhaseReleaseRetentionPolicyOutputWithContext(ctx context.Context) LifecyclePhaseReleaseRetentionPolicyOutput {
	return o
}

// The number of days/releases to keep. The default value is 30. If 0 then all are kept.
func (o LifecyclePhaseReleaseRetentionPolicyOutput) QuantityToKeep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LifecyclePhaseReleaseRetentionPolicy) *int { return v.QuantityToKeep }).(pulumi.IntPtrOutput)
}

// Indicates if items should never be deleted. The default value is false.
func (o LifecyclePhaseReleaseRetentionPolicyOutput) ShouldKeepForever() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LifecyclePhaseReleaseRetentionPolicy) *bool { return v.ShouldKeepForever }).(pulumi.BoolPtrOutput)
}

// The unit of quantity to keep. Valid units are Days or Items. The default value is Days.
func (o LifecyclePhaseReleaseRetentionPolicyOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecyclePhaseReleaseRetentionPolicy) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type LifecyclePhaseReleaseRetentionPolicyArrayOutput struct{ *pulumi.OutputState }

func (LifecyclePhaseReleaseRetentionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecyclePhaseReleaseRetentionPolicy)(nil)).Elem()
}

func (o LifecyclePhaseReleaseRetentionPolicyArrayOutput) ToLifecyclePhaseReleaseRetentionPolicyArrayOutput() LifecyclePhaseReleaseRetentionPolicyArrayOutput {
	return o
}

func (o LifecyclePhaseReleaseRetentionPolicyArrayOutput) ToLifecyclePhaseReleaseRetentionPolicyArrayOutputWithContext(ctx context.Context) LifecyclePhaseReleaseRetentionPolicyArrayOutput {
	return o
}

func (o LifecyclePhaseReleaseRetentionPolicyArrayOutput) Index(i pulumi.IntInput) LifecyclePhaseReleaseRetentionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LifecyclePhaseReleaseRetentionPolicy {
		return vs[0].([]LifecyclePhaseReleaseRetentionPolicy)[vs[1].(int)]
	}).(LifecyclePhaseReleaseRetentionPolicyOutput)
}

type LifecyclePhaseTentacleRetentionPolicy struct {
	// The number of days/releases to keep. The default value is 30. If 0 then all are kept.
	QuantityToKeep *int `pulumi:"quantityToKeep"`
	// Indicates if items should never be deleted. The default value is false.
	ShouldKeepForever *bool `pulumi:"shouldKeepForever"`
	// The unit of quantity to keep. Valid units are Days or Items. The default value is Days.
	Unit *string `pulumi:"unit"`
}

// LifecyclePhaseTentacleRetentionPolicyInput is an input type that accepts LifecyclePhaseTentacleRetentionPolicyArgs and LifecyclePhaseTentacleRetentionPolicyOutput values.
// You can construct a concrete instance of `LifecyclePhaseTentacleRetentionPolicyInput` via:
//
//	LifecyclePhaseTentacleRetentionPolicyArgs{...}
type LifecyclePhaseTentacleRetentionPolicyInput interface {
	pulumi.Input

	ToLifecyclePhaseTentacleRetentionPolicyOutput() LifecyclePhaseTentacleRetentionPolicyOutput
	ToLifecyclePhaseTentacleRetentionPolicyOutputWithContext(context.Context) LifecyclePhaseTentacleRetentionPolicyOutput
}

type LifecyclePhaseTentacleRetentionPolicyArgs struct {
	// The number of days/releases to keep. The default value is 30. If 0 then all are kept.
	QuantityToKeep pulumi.IntPtrInput `pulumi:"quantityToKeep"`
	// Indicates if items should never be deleted. The default value is false.
	ShouldKeepForever pulumi.BoolPtrInput `pulumi:"shouldKeepForever"`
	// The unit of quantity to keep. Valid units are Days or Items. The default value is Days.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (LifecyclePhaseTentacleRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePhaseTentacleRetentionPolicy)(nil)).Elem()
}

func (i LifecyclePhaseTentacleRetentionPolicyArgs) ToLifecyclePhaseTentacleRetentionPolicyOutput() LifecyclePhaseTentacleRetentionPolicyOutput {
	return i.ToLifecyclePhaseTentacleRetentionPolicyOutputWithContext(context.Background())
}

func (i LifecyclePhaseTentacleRetentionPolicyArgs) ToLifecyclePhaseTentacleRetentionPolicyOutputWithContext(ctx context.Context) LifecyclePhaseTentacleRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePhaseTentacleRetentionPolicyOutput)
}

// LifecyclePhaseTentacleRetentionPolicyArrayInput is an input type that accepts LifecyclePhaseTentacleRetentionPolicyArray and LifecyclePhaseTentacleRetentionPolicyArrayOutput values.
// You can construct a concrete instance of `LifecyclePhaseTentacleRetentionPolicyArrayInput` via:
//
//	LifecyclePhaseTentacleRetentionPolicyArray{ LifecyclePhaseTentacleRetentionPolicyArgs{...} }
type LifecyclePhaseTentacleRetentionPolicyArrayInput interface {
	pulumi.Input

	ToLifecyclePhaseTentacleRetentionPolicyArrayOutput() LifecyclePhaseTentacleRetentionPolicyArrayOutput
	ToLifecyclePhaseTentacleRetentionPolicyArrayOutputWithContext(context.Context) LifecyclePhaseTentacleRetentionPolicyArrayOutput
}

type LifecyclePhaseTentacleRetentionPolicyArray []LifecyclePhaseTentacleRetentionPolicyInput

func (LifecyclePhaseTentacleRetentionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecyclePhaseTentacleRetentionPolicy)(nil)).Elem()
}

func (i LifecyclePhaseTentacleRetentionPolicyArray) ToLifecyclePhaseTentacleRetentionPolicyArrayOutput() LifecyclePhaseTentacleRetentionPolicyArrayOutput {
	return i.ToLifecyclePhaseTentacleRetentionPolicyArrayOutputWithContext(context.Background())
}

func (i LifecyclePhaseTentacleRetentionPolicyArray) ToLifecyclePhaseTentacleRetentionPolicyArrayOutputWithContext(ctx context.Context) LifecyclePhaseTentacleRetentionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePhaseTentacleRetentionPolicyArrayOutput)
}

type LifecyclePhaseTentacleRetentionPolicyOutput struct{ *pulumi.OutputState }

func (LifecyclePhaseTentacleRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePhaseTentacleRetentionPolicy)(nil)).Elem()
}

func (o LifecyclePhaseTentacleRetentionPolicyOutput) ToLifecyclePhaseTentacleRetentionPolicyOutput() LifecyclePhaseTentacleRetentionPolicyOutput {
	return o
}

func (o LifecyclePhaseTentacleRetentionPolicyOutput) ToLifecyclePhaseTentacleRetentionPolicyOutputWithContext(ctx context.Context) LifecyclePhaseTentacleRetentionPolicyOutput {
	return o
}

// The number of days/releases to keep. The default value is 30. If 0 then all are kept.
func (o LifecyclePhaseTentacleRetentionPolicyOutput) QuantityToKeep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LifecyclePhaseTentacleRetentionPolicy) *int { return v.QuantityToKeep }).(pulumi.IntPtrOutput)
}

// Indicates if items should never be deleted. The default value is false.
func (o LifecyclePhaseTentacleRetentionPolicyOutput) ShouldKeepForever() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LifecyclePhaseTentacleRetentionPolicy) *bool { return v.ShouldKeepForever }).(pulumi.BoolPtrOutput)
}

// The unit of quantity to keep. Valid units are Days or Items. The default value is Days.
func (o LifecyclePhaseTentacleRetentionPolicyOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecyclePhaseTentacleRetentionPolicy) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type LifecyclePhaseTentacleRetentionPolicyArrayOutput struct{ *pulumi.OutputState }

func (LifecyclePhaseTentacleRetentionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecyclePhaseTentacleRetentionPolicy)(nil)).Elem()
}

func (o LifecyclePhaseTentacleRetentionPolicyArrayOutput) ToLifecyclePhaseTentacleRetentionPolicyArrayOutput() LifecyclePhaseTentacleRetentionPolicyArrayOutput {
	return o
}

func (o LifecyclePhaseTentacleRetentionPolicyArrayOutput) ToLifecyclePhaseTentacleRetentionPolicyArrayOutputWithContext(ctx context.Context) LifecyclePhaseTentacleRetentionPolicyArrayOutput {
	return o
}

func (o LifecyclePhaseTentacleRetentionPolicyArrayOutput) Index(i pulumi.IntInput) LifecyclePhaseTentacleRetentionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LifecyclePhaseTentacleRetentionPolicy {
		return vs[0].([]LifecyclePhaseTentacleRetentionPolicy)[vs[1].(int)]
	}).(LifecyclePhaseTentacleRetentionPolicyOutput)
}

type LifecycleReleaseRetentionPolicy struct {
	// The number of days/releases to keep. The default value is 30. If 0 then all are kept.
	QuantityToKeep *int `pulumi:"quantityToKeep"`
	// Indicates if items should never be deleted. The default value is false.
	ShouldKeepForever *bool `pulumi:"shouldKeepForever"`
	// The unit of quantity to keep. Valid units are Days or Items. The default value is Days.
	Unit *string `pulumi:"unit"`
}

// LifecycleReleaseRetentionPolicyInput is an input type that accepts LifecycleReleaseRetentionPolicyArgs and LifecycleReleaseRetentionPolicyOutput values.
// You can construct a concrete instance of `LifecycleReleaseRetentionPolicyInput` via:
//
//	LifecycleReleaseRetentionPolicyArgs{...}
type LifecycleReleaseRetentionPolicyInput interface {
	pulumi.Input

	ToLifecycleReleaseRetentionPolicyOutput() LifecycleReleaseRetentionPolicyOutput
	ToLifecycleReleaseRetentionPolicyOutputWithContext(context.Context) LifecycleReleaseRetentionPolicyOutput
}

type LifecycleReleaseRetentionPolicyArgs struct {
	// The number of days/releases to keep. The default value is 30. If 0 then all are kept.
	QuantityToKeep pulumi.IntPtrInput `pulumi:"quantityToKeep"`
	// Indicates if items should never be deleted. The default value is false.
	ShouldKeepForever pulumi.BoolPtrInput `pulumi:"shouldKeepForever"`
	// The unit of quantity to keep. Valid units are Days or Items. The default value is Days.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (LifecycleReleaseRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecycleReleaseRetentionPolicy)(nil)).Elem()
}

func (i LifecycleReleaseRetentionPolicyArgs) ToLifecycleReleaseRetentionPolicyOutput() LifecycleReleaseRetentionPolicyOutput {
	return i.ToLifecycleReleaseRetentionPolicyOutputWithContext(context.Background())
}

func (i LifecycleReleaseRetentionPolicyArgs) ToLifecycleReleaseRetentionPolicyOutputWithContext(ctx context.Context) LifecycleReleaseRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleReleaseRetentionPolicyOutput)
}

// LifecycleReleaseRetentionPolicyArrayInput is an input type that accepts LifecycleReleaseRetentionPolicyArray and LifecycleReleaseRetentionPolicyArrayOutput values.
// You can construct a concrete instance of `LifecycleReleaseRetentionPolicyArrayInput` via:
//
//	LifecycleReleaseRetentionPolicyArray{ LifecycleReleaseRetentionPolicyArgs{...} }
type LifecycleReleaseRetentionPolicyArrayInput interface {
	pulumi.Input

	ToLifecycleReleaseRetentionPolicyArrayOutput() LifecycleReleaseRetentionPolicyArrayOutput
	ToLifecycleReleaseRetentionPolicyArrayOutputWithContext(context.Context) LifecycleReleaseRetentionPolicyArrayOutput
}

type LifecycleReleaseRetentionPolicyArray []LifecycleReleaseRetentionPolicyInput

func (LifecycleReleaseRetentionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecycleReleaseRetentionPolicy)(nil)).Elem()
}

func (i LifecycleReleaseRetentionPolicyArray) ToLifecycleReleaseRetentionPolicyArrayOutput() LifecycleReleaseRetentionPolicyArrayOutput {
	return i.ToLifecycleReleaseRetentionPolicyArrayOutputWithContext(context.Background())
}

func (i LifecycleReleaseRetentionPolicyArray) ToLifecycleReleaseRetentionPolicyArrayOutputWithContext(ctx context.Context) LifecycleReleaseRetentionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleReleaseRetentionPolicyArrayOutput)
}

type LifecycleReleaseRetentionPolicyOutput struct{ *pulumi.OutputState }

func (LifecycleReleaseRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecycleReleaseRetentionPolicy)(nil)).Elem()
}

func (o LifecycleReleaseRetentionPolicyOutput) ToLifecycleReleaseRetentionPolicyOutput() LifecycleReleaseRetentionPolicyOutput {
	return o
}

func (o LifecycleReleaseRetentionPolicyOutput) ToLifecycleReleaseRetentionPolicyOutputWithContext(ctx context.Context) LifecycleReleaseRetentionPolicyOutput {
	return o
}

// The number of days/releases to keep. The default value is 30. If 0 then all are kept.
func (o LifecycleReleaseRetentionPolicyOutput) QuantityToKeep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LifecycleReleaseRetentionPolicy) *int { return v.QuantityToKeep }).(pulumi.IntPtrOutput)
}

// Indicates if items should never be deleted. The default value is false.
func (o LifecycleReleaseRetentionPolicyOutput) ShouldKeepForever() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LifecycleReleaseRetentionPolicy) *bool { return v.ShouldKeepForever }).(pulumi.BoolPtrOutput)
}

// The unit of quantity to keep. Valid units are Days or Items. The default value is Days.
func (o LifecycleReleaseRetentionPolicyOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecycleReleaseRetentionPolicy) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type LifecycleReleaseRetentionPolicyArrayOutput struct{ *pulumi.OutputState }

func (LifecycleReleaseRetentionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecycleReleaseRetentionPolicy)(nil)).Elem()
}

func (o LifecycleReleaseRetentionPolicyArrayOutput) ToLifecycleReleaseRetentionPolicyArrayOutput() LifecycleReleaseRetentionPolicyArrayOutput {
	return o
}

func (o LifecycleReleaseRetentionPolicyArrayOutput) ToLifecycleReleaseRetentionPolicyArrayOutputWithContext(ctx context.Context) LifecycleReleaseRetentionPolicyArrayOutput {
	return o
}

func (o LifecycleReleaseRetentionPolicyArrayOutput) Index(i pulumi.IntInput) LifecycleReleaseRetentionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LifecycleReleaseRetentionPolicy {
		return vs[0].([]LifecycleReleaseRetentionPolicy)[vs[1].(int)]
	}).(LifecycleReleaseRetentionPolicyOutput)
}

type LifecycleTentacleRetentionPolicy struct {
	// The number of days/releases to keep. The default value is 30. If 0 then all are kept.
	QuantityToKeep *int `pulumi:"quantityToKeep"`
	// Indicates if items should never be deleted. The default value is false.
	ShouldKeepForever *bool `pulumi:"shouldKeepForever"`
	// The unit of quantity to keep. Valid units are Days or Items. The default value is Days.
	Unit *string `pulumi:"unit"`
}

// LifecycleTentacleRetentionPolicyInput is an input type that accepts LifecycleTentacleRetentionPolicyArgs and LifecycleTentacleRetentionPolicyOutput values.
// You can construct a concrete instance of `LifecycleTentacleRetentionPolicyInput` via:
//
//	LifecycleTentacleRetentionPolicyArgs{...}
type LifecycleTentacleRetentionPolicyInput interface {
	pulumi.Input

	ToLifecycleTentacleRetentionPolicyOutput() LifecycleTentacleRetentionPolicyOutput
	ToLifecycleTentacleRetentionPolicyOutputWithContext(context.Context) LifecycleTentacleRetentionPolicyOutput
}

type LifecycleTentacleRetentionPolicyArgs struct {
	// The number of days/releases to keep. The default value is 30. If 0 then all are kept.
	QuantityToKeep pulumi.IntPtrInput `pulumi:"quantityToKeep"`
	// Indicates if items should never be deleted. The default value is false.
	ShouldKeepForever pulumi.BoolPtrInput `pulumi:"shouldKeepForever"`
	// The unit of quantity to keep. Valid units are Days or Items. The default value is Days.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (LifecycleTentacleRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecycleTentacleRetentionPolicy)(nil)).Elem()
}

func (i LifecycleTentacleRetentionPolicyArgs) ToLifecycleTentacleRetentionPolicyOutput() LifecycleTentacleRetentionPolicyOutput {
	return i.ToLifecycleTentacleRetentionPolicyOutputWithContext(context.Background())
}

func (i LifecycleTentacleRetentionPolicyArgs) ToLifecycleTentacleRetentionPolicyOutputWithContext(ctx context.Context) LifecycleTentacleRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleTentacleRetentionPolicyOutput)
}

// LifecycleTentacleRetentionPolicyArrayInput is an input type that accepts LifecycleTentacleRetentionPolicyArray and LifecycleTentacleRetentionPolicyArrayOutput values.
// You can construct a concrete instance of `LifecycleTentacleRetentionPolicyArrayInput` via:
//
//	LifecycleTentacleRetentionPolicyArray{ LifecycleTentacleRetentionPolicyArgs{...} }
type LifecycleTentacleRetentionPolicyArrayInput interface {
	pulumi.Input

	ToLifecycleTentacleRetentionPolicyArrayOutput() LifecycleTentacleRetentionPolicyArrayOutput
	ToLifecycleTentacleRetentionPolicyArrayOutputWithContext(context.Context) LifecycleTentacleRetentionPolicyArrayOutput
}

type LifecycleTentacleRetentionPolicyArray []LifecycleTentacleRetentionPolicyInput

func (LifecycleTentacleRetentionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecycleTentacleRetentionPolicy)(nil)).Elem()
}

func (i LifecycleTentacleRetentionPolicyArray) ToLifecycleTentacleRetentionPolicyArrayOutput() LifecycleTentacleRetentionPolicyArrayOutput {
	return i.ToLifecycleTentacleRetentionPolicyArrayOutputWithContext(context.Background())
}

func (i LifecycleTentacleRetentionPolicyArray) ToLifecycleTentacleRetentionPolicyArrayOutputWithContext(ctx context.Context) LifecycleTentacleRetentionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleTentacleRetentionPolicyArrayOutput)
}

type LifecycleTentacleRetentionPolicyOutput struct{ *pulumi.OutputState }

func (LifecycleTentacleRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecycleTentacleRetentionPolicy)(nil)).Elem()
}

func (o LifecycleTentacleRetentionPolicyOutput) ToLifecycleTentacleRetentionPolicyOutput() LifecycleTentacleRetentionPolicyOutput {
	return o
}

func (o LifecycleTentacleRetentionPolicyOutput) ToLifecycleTentacleRetentionPolicyOutputWithContext(ctx context.Context) LifecycleTentacleRetentionPolicyOutput {
	return o
}

// The number of days/releases to keep. The default value is 30. If 0 then all are kept.
func (o LifecycleTentacleRetentionPolicyOutput) QuantityToKeep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LifecycleTentacleRetentionPolicy) *int { return v.QuantityToKeep }).(pulumi.IntPtrOutput)
}

// Indicates if items should never be deleted. The default value is false.
func (o LifecycleTentacleRetentionPolicyOutput) ShouldKeepForever() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LifecycleTentacleRetentionPolicy) *bool { return v.ShouldKeepForever }).(pulumi.BoolPtrOutput)
}

// The unit of quantity to keep. Valid units are Days or Items. The default value is Days.
func (o LifecycleTentacleRetentionPolicyOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecycleTentacleRetentionPolicy) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type LifecycleTentacleRetentionPolicyArrayOutput struct{ *pulumi.OutputState }

func (LifecycleTentacleRetentionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecycleTentacleRetentionPolicy)(nil)).Elem()
}

func (o LifecycleTentacleRetentionPolicyArrayOutput) ToLifecycleTentacleRetentionPolicyArrayOutput() LifecycleTentacleRetentionPolicyArrayOutput {
	return o
}

func (o LifecycleTentacleRetentionPolicyArrayOutput) ToLifecycleTentacleRetentionPolicyArrayOutputWithContext(ctx context.Context) LifecycleTentacleRetentionPolicyArrayOutput {
	return o
}

func (o LifecycleTentacleRetentionPolicyArrayOutput) Index(i pulumi.IntInput) LifecycleTentacleRetentionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LifecycleTentacleRetentionPolicy {
		return vs[0].([]LifecycleTentacleRetentionPolicy)[vs[1].(int)]
	}).(LifecycleTentacleRetentionPolicyOutput)
}

type ProjectAutoDeployReleaseOverride struct {
	EnvironmentId *string `pulumi:"environmentId"`
	ReleaseId     *string `pulumi:"releaseId"`
	TenantId      *string `pulumi:"tenantId"`
}

// ProjectAutoDeployReleaseOverrideInput is an input type that accepts ProjectAutoDeployReleaseOverrideArgs and ProjectAutoDeployReleaseOverrideOutput values.
// You can construct a concrete instance of `ProjectAutoDeployReleaseOverrideInput` via:
//
//	ProjectAutoDeployReleaseOverrideArgs{...}
type ProjectAutoDeployReleaseOverrideInput interface {
	pulumi.Input

	ToProjectAutoDeployReleaseOverrideOutput() ProjectAutoDeployReleaseOverrideOutput
	ToProjectAutoDeployReleaseOverrideOutputWithContext(context.Context) ProjectAutoDeployReleaseOverrideOutput
}

type ProjectAutoDeployReleaseOverrideArgs struct {
	EnvironmentId pulumi.StringPtrInput `pulumi:"environmentId"`
	ReleaseId     pulumi.StringPtrInput `pulumi:"releaseId"`
	TenantId      pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (ProjectAutoDeployReleaseOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAutoDeployReleaseOverride)(nil)).Elem()
}

func (i ProjectAutoDeployReleaseOverrideArgs) ToProjectAutoDeployReleaseOverrideOutput() ProjectAutoDeployReleaseOverrideOutput {
	return i.ToProjectAutoDeployReleaseOverrideOutputWithContext(context.Background())
}

func (i ProjectAutoDeployReleaseOverrideArgs) ToProjectAutoDeployReleaseOverrideOutputWithContext(ctx context.Context) ProjectAutoDeployReleaseOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAutoDeployReleaseOverrideOutput)
}

// ProjectAutoDeployReleaseOverrideArrayInput is an input type that accepts ProjectAutoDeployReleaseOverrideArray and ProjectAutoDeployReleaseOverrideArrayOutput values.
// You can construct a concrete instance of `ProjectAutoDeployReleaseOverrideArrayInput` via:
//
//	ProjectAutoDeployReleaseOverrideArray{ ProjectAutoDeployReleaseOverrideArgs{...} }
type ProjectAutoDeployReleaseOverrideArrayInput interface {
	pulumi.Input

	ToProjectAutoDeployReleaseOverrideArrayOutput() ProjectAutoDeployReleaseOverrideArrayOutput
	ToProjectAutoDeployReleaseOverrideArrayOutputWithContext(context.Context) ProjectAutoDeployReleaseOverrideArrayOutput
}

type ProjectAutoDeployReleaseOverrideArray []ProjectAutoDeployReleaseOverrideInput

func (ProjectAutoDeployReleaseOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAutoDeployReleaseOverride)(nil)).Elem()
}

func (i ProjectAutoDeployReleaseOverrideArray) ToProjectAutoDeployReleaseOverrideArrayOutput() ProjectAutoDeployReleaseOverrideArrayOutput {
	return i.ToProjectAutoDeployReleaseOverrideArrayOutputWithContext(context.Background())
}

func (i ProjectAutoDeployReleaseOverrideArray) ToProjectAutoDeployReleaseOverrideArrayOutputWithContext(ctx context.Context) ProjectAutoDeployReleaseOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAutoDeployReleaseOverrideArrayOutput)
}

type ProjectAutoDeployReleaseOverrideOutput struct{ *pulumi.OutputState }

func (ProjectAutoDeployReleaseOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAutoDeployReleaseOverride)(nil)).Elem()
}

func (o ProjectAutoDeployReleaseOverrideOutput) ToProjectAutoDeployReleaseOverrideOutput() ProjectAutoDeployReleaseOverrideOutput {
	return o
}

func (o ProjectAutoDeployReleaseOverrideOutput) ToProjectAutoDeployReleaseOverrideOutputWithContext(ctx context.Context) ProjectAutoDeployReleaseOverrideOutput {
	return o
}

func (o ProjectAutoDeployReleaseOverrideOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAutoDeployReleaseOverride) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

func (o ProjectAutoDeployReleaseOverrideOutput) ReleaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAutoDeployReleaseOverride) *string { return v.ReleaseId }).(pulumi.StringPtrOutput)
}

func (o ProjectAutoDeployReleaseOverrideOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAutoDeployReleaseOverride) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type ProjectAutoDeployReleaseOverrideArrayOutput struct{ *pulumi.OutputState }

func (ProjectAutoDeployReleaseOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAutoDeployReleaseOverride)(nil)).Elem()
}

func (o ProjectAutoDeployReleaseOverrideArrayOutput) ToProjectAutoDeployReleaseOverrideArrayOutput() ProjectAutoDeployReleaseOverrideArrayOutput {
	return o
}

func (o ProjectAutoDeployReleaseOverrideArrayOutput) ToProjectAutoDeployReleaseOverrideArrayOutputWithContext(ctx context.Context) ProjectAutoDeployReleaseOverrideArrayOutput {
	return o
}

func (o ProjectAutoDeployReleaseOverrideArrayOutput) Index(i pulumi.IntInput) ProjectAutoDeployReleaseOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectAutoDeployReleaseOverride {
		return vs[0].([]ProjectAutoDeployReleaseOverride)[vs[1].(int)]
	}).(ProjectAutoDeployReleaseOverrideOutput)
}

type ProjectConnectivityPolicy struct {
	AllowDeploymentsToNoTargets *bool    `pulumi:"allowDeploymentsToNoTargets"`
	ExcludeUnhealthyTargets     *bool    `pulumi:"excludeUnhealthyTargets"`
	SkipMachineBehavior         *string  `pulumi:"skipMachineBehavior"`
	TargetRoles                 []string `pulumi:"targetRoles"`
}

// ProjectConnectivityPolicyInput is an input type that accepts ProjectConnectivityPolicyArgs and ProjectConnectivityPolicyOutput values.
// You can construct a concrete instance of `ProjectConnectivityPolicyInput` via:
//
//	ProjectConnectivityPolicyArgs{...}
type ProjectConnectivityPolicyInput interface {
	pulumi.Input

	ToProjectConnectivityPolicyOutput() ProjectConnectivityPolicyOutput
	ToProjectConnectivityPolicyOutputWithContext(context.Context) ProjectConnectivityPolicyOutput
}

type ProjectConnectivityPolicyArgs struct {
	AllowDeploymentsToNoTargets pulumi.BoolPtrInput     `pulumi:"allowDeploymentsToNoTargets"`
	ExcludeUnhealthyTargets     pulumi.BoolPtrInput     `pulumi:"excludeUnhealthyTargets"`
	SkipMachineBehavior         pulumi.StringPtrInput   `pulumi:"skipMachineBehavior"`
	TargetRoles                 pulumi.StringArrayInput `pulumi:"targetRoles"`
}

func (ProjectConnectivityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConnectivityPolicy)(nil)).Elem()
}

func (i ProjectConnectivityPolicyArgs) ToProjectConnectivityPolicyOutput() ProjectConnectivityPolicyOutput {
	return i.ToProjectConnectivityPolicyOutputWithContext(context.Background())
}

func (i ProjectConnectivityPolicyArgs) ToProjectConnectivityPolicyOutputWithContext(ctx context.Context) ProjectConnectivityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConnectivityPolicyOutput)
}

// ProjectConnectivityPolicyArrayInput is an input type that accepts ProjectConnectivityPolicyArray and ProjectConnectivityPolicyArrayOutput values.
// You can construct a concrete instance of `ProjectConnectivityPolicyArrayInput` via:
//
//	ProjectConnectivityPolicyArray{ ProjectConnectivityPolicyArgs{...} }
type ProjectConnectivityPolicyArrayInput interface {
	pulumi.Input

	ToProjectConnectivityPolicyArrayOutput() ProjectConnectivityPolicyArrayOutput
	ToProjectConnectivityPolicyArrayOutputWithContext(context.Context) ProjectConnectivityPolicyArrayOutput
}

type ProjectConnectivityPolicyArray []ProjectConnectivityPolicyInput

func (ProjectConnectivityPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectConnectivityPolicy)(nil)).Elem()
}

func (i ProjectConnectivityPolicyArray) ToProjectConnectivityPolicyArrayOutput() ProjectConnectivityPolicyArrayOutput {
	return i.ToProjectConnectivityPolicyArrayOutputWithContext(context.Background())
}

func (i ProjectConnectivityPolicyArray) ToProjectConnectivityPolicyArrayOutputWithContext(ctx context.Context) ProjectConnectivityPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConnectivityPolicyArrayOutput)
}

type ProjectConnectivityPolicyOutput struct{ *pulumi.OutputState }

func (ProjectConnectivityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectConnectivityPolicy)(nil)).Elem()
}

func (o ProjectConnectivityPolicyOutput) ToProjectConnectivityPolicyOutput() ProjectConnectivityPolicyOutput {
	return o
}

func (o ProjectConnectivityPolicyOutput) ToProjectConnectivityPolicyOutputWithContext(ctx context.Context) ProjectConnectivityPolicyOutput {
	return o
}

func (o ProjectConnectivityPolicyOutput) AllowDeploymentsToNoTargets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectConnectivityPolicy) *bool { return v.AllowDeploymentsToNoTargets }).(pulumi.BoolPtrOutput)
}

func (o ProjectConnectivityPolicyOutput) ExcludeUnhealthyTargets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectConnectivityPolicy) *bool { return v.ExcludeUnhealthyTargets }).(pulumi.BoolPtrOutput)
}

func (o ProjectConnectivityPolicyOutput) SkipMachineBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectConnectivityPolicy) *string { return v.SkipMachineBehavior }).(pulumi.StringPtrOutput)
}

func (o ProjectConnectivityPolicyOutput) TargetRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectConnectivityPolicy) []string { return v.TargetRoles }).(pulumi.StringArrayOutput)
}

type ProjectConnectivityPolicyArrayOutput struct{ *pulumi.OutputState }

func (ProjectConnectivityPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectConnectivityPolicy)(nil)).Elem()
}

func (o ProjectConnectivityPolicyArrayOutput) ToProjectConnectivityPolicyArrayOutput() ProjectConnectivityPolicyArrayOutput {
	return o
}

func (o ProjectConnectivityPolicyArrayOutput) ToProjectConnectivityPolicyArrayOutputWithContext(ctx context.Context) ProjectConnectivityPolicyArrayOutput {
	return o
}

func (o ProjectConnectivityPolicyArrayOutput) Index(i pulumi.IntInput) ProjectConnectivityPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectConnectivityPolicy {
		return vs[0].([]ProjectConnectivityPolicy)[vs[1].(int)]
	}).(ProjectConnectivityPolicyOutput)
}

type ProjectGitAnonymousPersistenceSetting struct {
	// The base path associated with these version control settings.
	BasePath *string `pulumi:"basePath"`
	// The default branch associated with these version control settings.
	DefaultBranch *string `pulumi:"defaultBranch"`
	// A list of protected branch patterns.
	ProtectedBranches []string `pulumi:"protectedBranches"`
	// The URL associated with these version control settings.
	Url string `pulumi:"url"`
}

// ProjectGitAnonymousPersistenceSettingInput is an input type that accepts ProjectGitAnonymousPersistenceSettingArgs and ProjectGitAnonymousPersistenceSettingOutput values.
// You can construct a concrete instance of `ProjectGitAnonymousPersistenceSettingInput` via:
//
//	ProjectGitAnonymousPersistenceSettingArgs{...}
type ProjectGitAnonymousPersistenceSettingInput interface {
	pulumi.Input

	ToProjectGitAnonymousPersistenceSettingOutput() ProjectGitAnonymousPersistenceSettingOutput
	ToProjectGitAnonymousPersistenceSettingOutputWithContext(context.Context) ProjectGitAnonymousPersistenceSettingOutput
}

type ProjectGitAnonymousPersistenceSettingArgs struct {
	// The base path associated with these version control settings.
	BasePath pulumi.StringPtrInput `pulumi:"basePath"`
	// The default branch associated with these version control settings.
	DefaultBranch pulumi.StringPtrInput `pulumi:"defaultBranch"`
	// A list of protected branch patterns.
	ProtectedBranches pulumi.StringArrayInput `pulumi:"protectedBranches"`
	// The URL associated with these version control settings.
	Url pulumi.StringInput `pulumi:"url"`
}

func (ProjectGitAnonymousPersistenceSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectGitAnonymousPersistenceSetting)(nil)).Elem()
}

func (i ProjectGitAnonymousPersistenceSettingArgs) ToProjectGitAnonymousPersistenceSettingOutput() ProjectGitAnonymousPersistenceSettingOutput {
	return i.ToProjectGitAnonymousPersistenceSettingOutputWithContext(context.Background())
}

func (i ProjectGitAnonymousPersistenceSettingArgs) ToProjectGitAnonymousPersistenceSettingOutputWithContext(ctx context.Context) ProjectGitAnonymousPersistenceSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectGitAnonymousPersistenceSettingOutput)
}

// ProjectGitAnonymousPersistenceSettingArrayInput is an input type that accepts ProjectGitAnonymousPersistenceSettingArray and ProjectGitAnonymousPersistenceSettingArrayOutput values.
// You can construct a concrete instance of `ProjectGitAnonymousPersistenceSettingArrayInput` via:
//
//	ProjectGitAnonymousPersistenceSettingArray{ ProjectGitAnonymousPersistenceSettingArgs{...} }
type ProjectGitAnonymousPersistenceSettingArrayInput interface {
	pulumi.Input

	ToProjectGitAnonymousPersistenceSettingArrayOutput() ProjectGitAnonymousPersistenceSettingArrayOutput
	ToProjectGitAnonymousPersistenceSettingArrayOutputWithContext(context.Context) ProjectGitAnonymousPersistenceSettingArrayOutput
}

type ProjectGitAnonymousPersistenceSettingArray []ProjectGitAnonymousPersistenceSettingInput

func (ProjectGitAnonymousPersistenceSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectGitAnonymousPersistenceSetting)(nil)).Elem()
}

func (i ProjectGitAnonymousPersistenceSettingArray) ToProjectGitAnonymousPersistenceSettingArrayOutput() ProjectGitAnonymousPersistenceSettingArrayOutput {
	return i.ToProjectGitAnonymousPersistenceSettingArrayOutputWithContext(context.Background())
}

func (i ProjectGitAnonymousPersistenceSettingArray) ToProjectGitAnonymousPersistenceSettingArrayOutputWithContext(ctx context.Context) ProjectGitAnonymousPersistenceSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectGitAnonymousPersistenceSettingArrayOutput)
}

type ProjectGitAnonymousPersistenceSettingOutput struct{ *pulumi.OutputState }

func (ProjectGitAnonymousPersistenceSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectGitAnonymousPersistenceSetting)(nil)).Elem()
}

func (o ProjectGitAnonymousPersistenceSettingOutput) ToProjectGitAnonymousPersistenceSettingOutput() ProjectGitAnonymousPersistenceSettingOutput {
	return o
}

func (o ProjectGitAnonymousPersistenceSettingOutput) ToProjectGitAnonymousPersistenceSettingOutputWithContext(ctx context.Context) ProjectGitAnonymousPersistenceSettingOutput {
	return o
}

// The base path associated with these version control settings.
func (o ProjectGitAnonymousPersistenceSettingOutput) BasePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectGitAnonymousPersistenceSetting) *string { return v.BasePath }).(pulumi.StringPtrOutput)
}

// The default branch associated with these version control settings.
func (o ProjectGitAnonymousPersistenceSettingOutput) DefaultBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectGitAnonymousPersistenceSetting) *string { return v.DefaultBranch }).(pulumi.StringPtrOutput)
}

// A list of protected branch patterns.
func (o ProjectGitAnonymousPersistenceSettingOutput) ProtectedBranches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectGitAnonymousPersistenceSetting) []string { return v.ProtectedBranches }).(pulumi.StringArrayOutput)
}

// The URL associated with these version control settings.
func (o ProjectGitAnonymousPersistenceSettingOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectGitAnonymousPersistenceSetting) string { return v.Url }).(pulumi.StringOutput)
}

type ProjectGitAnonymousPersistenceSettingArrayOutput struct{ *pulumi.OutputState }

func (ProjectGitAnonymousPersistenceSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectGitAnonymousPersistenceSetting)(nil)).Elem()
}

func (o ProjectGitAnonymousPersistenceSettingArrayOutput) ToProjectGitAnonymousPersistenceSettingArrayOutput() ProjectGitAnonymousPersistenceSettingArrayOutput {
	return o
}

func (o ProjectGitAnonymousPersistenceSettingArrayOutput) ToProjectGitAnonymousPersistenceSettingArrayOutputWithContext(ctx context.Context) ProjectGitAnonymousPersistenceSettingArrayOutput {
	return o
}

func (o ProjectGitAnonymousPersistenceSettingArrayOutput) Index(i pulumi.IntInput) ProjectGitAnonymousPersistenceSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectGitAnonymousPersistenceSetting {
		return vs[0].([]ProjectGitAnonymousPersistenceSetting)[vs[1].(int)]
	}).(ProjectGitAnonymousPersistenceSettingOutput)
}

type ProjectGitLibraryPersistenceSetting struct {
	// The base path associated with these version control settings.
	BasePath *string `pulumi:"basePath"`
	// The default branch associated with these version control settings.
	DefaultBranch   *string `pulumi:"defaultBranch"`
	GitCredentialId string  `pulumi:"gitCredentialId"`
	// A list of protected branch patterns.
	ProtectedBranches []string `pulumi:"protectedBranches"`
	// The URL associated with these version control settings.
	Url string `pulumi:"url"`
}

// ProjectGitLibraryPersistenceSettingInput is an input type that accepts ProjectGitLibraryPersistenceSettingArgs and ProjectGitLibraryPersistenceSettingOutput values.
// You can construct a concrete instance of `ProjectGitLibraryPersistenceSettingInput` via:
//
//	ProjectGitLibraryPersistenceSettingArgs{...}
type ProjectGitLibraryPersistenceSettingInput interface {
	pulumi.Input

	ToProjectGitLibraryPersistenceSettingOutput() ProjectGitLibraryPersistenceSettingOutput
	ToProjectGitLibraryPersistenceSettingOutputWithContext(context.Context) ProjectGitLibraryPersistenceSettingOutput
}

type ProjectGitLibraryPersistenceSettingArgs struct {
	// The base path associated with these version control settings.
	BasePath pulumi.StringPtrInput `pulumi:"basePath"`
	// The default branch associated with these version control settings.
	DefaultBranch   pulumi.StringPtrInput `pulumi:"defaultBranch"`
	GitCredentialId pulumi.StringInput    `pulumi:"gitCredentialId"`
	// A list of protected branch patterns.
	ProtectedBranches pulumi.StringArrayInput `pulumi:"protectedBranches"`
	// The URL associated with these version control settings.
	Url pulumi.StringInput `pulumi:"url"`
}

func (ProjectGitLibraryPersistenceSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectGitLibraryPersistenceSetting)(nil)).Elem()
}

func (i ProjectGitLibraryPersistenceSettingArgs) ToProjectGitLibraryPersistenceSettingOutput() ProjectGitLibraryPersistenceSettingOutput {
	return i.ToProjectGitLibraryPersistenceSettingOutputWithContext(context.Background())
}

func (i ProjectGitLibraryPersistenceSettingArgs) ToProjectGitLibraryPersistenceSettingOutputWithContext(ctx context.Context) ProjectGitLibraryPersistenceSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectGitLibraryPersistenceSettingOutput)
}

// ProjectGitLibraryPersistenceSettingArrayInput is an input type that accepts ProjectGitLibraryPersistenceSettingArray and ProjectGitLibraryPersistenceSettingArrayOutput values.
// You can construct a concrete instance of `ProjectGitLibraryPersistenceSettingArrayInput` via:
//
//	ProjectGitLibraryPersistenceSettingArray{ ProjectGitLibraryPersistenceSettingArgs{...} }
type ProjectGitLibraryPersistenceSettingArrayInput interface {
	pulumi.Input

	ToProjectGitLibraryPersistenceSettingArrayOutput() ProjectGitLibraryPersistenceSettingArrayOutput
	ToProjectGitLibraryPersistenceSettingArrayOutputWithContext(context.Context) ProjectGitLibraryPersistenceSettingArrayOutput
}

type ProjectGitLibraryPersistenceSettingArray []ProjectGitLibraryPersistenceSettingInput

func (ProjectGitLibraryPersistenceSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectGitLibraryPersistenceSetting)(nil)).Elem()
}

func (i ProjectGitLibraryPersistenceSettingArray) ToProjectGitLibraryPersistenceSettingArrayOutput() ProjectGitLibraryPersistenceSettingArrayOutput {
	return i.ToProjectGitLibraryPersistenceSettingArrayOutputWithContext(context.Background())
}

func (i ProjectGitLibraryPersistenceSettingArray) ToProjectGitLibraryPersistenceSettingArrayOutputWithContext(ctx context.Context) ProjectGitLibraryPersistenceSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectGitLibraryPersistenceSettingArrayOutput)
}

type ProjectGitLibraryPersistenceSettingOutput struct{ *pulumi.OutputState }

func (ProjectGitLibraryPersistenceSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectGitLibraryPersistenceSetting)(nil)).Elem()
}

func (o ProjectGitLibraryPersistenceSettingOutput) ToProjectGitLibraryPersistenceSettingOutput() ProjectGitLibraryPersistenceSettingOutput {
	return o
}

func (o ProjectGitLibraryPersistenceSettingOutput) ToProjectGitLibraryPersistenceSettingOutputWithContext(ctx context.Context) ProjectGitLibraryPersistenceSettingOutput {
	return o
}

// The base path associated with these version control settings.
func (o ProjectGitLibraryPersistenceSettingOutput) BasePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectGitLibraryPersistenceSetting) *string { return v.BasePath }).(pulumi.StringPtrOutput)
}

// The default branch associated with these version control settings.
func (o ProjectGitLibraryPersistenceSettingOutput) DefaultBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectGitLibraryPersistenceSetting) *string { return v.DefaultBranch }).(pulumi.StringPtrOutput)
}

func (o ProjectGitLibraryPersistenceSettingOutput) GitCredentialId() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectGitLibraryPersistenceSetting) string { return v.GitCredentialId }).(pulumi.StringOutput)
}

// A list of protected branch patterns.
func (o ProjectGitLibraryPersistenceSettingOutput) ProtectedBranches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectGitLibraryPersistenceSetting) []string { return v.ProtectedBranches }).(pulumi.StringArrayOutput)
}

// The URL associated with these version control settings.
func (o ProjectGitLibraryPersistenceSettingOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectGitLibraryPersistenceSetting) string { return v.Url }).(pulumi.StringOutput)
}

type ProjectGitLibraryPersistenceSettingArrayOutput struct{ *pulumi.OutputState }

func (ProjectGitLibraryPersistenceSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectGitLibraryPersistenceSetting)(nil)).Elem()
}

func (o ProjectGitLibraryPersistenceSettingArrayOutput) ToProjectGitLibraryPersistenceSettingArrayOutput() ProjectGitLibraryPersistenceSettingArrayOutput {
	return o
}

func (o ProjectGitLibraryPersistenceSettingArrayOutput) ToProjectGitLibraryPersistenceSettingArrayOutputWithContext(ctx context.Context) ProjectGitLibraryPersistenceSettingArrayOutput {
	return o
}

func (o ProjectGitLibraryPersistenceSettingArrayOutput) Index(i pulumi.IntInput) ProjectGitLibraryPersistenceSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectGitLibraryPersistenceSetting {
		return vs[0].([]ProjectGitLibraryPersistenceSetting)[vs[1].(int)]
	}).(ProjectGitLibraryPersistenceSettingOutput)
}

type ProjectGitUsernamePasswordPersistenceSetting struct {
	// The base path associated with these version control settings.
	BasePath *string `pulumi:"basePath"`
	// The default branch associated with these version control settings.
	DefaultBranch *string `pulumi:"defaultBranch"`
	// The password for the Git credential
	Password string `pulumi:"password"`
	// A list of protected branch patterns.
	ProtectedBranches []string `pulumi:"protectedBranches"`
	// The URL associated with these version control settings.
	Url string `pulumi:"url"`
	// The username for the Git credential.
	Username string `pulumi:"username"`
}

// ProjectGitUsernamePasswordPersistenceSettingInput is an input type that accepts ProjectGitUsernamePasswordPersistenceSettingArgs and ProjectGitUsernamePasswordPersistenceSettingOutput values.
// You can construct a concrete instance of `ProjectGitUsernamePasswordPersistenceSettingInput` via:
//
//	ProjectGitUsernamePasswordPersistenceSettingArgs{...}
type ProjectGitUsernamePasswordPersistenceSettingInput interface {
	pulumi.Input

	ToProjectGitUsernamePasswordPersistenceSettingOutput() ProjectGitUsernamePasswordPersistenceSettingOutput
	ToProjectGitUsernamePasswordPersistenceSettingOutputWithContext(context.Context) ProjectGitUsernamePasswordPersistenceSettingOutput
}

type ProjectGitUsernamePasswordPersistenceSettingArgs struct {
	// The base path associated with these version control settings.
	BasePath pulumi.StringPtrInput `pulumi:"basePath"`
	// The default branch associated with these version control settings.
	DefaultBranch pulumi.StringPtrInput `pulumi:"defaultBranch"`
	// The password for the Git credential
	Password pulumi.StringInput `pulumi:"password"`
	// A list of protected branch patterns.
	ProtectedBranches pulumi.StringArrayInput `pulumi:"protectedBranches"`
	// The URL associated with these version control settings.
	Url pulumi.StringInput `pulumi:"url"`
	// The username for the Git credential.
	Username pulumi.StringInput `pulumi:"username"`
}

func (ProjectGitUsernamePasswordPersistenceSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectGitUsernamePasswordPersistenceSetting)(nil)).Elem()
}

func (i ProjectGitUsernamePasswordPersistenceSettingArgs) ToProjectGitUsernamePasswordPersistenceSettingOutput() ProjectGitUsernamePasswordPersistenceSettingOutput {
	return i.ToProjectGitUsernamePasswordPersistenceSettingOutputWithContext(context.Background())
}

func (i ProjectGitUsernamePasswordPersistenceSettingArgs) ToProjectGitUsernamePasswordPersistenceSettingOutputWithContext(ctx context.Context) ProjectGitUsernamePasswordPersistenceSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectGitUsernamePasswordPersistenceSettingOutput)
}

// ProjectGitUsernamePasswordPersistenceSettingArrayInput is an input type that accepts ProjectGitUsernamePasswordPersistenceSettingArray and ProjectGitUsernamePasswordPersistenceSettingArrayOutput values.
// You can construct a concrete instance of `ProjectGitUsernamePasswordPersistenceSettingArrayInput` via:
//
//	ProjectGitUsernamePasswordPersistenceSettingArray{ ProjectGitUsernamePasswordPersistenceSettingArgs{...} }
type ProjectGitUsernamePasswordPersistenceSettingArrayInput interface {
	pulumi.Input

	ToProjectGitUsernamePasswordPersistenceSettingArrayOutput() ProjectGitUsernamePasswordPersistenceSettingArrayOutput
	ToProjectGitUsernamePasswordPersistenceSettingArrayOutputWithContext(context.Context) ProjectGitUsernamePasswordPersistenceSettingArrayOutput
}

type ProjectGitUsernamePasswordPersistenceSettingArray []ProjectGitUsernamePasswordPersistenceSettingInput

func (ProjectGitUsernamePasswordPersistenceSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectGitUsernamePasswordPersistenceSetting)(nil)).Elem()
}

func (i ProjectGitUsernamePasswordPersistenceSettingArray) ToProjectGitUsernamePasswordPersistenceSettingArrayOutput() ProjectGitUsernamePasswordPersistenceSettingArrayOutput {
	return i.ToProjectGitUsernamePasswordPersistenceSettingArrayOutputWithContext(context.Background())
}

func (i ProjectGitUsernamePasswordPersistenceSettingArray) ToProjectGitUsernamePasswordPersistenceSettingArrayOutputWithContext(ctx context.Context) ProjectGitUsernamePasswordPersistenceSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectGitUsernamePasswordPersistenceSettingArrayOutput)
}

type ProjectGitUsernamePasswordPersistenceSettingOutput struct{ *pulumi.OutputState }

func (ProjectGitUsernamePasswordPersistenceSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectGitUsernamePasswordPersistenceSetting)(nil)).Elem()
}

func (o ProjectGitUsernamePasswordPersistenceSettingOutput) ToProjectGitUsernamePasswordPersistenceSettingOutput() ProjectGitUsernamePasswordPersistenceSettingOutput {
	return o
}

func (o ProjectGitUsernamePasswordPersistenceSettingOutput) ToProjectGitUsernamePasswordPersistenceSettingOutputWithContext(ctx context.Context) ProjectGitUsernamePasswordPersistenceSettingOutput {
	return o
}

// The base path associated with these version control settings.
func (o ProjectGitUsernamePasswordPersistenceSettingOutput) BasePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectGitUsernamePasswordPersistenceSetting) *string { return v.BasePath }).(pulumi.StringPtrOutput)
}

// The default branch associated with these version control settings.
func (o ProjectGitUsernamePasswordPersistenceSettingOutput) DefaultBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectGitUsernamePasswordPersistenceSetting) *string { return v.DefaultBranch }).(pulumi.StringPtrOutput)
}

// The password for the Git credential
func (o ProjectGitUsernamePasswordPersistenceSettingOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectGitUsernamePasswordPersistenceSetting) string { return v.Password }).(pulumi.StringOutput)
}

// A list of protected branch patterns.
func (o ProjectGitUsernamePasswordPersistenceSettingOutput) ProtectedBranches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectGitUsernamePasswordPersistenceSetting) []string { return v.ProtectedBranches }).(pulumi.StringArrayOutput)
}

// The URL associated with these version control settings.
func (o ProjectGitUsernamePasswordPersistenceSettingOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectGitUsernamePasswordPersistenceSetting) string { return v.Url }).(pulumi.StringOutput)
}

// The username for the Git credential.
func (o ProjectGitUsernamePasswordPersistenceSettingOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectGitUsernamePasswordPersistenceSetting) string { return v.Username }).(pulumi.StringOutput)
}

type ProjectGitUsernamePasswordPersistenceSettingArrayOutput struct{ *pulumi.OutputState }

func (ProjectGitUsernamePasswordPersistenceSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectGitUsernamePasswordPersistenceSetting)(nil)).Elem()
}

func (o ProjectGitUsernamePasswordPersistenceSettingArrayOutput) ToProjectGitUsernamePasswordPersistenceSettingArrayOutput() ProjectGitUsernamePasswordPersistenceSettingArrayOutput {
	return o
}

func (o ProjectGitUsernamePasswordPersistenceSettingArrayOutput) ToProjectGitUsernamePasswordPersistenceSettingArrayOutputWithContext(ctx context.Context) ProjectGitUsernamePasswordPersistenceSettingArrayOutput {
	return o
}

func (o ProjectGitUsernamePasswordPersistenceSettingArrayOutput) Index(i pulumi.IntInput) ProjectGitUsernamePasswordPersistenceSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectGitUsernamePasswordPersistenceSetting {
		return vs[0].([]ProjectGitUsernamePasswordPersistenceSetting)[vs[1].(int)]
	}).(ProjectGitUsernamePasswordPersistenceSettingOutput)
}

type ProjectJiraServiceManagementExtensionSetting struct {
	// The connection identifier associated with the extension settings.
	ConnectionId string `pulumi:"connectionId"`
	// Specifies whether or not this extension is enabled for this project.
	IsEnabled bool `pulumi:"isEnabled"`
	// The project name associated with this extension.
	ServiceDeskProjectName string `pulumi:"serviceDeskProjectName"`
}

// ProjectJiraServiceManagementExtensionSettingInput is an input type that accepts ProjectJiraServiceManagementExtensionSettingArgs and ProjectJiraServiceManagementExtensionSettingOutput values.
// You can construct a concrete instance of `ProjectJiraServiceManagementExtensionSettingInput` via:
//
//	ProjectJiraServiceManagementExtensionSettingArgs{...}
type ProjectJiraServiceManagementExtensionSettingInput interface {
	pulumi.Input

	ToProjectJiraServiceManagementExtensionSettingOutput() ProjectJiraServiceManagementExtensionSettingOutput
	ToProjectJiraServiceManagementExtensionSettingOutputWithContext(context.Context) ProjectJiraServiceManagementExtensionSettingOutput
}

type ProjectJiraServiceManagementExtensionSettingArgs struct {
	// The connection identifier associated with the extension settings.
	ConnectionId pulumi.StringInput `pulumi:"connectionId"`
	// Specifies whether or not this extension is enabled for this project.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The project name associated with this extension.
	ServiceDeskProjectName pulumi.StringInput `pulumi:"serviceDeskProjectName"`
}

func (ProjectJiraServiceManagementExtensionSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectJiraServiceManagementExtensionSetting)(nil)).Elem()
}

func (i ProjectJiraServiceManagementExtensionSettingArgs) ToProjectJiraServiceManagementExtensionSettingOutput() ProjectJiraServiceManagementExtensionSettingOutput {
	return i.ToProjectJiraServiceManagementExtensionSettingOutputWithContext(context.Background())
}

func (i ProjectJiraServiceManagementExtensionSettingArgs) ToProjectJiraServiceManagementExtensionSettingOutputWithContext(ctx context.Context) ProjectJiraServiceManagementExtensionSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectJiraServiceManagementExtensionSettingOutput)
}

// ProjectJiraServiceManagementExtensionSettingArrayInput is an input type that accepts ProjectJiraServiceManagementExtensionSettingArray and ProjectJiraServiceManagementExtensionSettingArrayOutput values.
// You can construct a concrete instance of `ProjectJiraServiceManagementExtensionSettingArrayInput` via:
//
//	ProjectJiraServiceManagementExtensionSettingArray{ ProjectJiraServiceManagementExtensionSettingArgs{...} }
type ProjectJiraServiceManagementExtensionSettingArrayInput interface {
	pulumi.Input

	ToProjectJiraServiceManagementExtensionSettingArrayOutput() ProjectJiraServiceManagementExtensionSettingArrayOutput
	ToProjectJiraServiceManagementExtensionSettingArrayOutputWithContext(context.Context) ProjectJiraServiceManagementExtensionSettingArrayOutput
}

type ProjectJiraServiceManagementExtensionSettingArray []ProjectJiraServiceManagementExtensionSettingInput

func (ProjectJiraServiceManagementExtensionSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectJiraServiceManagementExtensionSetting)(nil)).Elem()
}

func (i ProjectJiraServiceManagementExtensionSettingArray) ToProjectJiraServiceManagementExtensionSettingArrayOutput() ProjectJiraServiceManagementExtensionSettingArrayOutput {
	return i.ToProjectJiraServiceManagementExtensionSettingArrayOutputWithContext(context.Background())
}

func (i ProjectJiraServiceManagementExtensionSettingArray) ToProjectJiraServiceManagementExtensionSettingArrayOutputWithContext(ctx context.Context) ProjectJiraServiceManagementExtensionSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectJiraServiceManagementExtensionSettingArrayOutput)
}

type ProjectJiraServiceManagementExtensionSettingOutput struct{ *pulumi.OutputState }

func (ProjectJiraServiceManagementExtensionSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectJiraServiceManagementExtensionSetting)(nil)).Elem()
}

func (o ProjectJiraServiceManagementExtensionSettingOutput) ToProjectJiraServiceManagementExtensionSettingOutput() ProjectJiraServiceManagementExtensionSettingOutput {
	return o
}

func (o ProjectJiraServiceManagementExtensionSettingOutput) ToProjectJiraServiceManagementExtensionSettingOutputWithContext(ctx context.Context) ProjectJiraServiceManagementExtensionSettingOutput {
	return o
}

// The connection identifier associated with the extension settings.
func (o ProjectJiraServiceManagementExtensionSettingOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectJiraServiceManagementExtensionSetting) string { return v.ConnectionId }).(pulumi.StringOutput)
}

// Specifies whether or not this extension is enabled for this project.
func (o ProjectJiraServiceManagementExtensionSettingOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ProjectJiraServiceManagementExtensionSetting) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The project name associated with this extension.
func (o ProjectJiraServiceManagementExtensionSettingOutput) ServiceDeskProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectJiraServiceManagementExtensionSetting) string { return v.ServiceDeskProjectName }).(pulumi.StringOutput)
}

type ProjectJiraServiceManagementExtensionSettingArrayOutput struct{ *pulumi.OutputState }

func (ProjectJiraServiceManagementExtensionSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectJiraServiceManagementExtensionSetting)(nil)).Elem()
}

func (o ProjectJiraServiceManagementExtensionSettingArrayOutput) ToProjectJiraServiceManagementExtensionSettingArrayOutput() ProjectJiraServiceManagementExtensionSettingArrayOutput {
	return o
}

func (o ProjectJiraServiceManagementExtensionSettingArrayOutput) ToProjectJiraServiceManagementExtensionSettingArrayOutputWithContext(ctx context.Context) ProjectJiraServiceManagementExtensionSettingArrayOutput {
	return o
}

func (o ProjectJiraServiceManagementExtensionSettingArrayOutput) Index(i pulumi.IntInput) ProjectJiraServiceManagementExtensionSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectJiraServiceManagementExtensionSetting {
		return vs[0].([]ProjectJiraServiceManagementExtensionSetting)[vs[1].(int)]
	}).(ProjectJiraServiceManagementExtensionSettingOutput)
}

type ProjectReleaseCreationStrategy struct {
	ChannelId                    *string                                                `pulumi:"channelId"`
	ReleaseCreationPackageStepId *string                                                `pulumi:"releaseCreationPackageStepId"`
	ReleaseCreationPackages      []ProjectReleaseCreationStrategyReleaseCreationPackage `pulumi:"releaseCreationPackages"`
}

// ProjectReleaseCreationStrategyInput is an input type that accepts ProjectReleaseCreationStrategyArgs and ProjectReleaseCreationStrategyOutput values.
// You can construct a concrete instance of `ProjectReleaseCreationStrategyInput` via:
//
//	ProjectReleaseCreationStrategyArgs{...}
type ProjectReleaseCreationStrategyInput interface {
	pulumi.Input

	ToProjectReleaseCreationStrategyOutput() ProjectReleaseCreationStrategyOutput
	ToProjectReleaseCreationStrategyOutputWithContext(context.Context) ProjectReleaseCreationStrategyOutput
}

type ProjectReleaseCreationStrategyArgs struct {
	ChannelId                    pulumi.StringPtrInput                                          `pulumi:"channelId"`
	ReleaseCreationPackageStepId pulumi.StringPtrInput                                          `pulumi:"releaseCreationPackageStepId"`
	ReleaseCreationPackages      ProjectReleaseCreationStrategyReleaseCreationPackageArrayInput `pulumi:"releaseCreationPackages"`
}

func (ProjectReleaseCreationStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectReleaseCreationStrategy)(nil)).Elem()
}

func (i ProjectReleaseCreationStrategyArgs) ToProjectReleaseCreationStrategyOutput() ProjectReleaseCreationStrategyOutput {
	return i.ToProjectReleaseCreationStrategyOutputWithContext(context.Background())
}

func (i ProjectReleaseCreationStrategyArgs) ToProjectReleaseCreationStrategyOutputWithContext(ctx context.Context) ProjectReleaseCreationStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectReleaseCreationStrategyOutput)
}

// ProjectReleaseCreationStrategyArrayInput is an input type that accepts ProjectReleaseCreationStrategyArray and ProjectReleaseCreationStrategyArrayOutput values.
// You can construct a concrete instance of `ProjectReleaseCreationStrategyArrayInput` via:
//
//	ProjectReleaseCreationStrategyArray{ ProjectReleaseCreationStrategyArgs{...} }
type ProjectReleaseCreationStrategyArrayInput interface {
	pulumi.Input

	ToProjectReleaseCreationStrategyArrayOutput() ProjectReleaseCreationStrategyArrayOutput
	ToProjectReleaseCreationStrategyArrayOutputWithContext(context.Context) ProjectReleaseCreationStrategyArrayOutput
}

type ProjectReleaseCreationStrategyArray []ProjectReleaseCreationStrategyInput

func (ProjectReleaseCreationStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectReleaseCreationStrategy)(nil)).Elem()
}

func (i ProjectReleaseCreationStrategyArray) ToProjectReleaseCreationStrategyArrayOutput() ProjectReleaseCreationStrategyArrayOutput {
	return i.ToProjectReleaseCreationStrategyArrayOutputWithContext(context.Background())
}

func (i ProjectReleaseCreationStrategyArray) ToProjectReleaseCreationStrategyArrayOutputWithContext(ctx context.Context) ProjectReleaseCreationStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectReleaseCreationStrategyArrayOutput)
}

type ProjectReleaseCreationStrategyOutput struct{ *pulumi.OutputState }

func (ProjectReleaseCreationStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectReleaseCreationStrategy)(nil)).Elem()
}

func (o ProjectReleaseCreationStrategyOutput) ToProjectReleaseCreationStrategyOutput() ProjectReleaseCreationStrategyOutput {
	return o
}

func (o ProjectReleaseCreationStrategyOutput) ToProjectReleaseCreationStrategyOutputWithContext(ctx context.Context) ProjectReleaseCreationStrategyOutput {
	return o
}

func (o ProjectReleaseCreationStrategyOutput) ChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectReleaseCreationStrategy) *string { return v.ChannelId }).(pulumi.StringPtrOutput)
}

func (o ProjectReleaseCreationStrategyOutput) ReleaseCreationPackageStepId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectReleaseCreationStrategy) *string { return v.ReleaseCreationPackageStepId }).(pulumi.StringPtrOutput)
}

func (o ProjectReleaseCreationStrategyOutput) ReleaseCreationPackages() ProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput {
	return o.ApplyT(func(v ProjectReleaseCreationStrategy) []ProjectReleaseCreationStrategyReleaseCreationPackage {
		return v.ReleaseCreationPackages
	}).(ProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput)
}

type ProjectReleaseCreationStrategyArrayOutput struct{ *pulumi.OutputState }

func (ProjectReleaseCreationStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectReleaseCreationStrategy)(nil)).Elem()
}

func (o ProjectReleaseCreationStrategyArrayOutput) ToProjectReleaseCreationStrategyArrayOutput() ProjectReleaseCreationStrategyArrayOutput {
	return o
}

func (o ProjectReleaseCreationStrategyArrayOutput) ToProjectReleaseCreationStrategyArrayOutputWithContext(ctx context.Context) ProjectReleaseCreationStrategyArrayOutput {
	return o
}

func (o ProjectReleaseCreationStrategyArrayOutput) Index(i pulumi.IntInput) ProjectReleaseCreationStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectReleaseCreationStrategy {
		return vs[0].([]ProjectReleaseCreationStrategy)[vs[1].(int)]
	}).(ProjectReleaseCreationStrategyOutput)
}

type ProjectReleaseCreationStrategyReleaseCreationPackage struct {
	DeploymentAction *string `pulumi:"deploymentAction"`
	PackageReference *string `pulumi:"packageReference"`
}

// ProjectReleaseCreationStrategyReleaseCreationPackageInput is an input type that accepts ProjectReleaseCreationStrategyReleaseCreationPackageArgs and ProjectReleaseCreationStrategyReleaseCreationPackageOutput values.
// You can construct a concrete instance of `ProjectReleaseCreationStrategyReleaseCreationPackageInput` via:
//
//	ProjectReleaseCreationStrategyReleaseCreationPackageArgs{...}
type ProjectReleaseCreationStrategyReleaseCreationPackageInput interface {
	pulumi.Input

	ToProjectReleaseCreationStrategyReleaseCreationPackageOutput() ProjectReleaseCreationStrategyReleaseCreationPackageOutput
	ToProjectReleaseCreationStrategyReleaseCreationPackageOutputWithContext(context.Context) ProjectReleaseCreationStrategyReleaseCreationPackageOutput
}

type ProjectReleaseCreationStrategyReleaseCreationPackageArgs struct {
	DeploymentAction pulumi.StringPtrInput `pulumi:"deploymentAction"`
	PackageReference pulumi.StringPtrInput `pulumi:"packageReference"`
}

func (ProjectReleaseCreationStrategyReleaseCreationPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectReleaseCreationStrategyReleaseCreationPackage)(nil)).Elem()
}

func (i ProjectReleaseCreationStrategyReleaseCreationPackageArgs) ToProjectReleaseCreationStrategyReleaseCreationPackageOutput() ProjectReleaseCreationStrategyReleaseCreationPackageOutput {
	return i.ToProjectReleaseCreationStrategyReleaseCreationPackageOutputWithContext(context.Background())
}

func (i ProjectReleaseCreationStrategyReleaseCreationPackageArgs) ToProjectReleaseCreationStrategyReleaseCreationPackageOutputWithContext(ctx context.Context) ProjectReleaseCreationStrategyReleaseCreationPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectReleaseCreationStrategyReleaseCreationPackageOutput)
}

// ProjectReleaseCreationStrategyReleaseCreationPackageArrayInput is an input type that accepts ProjectReleaseCreationStrategyReleaseCreationPackageArray and ProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput values.
// You can construct a concrete instance of `ProjectReleaseCreationStrategyReleaseCreationPackageArrayInput` via:
//
//	ProjectReleaseCreationStrategyReleaseCreationPackageArray{ ProjectReleaseCreationStrategyReleaseCreationPackageArgs{...} }
type ProjectReleaseCreationStrategyReleaseCreationPackageArrayInput interface {
	pulumi.Input

	ToProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput() ProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput
	ToProjectReleaseCreationStrategyReleaseCreationPackageArrayOutputWithContext(context.Context) ProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput
}

type ProjectReleaseCreationStrategyReleaseCreationPackageArray []ProjectReleaseCreationStrategyReleaseCreationPackageInput

func (ProjectReleaseCreationStrategyReleaseCreationPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectReleaseCreationStrategyReleaseCreationPackage)(nil)).Elem()
}

func (i ProjectReleaseCreationStrategyReleaseCreationPackageArray) ToProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput() ProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput {
	return i.ToProjectReleaseCreationStrategyReleaseCreationPackageArrayOutputWithContext(context.Background())
}

func (i ProjectReleaseCreationStrategyReleaseCreationPackageArray) ToProjectReleaseCreationStrategyReleaseCreationPackageArrayOutputWithContext(ctx context.Context) ProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput)
}

type ProjectReleaseCreationStrategyReleaseCreationPackageOutput struct{ *pulumi.OutputState }

func (ProjectReleaseCreationStrategyReleaseCreationPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectReleaseCreationStrategyReleaseCreationPackage)(nil)).Elem()
}

func (o ProjectReleaseCreationStrategyReleaseCreationPackageOutput) ToProjectReleaseCreationStrategyReleaseCreationPackageOutput() ProjectReleaseCreationStrategyReleaseCreationPackageOutput {
	return o
}

func (o ProjectReleaseCreationStrategyReleaseCreationPackageOutput) ToProjectReleaseCreationStrategyReleaseCreationPackageOutputWithContext(ctx context.Context) ProjectReleaseCreationStrategyReleaseCreationPackageOutput {
	return o
}

func (o ProjectReleaseCreationStrategyReleaseCreationPackageOutput) DeploymentAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectReleaseCreationStrategyReleaseCreationPackage) *string { return v.DeploymentAction }).(pulumi.StringPtrOutput)
}

func (o ProjectReleaseCreationStrategyReleaseCreationPackageOutput) PackageReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectReleaseCreationStrategyReleaseCreationPackage) *string { return v.PackageReference }).(pulumi.StringPtrOutput)
}

type ProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput struct{ *pulumi.OutputState }

func (ProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectReleaseCreationStrategyReleaseCreationPackage)(nil)).Elem()
}

func (o ProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput) ToProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput() ProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput {
	return o
}

func (o ProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput) ToProjectReleaseCreationStrategyReleaseCreationPackageArrayOutputWithContext(ctx context.Context) ProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput {
	return o
}

func (o ProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput) Index(i pulumi.IntInput) ProjectReleaseCreationStrategyReleaseCreationPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectReleaseCreationStrategyReleaseCreationPackage {
		return vs[0].([]ProjectReleaseCreationStrategyReleaseCreationPackage)[vs[1].(int)]
	}).(ProjectReleaseCreationStrategyReleaseCreationPackageOutput)
}

type ProjectServicenowExtensionSetting struct {
	// The connection identifier associated with the extension settings.
	ConnectionId string `pulumi:"connectionId"`
	// Specifies whether or not this extension is enabled for this project.
	IsEnabled bool `pulumi:"isEnabled"`
	// Specifies whether or not this extension will automatically transition the state of a deployment for this project.
	IsStateAutomaticallyTransitioned bool `pulumi:"isStateAutomaticallyTransitioned"`
	// The name of the standard change template associated with this extension. If provided, deployments will create a standard change based on the provided template, otherwise a normal change will be created.
	StandardChangeTemplateName *string `pulumi:"standardChangeTemplateName"`
}

// ProjectServicenowExtensionSettingInput is an input type that accepts ProjectServicenowExtensionSettingArgs and ProjectServicenowExtensionSettingOutput values.
// You can construct a concrete instance of `ProjectServicenowExtensionSettingInput` via:
//
//	ProjectServicenowExtensionSettingArgs{...}
type ProjectServicenowExtensionSettingInput interface {
	pulumi.Input

	ToProjectServicenowExtensionSettingOutput() ProjectServicenowExtensionSettingOutput
	ToProjectServicenowExtensionSettingOutputWithContext(context.Context) ProjectServicenowExtensionSettingOutput
}

type ProjectServicenowExtensionSettingArgs struct {
	// The connection identifier associated with the extension settings.
	ConnectionId pulumi.StringInput `pulumi:"connectionId"`
	// Specifies whether or not this extension is enabled for this project.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Specifies whether or not this extension will automatically transition the state of a deployment for this project.
	IsStateAutomaticallyTransitioned pulumi.BoolInput `pulumi:"isStateAutomaticallyTransitioned"`
	// The name of the standard change template associated with this extension. If provided, deployments will create a standard change based on the provided template, otherwise a normal change will be created.
	StandardChangeTemplateName pulumi.StringPtrInput `pulumi:"standardChangeTemplateName"`
}

func (ProjectServicenowExtensionSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectServicenowExtensionSetting)(nil)).Elem()
}

func (i ProjectServicenowExtensionSettingArgs) ToProjectServicenowExtensionSettingOutput() ProjectServicenowExtensionSettingOutput {
	return i.ToProjectServicenowExtensionSettingOutputWithContext(context.Background())
}

func (i ProjectServicenowExtensionSettingArgs) ToProjectServicenowExtensionSettingOutputWithContext(ctx context.Context) ProjectServicenowExtensionSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectServicenowExtensionSettingOutput)
}

// ProjectServicenowExtensionSettingArrayInput is an input type that accepts ProjectServicenowExtensionSettingArray and ProjectServicenowExtensionSettingArrayOutput values.
// You can construct a concrete instance of `ProjectServicenowExtensionSettingArrayInput` via:
//
//	ProjectServicenowExtensionSettingArray{ ProjectServicenowExtensionSettingArgs{...} }
type ProjectServicenowExtensionSettingArrayInput interface {
	pulumi.Input

	ToProjectServicenowExtensionSettingArrayOutput() ProjectServicenowExtensionSettingArrayOutput
	ToProjectServicenowExtensionSettingArrayOutputWithContext(context.Context) ProjectServicenowExtensionSettingArrayOutput
}

type ProjectServicenowExtensionSettingArray []ProjectServicenowExtensionSettingInput

func (ProjectServicenowExtensionSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectServicenowExtensionSetting)(nil)).Elem()
}

func (i ProjectServicenowExtensionSettingArray) ToProjectServicenowExtensionSettingArrayOutput() ProjectServicenowExtensionSettingArrayOutput {
	return i.ToProjectServicenowExtensionSettingArrayOutputWithContext(context.Background())
}

func (i ProjectServicenowExtensionSettingArray) ToProjectServicenowExtensionSettingArrayOutputWithContext(ctx context.Context) ProjectServicenowExtensionSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectServicenowExtensionSettingArrayOutput)
}

type ProjectServicenowExtensionSettingOutput struct{ *pulumi.OutputState }

func (ProjectServicenowExtensionSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectServicenowExtensionSetting)(nil)).Elem()
}

func (o ProjectServicenowExtensionSettingOutput) ToProjectServicenowExtensionSettingOutput() ProjectServicenowExtensionSettingOutput {
	return o
}

func (o ProjectServicenowExtensionSettingOutput) ToProjectServicenowExtensionSettingOutputWithContext(ctx context.Context) ProjectServicenowExtensionSettingOutput {
	return o
}

// The connection identifier associated with the extension settings.
func (o ProjectServicenowExtensionSettingOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectServicenowExtensionSetting) string { return v.ConnectionId }).(pulumi.StringOutput)
}

// Specifies whether or not this extension is enabled for this project.
func (o ProjectServicenowExtensionSettingOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ProjectServicenowExtensionSetting) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Specifies whether or not this extension will automatically transition the state of a deployment for this project.
func (o ProjectServicenowExtensionSettingOutput) IsStateAutomaticallyTransitioned() pulumi.BoolOutput {
	return o.ApplyT(func(v ProjectServicenowExtensionSetting) bool { return v.IsStateAutomaticallyTransitioned }).(pulumi.BoolOutput)
}

// The name of the standard change template associated with this extension. If provided, deployments will create a standard change based on the provided template, otherwise a normal change will be created.
func (o ProjectServicenowExtensionSettingOutput) StandardChangeTemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectServicenowExtensionSetting) *string { return v.StandardChangeTemplateName }).(pulumi.StringPtrOutput)
}

type ProjectServicenowExtensionSettingArrayOutput struct{ *pulumi.OutputState }

func (ProjectServicenowExtensionSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectServicenowExtensionSetting)(nil)).Elem()
}

func (o ProjectServicenowExtensionSettingArrayOutput) ToProjectServicenowExtensionSettingArrayOutput() ProjectServicenowExtensionSettingArrayOutput {
	return o
}

func (o ProjectServicenowExtensionSettingArrayOutput) ToProjectServicenowExtensionSettingArrayOutputWithContext(ctx context.Context) ProjectServicenowExtensionSettingArrayOutput {
	return o
}

func (o ProjectServicenowExtensionSettingArrayOutput) Index(i pulumi.IntInput) ProjectServicenowExtensionSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectServicenowExtensionSetting {
		return vs[0].([]ProjectServicenowExtensionSetting)[vs[1].(int)]
	}).(ProjectServicenowExtensionSettingOutput)
}

type ProjectTemplate struct {
	// A default value for the parameter, if applicable. This can be a hard-coded value or a variable reference.
	DefaultValue *string `pulumi:"defaultValue"`
	// The display settings for the parameter.
	DisplaySettings map[string]string `pulumi:"displaySettings"`
	// The help presented alongside the parameter input.
	HelpText *string `pulumi:"helpText"`
	// The ID of the template parameter.
	Id *string `pulumi:"id"`
	// The label shown beside the parameter when presented in the deployment process.
	Label *string `pulumi:"label"`
	// The name of the variable set by the parameter. The name can contain letters, digits, dashes and periods.
	Name string `pulumi:"name"`
}

// ProjectTemplateInput is an input type that accepts ProjectTemplateArgs and ProjectTemplateOutput values.
// You can construct a concrete instance of `ProjectTemplateInput` via:
//
//	ProjectTemplateArgs{...}
type ProjectTemplateInput interface {
	pulumi.Input

	ToProjectTemplateOutput() ProjectTemplateOutput
	ToProjectTemplateOutputWithContext(context.Context) ProjectTemplateOutput
}

type ProjectTemplateArgs struct {
	// A default value for the parameter, if applicable. This can be a hard-coded value or a variable reference.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// The display settings for the parameter.
	DisplaySettings pulumi.StringMapInput `pulumi:"displaySettings"`
	// The help presented alongside the parameter input.
	HelpText pulumi.StringPtrInput `pulumi:"helpText"`
	// The ID of the template parameter.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The label shown beside the parameter when presented in the deployment process.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// The name of the variable set by the parameter. The name can contain letters, digits, dashes and periods.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ProjectTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTemplate)(nil)).Elem()
}

func (i ProjectTemplateArgs) ToProjectTemplateOutput() ProjectTemplateOutput {
	return i.ToProjectTemplateOutputWithContext(context.Background())
}

func (i ProjectTemplateArgs) ToProjectTemplateOutputWithContext(ctx context.Context) ProjectTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTemplateOutput)
}

// ProjectTemplateArrayInput is an input type that accepts ProjectTemplateArray and ProjectTemplateArrayOutput values.
// You can construct a concrete instance of `ProjectTemplateArrayInput` via:
//
//	ProjectTemplateArray{ ProjectTemplateArgs{...} }
type ProjectTemplateArrayInput interface {
	pulumi.Input

	ToProjectTemplateArrayOutput() ProjectTemplateArrayOutput
	ToProjectTemplateArrayOutputWithContext(context.Context) ProjectTemplateArrayOutput
}

type ProjectTemplateArray []ProjectTemplateInput

func (ProjectTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTemplate)(nil)).Elem()
}

func (i ProjectTemplateArray) ToProjectTemplateArrayOutput() ProjectTemplateArrayOutput {
	return i.ToProjectTemplateArrayOutputWithContext(context.Background())
}

func (i ProjectTemplateArray) ToProjectTemplateArrayOutputWithContext(ctx context.Context) ProjectTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTemplateArrayOutput)
}

type ProjectTemplateOutput struct{ *pulumi.OutputState }

func (ProjectTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTemplate)(nil)).Elem()
}

func (o ProjectTemplateOutput) ToProjectTemplateOutput() ProjectTemplateOutput {
	return o
}

func (o ProjectTemplateOutput) ToProjectTemplateOutputWithContext(ctx context.Context) ProjectTemplateOutput {
	return o
}

// A default value for the parameter, if applicable. This can be a hard-coded value or a variable reference.
func (o ProjectTemplateOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTemplate) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// The display settings for the parameter.
func (o ProjectTemplateOutput) DisplaySettings() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProjectTemplate) map[string]string { return v.DisplaySettings }).(pulumi.StringMapOutput)
}

// The help presented alongside the parameter input.
func (o ProjectTemplateOutput) HelpText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTemplate) *string { return v.HelpText }).(pulumi.StringPtrOutput)
}

// The ID of the template parameter.
func (o ProjectTemplateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTemplate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The label shown beside the parameter when presented in the deployment process.
func (o ProjectTemplateOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTemplate) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// The name of the variable set by the parameter. The name can contain letters, digits, dashes and periods.
func (o ProjectTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectTemplate) string { return v.Name }).(pulumi.StringOutput)
}

type ProjectTemplateArrayOutput struct{ *pulumi.OutputState }

func (ProjectTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTemplate)(nil)).Elem()
}

func (o ProjectTemplateArrayOutput) ToProjectTemplateArrayOutput() ProjectTemplateArrayOutput {
	return o
}

func (o ProjectTemplateArrayOutput) ToProjectTemplateArrayOutputWithContext(ctx context.Context) ProjectTemplateArrayOutput {
	return o
}

func (o ProjectTemplateArrayOutput) Index(i pulumi.IntInput) ProjectTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectTemplate {
		return vs[0].([]ProjectTemplate)[vs[1].(int)]
	}).(ProjectTemplateOutput)
}

type ProjectVersioningStrategy struct {
	DonorPackageStepId *string                                 `pulumi:"donorPackageStepId"`
	DonorPackages      []ProjectVersioningStrategyDonorPackage `pulumi:"donorPackages"`
	Template           *string                                 `pulumi:"template"`
}

// ProjectVersioningStrategyInput is an input type that accepts ProjectVersioningStrategyArgs and ProjectVersioningStrategyOutput values.
// You can construct a concrete instance of `ProjectVersioningStrategyInput` via:
//
//	ProjectVersioningStrategyArgs{...}
type ProjectVersioningStrategyInput interface {
	pulumi.Input

	ToProjectVersioningStrategyOutput() ProjectVersioningStrategyOutput
	ToProjectVersioningStrategyOutputWithContext(context.Context) ProjectVersioningStrategyOutput
}

type ProjectVersioningStrategyArgs struct {
	DonorPackageStepId pulumi.StringPtrInput                           `pulumi:"donorPackageStepId"`
	DonorPackages      ProjectVersioningStrategyDonorPackageArrayInput `pulumi:"donorPackages"`
	Template           pulumi.StringPtrInput                           `pulumi:"template"`
}

func (ProjectVersioningStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectVersioningStrategy)(nil)).Elem()
}

func (i ProjectVersioningStrategyArgs) ToProjectVersioningStrategyOutput() ProjectVersioningStrategyOutput {
	return i.ToProjectVersioningStrategyOutputWithContext(context.Background())
}

func (i ProjectVersioningStrategyArgs) ToProjectVersioningStrategyOutputWithContext(ctx context.Context) ProjectVersioningStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectVersioningStrategyOutput)
}

// ProjectVersioningStrategyArrayInput is an input type that accepts ProjectVersioningStrategyArray and ProjectVersioningStrategyArrayOutput values.
// You can construct a concrete instance of `ProjectVersioningStrategyArrayInput` via:
//
//	ProjectVersioningStrategyArray{ ProjectVersioningStrategyArgs{...} }
type ProjectVersioningStrategyArrayInput interface {
	pulumi.Input

	ToProjectVersioningStrategyArrayOutput() ProjectVersioningStrategyArrayOutput
	ToProjectVersioningStrategyArrayOutputWithContext(context.Context) ProjectVersioningStrategyArrayOutput
}

type ProjectVersioningStrategyArray []ProjectVersioningStrategyInput

func (ProjectVersioningStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectVersioningStrategy)(nil)).Elem()
}

func (i ProjectVersioningStrategyArray) ToProjectVersioningStrategyArrayOutput() ProjectVersioningStrategyArrayOutput {
	return i.ToProjectVersioningStrategyArrayOutputWithContext(context.Background())
}

func (i ProjectVersioningStrategyArray) ToProjectVersioningStrategyArrayOutputWithContext(ctx context.Context) ProjectVersioningStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectVersioningStrategyArrayOutput)
}

type ProjectVersioningStrategyOutput struct{ *pulumi.OutputState }

func (ProjectVersioningStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectVersioningStrategy)(nil)).Elem()
}

func (o ProjectVersioningStrategyOutput) ToProjectVersioningStrategyOutput() ProjectVersioningStrategyOutput {
	return o
}

func (o ProjectVersioningStrategyOutput) ToProjectVersioningStrategyOutputWithContext(ctx context.Context) ProjectVersioningStrategyOutput {
	return o
}

func (o ProjectVersioningStrategyOutput) DonorPackageStepId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectVersioningStrategy) *string { return v.DonorPackageStepId }).(pulumi.StringPtrOutput)
}

func (o ProjectVersioningStrategyOutput) DonorPackages() ProjectVersioningStrategyDonorPackageArrayOutput {
	return o.ApplyT(func(v ProjectVersioningStrategy) []ProjectVersioningStrategyDonorPackage { return v.DonorPackages }).(ProjectVersioningStrategyDonorPackageArrayOutput)
}

func (o ProjectVersioningStrategyOutput) Template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectVersioningStrategy) *string { return v.Template }).(pulumi.StringPtrOutput)
}

type ProjectVersioningStrategyArrayOutput struct{ *pulumi.OutputState }

func (ProjectVersioningStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectVersioningStrategy)(nil)).Elem()
}

func (o ProjectVersioningStrategyArrayOutput) ToProjectVersioningStrategyArrayOutput() ProjectVersioningStrategyArrayOutput {
	return o
}

func (o ProjectVersioningStrategyArrayOutput) ToProjectVersioningStrategyArrayOutputWithContext(ctx context.Context) ProjectVersioningStrategyArrayOutput {
	return o
}

func (o ProjectVersioningStrategyArrayOutput) Index(i pulumi.IntInput) ProjectVersioningStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectVersioningStrategy {
		return vs[0].([]ProjectVersioningStrategy)[vs[1].(int)]
	}).(ProjectVersioningStrategyOutput)
}

type ProjectVersioningStrategyDonorPackage struct {
	DeploymentAction *string `pulumi:"deploymentAction"`
	PackageReference *string `pulumi:"packageReference"`
}

// ProjectVersioningStrategyDonorPackageInput is an input type that accepts ProjectVersioningStrategyDonorPackageArgs and ProjectVersioningStrategyDonorPackageOutput values.
// You can construct a concrete instance of `ProjectVersioningStrategyDonorPackageInput` via:
//
//	ProjectVersioningStrategyDonorPackageArgs{...}
type ProjectVersioningStrategyDonorPackageInput interface {
	pulumi.Input

	ToProjectVersioningStrategyDonorPackageOutput() ProjectVersioningStrategyDonorPackageOutput
	ToProjectVersioningStrategyDonorPackageOutputWithContext(context.Context) ProjectVersioningStrategyDonorPackageOutput
}

type ProjectVersioningStrategyDonorPackageArgs struct {
	DeploymentAction pulumi.StringPtrInput `pulumi:"deploymentAction"`
	PackageReference pulumi.StringPtrInput `pulumi:"packageReference"`
}

func (ProjectVersioningStrategyDonorPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectVersioningStrategyDonorPackage)(nil)).Elem()
}

func (i ProjectVersioningStrategyDonorPackageArgs) ToProjectVersioningStrategyDonorPackageOutput() ProjectVersioningStrategyDonorPackageOutput {
	return i.ToProjectVersioningStrategyDonorPackageOutputWithContext(context.Background())
}

func (i ProjectVersioningStrategyDonorPackageArgs) ToProjectVersioningStrategyDonorPackageOutputWithContext(ctx context.Context) ProjectVersioningStrategyDonorPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectVersioningStrategyDonorPackageOutput)
}

// ProjectVersioningStrategyDonorPackageArrayInput is an input type that accepts ProjectVersioningStrategyDonorPackageArray and ProjectVersioningStrategyDonorPackageArrayOutput values.
// You can construct a concrete instance of `ProjectVersioningStrategyDonorPackageArrayInput` via:
//
//	ProjectVersioningStrategyDonorPackageArray{ ProjectVersioningStrategyDonorPackageArgs{...} }
type ProjectVersioningStrategyDonorPackageArrayInput interface {
	pulumi.Input

	ToProjectVersioningStrategyDonorPackageArrayOutput() ProjectVersioningStrategyDonorPackageArrayOutput
	ToProjectVersioningStrategyDonorPackageArrayOutputWithContext(context.Context) ProjectVersioningStrategyDonorPackageArrayOutput
}

type ProjectVersioningStrategyDonorPackageArray []ProjectVersioningStrategyDonorPackageInput

func (ProjectVersioningStrategyDonorPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectVersioningStrategyDonorPackage)(nil)).Elem()
}

func (i ProjectVersioningStrategyDonorPackageArray) ToProjectVersioningStrategyDonorPackageArrayOutput() ProjectVersioningStrategyDonorPackageArrayOutput {
	return i.ToProjectVersioningStrategyDonorPackageArrayOutputWithContext(context.Background())
}

func (i ProjectVersioningStrategyDonorPackageArray) ToProjectVersioningStrategyDonorPackageArrayOutputWithContext(ctx context.Context) ProjectVersioningStrategyDonorPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectVersioningStrategyDonorPackageArrayOutput)
}

type ProjectVersioningStrategyDonorPackageOutput struct{ *pulumi.OutputState }

func (ProjectVersioningStrategyDonorPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectVersioningStrategyDonorPackage)(nil)).Elem()
}

func (o ProjectVersioningStrategyDonorPackageOutput) ToProjectVersioningStrategyDonorPackageOutput() ProjectVersioningStrategyDonorPackageOutput {
	return o
}

func (o ProjectVersioningStrategyDonorPackageOutput) ToProjectVersioningStrategyDonorPackageOutputWithContext(ctx context.Context) ProjectVersioningStrategyDonorPackageOutput {
	return o
}

func (o ProjectVersioningStrategyDonorPackageOutput) DeploymentAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectVersioningStrategyDonorPackage) *string { return v.DeploymentAction }).(pulumi.StringPtrOutput)
}

func (o ProjectVersioningStrategyDonorPackageOutput) PackageReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectVersioningStrategyDonorPackage) *string { return v.PackageReference }).(pulumi.StringPtrOutput)
}

type ProjectVersioningStrategyDonorPackageArrayOutput struct{ *pulumi.OutputState }

func (ProjectVersioningStrategyDonorPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectVersioningStrategyDonorPackage)(nil)).Elem()
}

func (o ProjectVersioningStrategyDonorPackageArrayOutput) ToProjectVersioningStrategyDonorPackageArrayOutput() ProjectVersioningStrategyDonorPackageArrayOutput {
	return o
}

func (o ProjectVersioningStrategyDonorPackageArrayOutput) ToProjectVersioningStrategyDonorPackageArrayOutputWithContext(ctx context.Context) ProjectVersioningStrategyDonorPackageArrayOutput {
	return o
}

func (o ProjectVersioningStrategyDonorPackageArrayOutput) Index(i pulumi.IntInput) ProjectVersioningStrategyDonorPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectVersioningStrategyDonorPackage {
		return vs[0].([]ProjectVersioningStrategyDonorPackage)[vs[1].(int)]
	}).(ProjectVersioningStrategyDonorPackageOutput)
}

type RunbookConnectivityPolicy struct {
	AllowDeploymentsToNoTargets *bool    `pulumi:"allowDeploymentsToNoTargets"`
	ExcludeUnhealthyTargets     *bool    `pulumi:"excludeUnhealthyTargets"`
	SkipMachineBehavior         *string  `pulumi:"skipMachineBehavior"`
	TargetRoles                 []string `pulumi:"targetRoles"`
}

// RunbookConnectivityPolicyInput is an input type that accepts RunbookConnectivityPolicyArgs and RunbookConnectivityPolicyOutput values.
// You can construct a concrete instance of `RunbookConnectivityPolicyInput` via:
//
//	RunbookConnectivityPolicyArgs{...}
type RunbookConnectivityPolicyInput interface {
	pulumi.Input

	ToRunbookConnectivityPolicyOutput() RunbookConnectivityPolicyOutput
	ToRunbookConnectivityPolicyOutputWithContext(context.Context) RunbookConnectivityPolicyOutput
}

type RunbookConnectivityPolicyArgs struct {
	AllowDeploymentsToNoTargets pulumi.BoolPtrInput     `pulumi:"allowDeploymentsToNoTargets"`
	ExcludeUnhealthyTargets     pulumi.BoolPtrInput     `pulumi:"excludeUnhealthyTargets"`
	SkipMachineBehavior         pulumi.StringPtrInput   `pulumi:"skipMachineBehavior"`
	TargetRoles                 pulumi.StringArrayInput `pulumi:"targetRoles"`
}

func (RunbookConnectivityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RunbookConnectivityPolicy)(nil)).Elem()
}

func (i RunbookConnectivityPolicyArgs) ToRunbookConnectivityPolicyOutput() RunbookConnectivityPolicyOutput {
	return i.ToRunbookConnectivityPolicyOutputWithContext(context.Background())
}

func (i RunbookConnectivityPolicyArgs) ToRunbookConnectivityPolicyOutputWithContext(ctx context.Context) RunbookConnectivityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RunbookConnectivityPolicyOutput)
}

func (i RunbookConnectivityPolicyArgs) ToRunbookConnectivityPolicyPtrOutput() RunbookConnectivityPolicyPtrOutput {
	return i.ToRunbookConnectivityPolicyPtrOutputWithContext(context.Background())
}

func (i RunbookConnectivityPolicyArgs) ToRunbookConnectivityPolicyPtrOutputWithContext(ctx context.Context) RunbookConnectivityPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RunbookConnectivityPolicyOutput).ToRunbookConnectivityPolicyPtrOutputWithContext(ctx)
}

// RunbookConnectivityPolicyPtrInput is an input type that accepts RunbookConnectivityPolicyArgs, RunbookConnectivityPolicyPtr and RunbookConnectivityPolicyPtrOutput values.
// You can construct a concrete instance of `RunbookConnectivityPolicyPtrInput` via:
//
//	        RunbookConnectivityPolicyArgs{...}
//
//	or:
//
//	        nil
type RunbookConnectivityPolicyPtrInput interface {
	pulumi.Input

	ToRunbookConnectivityPolicyPtrOutput() RunbookConnectivityPolicyPtrOutput
	ToRunbookConnectivityPolicyPtrOutputWithContext(context.Context) RunbookConnectivityPolicyPtrOutput
}

type runbookConnectivityPolicyPtrType RunbookConnectivityPolicyArgs

func RunbookConnectivityPolicyPtr(v *RunbookConnectivityPolicyArgs) RunbookConnectivityPolicyPtrInput {
	return (*runbookConnectivityPolicyPtrType)(v)
}

func (*runbookConnectivityPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RunbookConnectivityPolicy)(nil)).Elem()
}

func (i *runbookConnectivityPolicyPtrType) ToRunbookConnectivityPolicyPtrOutput() RunbookConnectivityPolicyPtrOutput {
	return i.ToRunbookConnectivityPolicyPtrOutputWithContext(context.Background())
}

func (i *runbookConnectivityPolicyPtrType) ToRunbookConnectivityPolicyPtrOutputWithContext(ctx context.Context) RunbookConnectivityPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RunbookConnectivityPolicyPtrOutput)
}

type RunbookConnectivityPolicyOutput struct{ *pulumi.OutputState }

func (RunbookConnectivityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RunbookConnectivityPolicy)(nil)).Elem()
}

func (o RunbookConnectivityPolicyOutput) ToRunbookConnectivityPolicyOutput() RunbookConnectivityPolicyOutput {
	return o
}

func (o RunbookConnectivityPolicyOutput) ToRunbookConnectivityPolicyOutputWithContext(ctx context.Context) RunbookConnectivityPolicyOutput {
	return o
}

func (o RunbookConnectivityPolicyOutput) ToRunbookConnectivityPolicyPtrOutput() RunbookConnectivityPolicyPtrOutput {
	return o.ToRunbookConnectivityPolicyPtrOutputWithContext(context.Background())
}

func (o RunbookConnectivityPolicyOutput) ToRunbookConnectivityPolicyPtrOutputWithContext(ctx context.Context) RunbookConnectivityPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RunbookConnectivityPolicy) *RunbookConnectivityPolicy {
		return &v
	}).(RunbookConnectivityPolicyPtrOutput)
}

func (o RunbookConnectivityPolicyOutput) AllowDeploymentsToNoTargets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RunbookConnectivityPolicy) *bool { return v.AllowDeploymentsToNoTargets }).(pulumi.BoolPtrOutput)
}

func (o RunbookConnectivityPolicyOutput) ExcludeUnhealthyTargets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RunbookConnectivityPolicy) *bool { return v.ExcludeUnhealthyTargets }).(pulumi.BoolPtrOutput)
}

func (o RunbookConnectivityPolicyOutput) SkipMachineBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunbookConnectivityPolicy) *string { return v.SkipMachineBehavior }).(pulumi.StringPtrOutput)
}

func (o RunbookConnectivityPolicyOutput) TargetRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RunbookConnectivityPolicy) []string { return v.TargetRoles }).(pulumi.StringArrayOutput)
}

type RunbookConnectivityPolicyPtrOutput struct{ *pulumi.OutputState }

func (RunbookConnectivityPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RunbookConnectivityPolicy)(nil)).Elem()
}

func (o RunbookConnectivityPolicyPtrOutput) ToRunbookConnectivityPolicyPtrOutput() RunbookConnectivityPolicyPtrOutput {
	return o
}

func (o RunbookConnectivityPolicyPtrOutput) ToRunbookConnectivityPolicyPtrOutputWithContext(ctx context.Context) RunbookConnectivityPolicyPtrOutput {
	return o
}

func (o RunbookConnectivityPolicyPtrOutput) Elem() RunbookConnectivityPolicyOutput {
	return o.ApplyT(func(v *RunbookConnectivityPolicy) RunbookConnectivityPolicy {
		if v != nil {
			return *v
		}
		var ret RunbookConnectivityPolicy
		return ret
	}).(RunbookConnectivityPolicyOutput)
}

func (o RunbookConnectivityPolicyPtrOutput) AllowDeploymentsToNoTargets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RunbookConnectivityPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.AllowDeploymentsToNoTargets
	}).(pulumi.BoolPtrOutput)
}

func (o RunbookConnectivityPolicyPtrOutput) ExcludeUnhealthyTargets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RunbookConnectivityPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.ExcludeUnhealthyTargets
	}).(pulumi.BoolPtrOutput)
}

func (o RunbookConnectivityPolicyPtrOutput) SkipMachineBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RunbookConnectivityPolicy) *string {
		if v == nil {
			return nil
		}
		return v.SkipMachineBehavior
	}).(pulumi.StringPtrOutput)
}

func (o RunbookConnectivityPolicyPtrOutput) TargetRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RunbookConnectivityPolicy) []string {
		if v == nil {
			return nil
		}
		return v.TargetRoles
	}).(pulumi.StringArrayOutput)
}

type RunbookRetentionPolicy struct {
	// How many runs to keep per environment.
	QuantityToKeep *int `pulumi:"quantityToKeep"`
	// Indicates if items should never be deleted. The default value is `false`.
	ShouldKeepForever *bool `pulumi:"shouldKeepForever"`
}

// RunbookRetentionPolicyInput is an input type that accepts RunbookRetentionPolicyArgs and RunbookRetentionPolicyOutput values.
// You can construct a concrete instance of `RunbookRetentionPolicyInput` via:
//
//	RunbookRetentionPolicyArgs{...}
type RunbookRetentionPolicyInput interface {
	pulumi.Input

	ToRunbookRetentionPolicyOutput() RunbookRetentionPolicyOutput
	ToRunbookRetentionPolicyOutputWithContext(context.Context) RunbookRetentionPolicyOutput
}

type RunbookRetentionPolicyArgs struct {
	// How many runs to keep per environment.
	QuantityToKeep pulumi.IntPtrInput `pulumi:"quantityToKeep"`
	// Indicates if items should never be deleted. The default value is `false`.
	ShouldKeepForever pulumi.BoolPtrInput `pulumi:"shouldKeepForever"`
}

func (RunbookRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RunbookRetentionPolicy)(nil)).Elem()
}

func (i RunbookRetentionPolicyArgs) ToRunbookRetentionPolicyOutput() RunbookRetentionPolicyOutput {
	return i.ToRunbookRetentionPolicyOutputWithContext(context.Background())
}

func (i RunbookRetentionPolicyArgs) ToRunbookRetentionPolicyOutputWithContext(ctx context.Context) RunbookRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RunbookRetentionPolicyOutput)
}

func (i RunbookRetentionPolicyArgs) ToRunbookRetentionPolicyPtrOutput() RunbookRetentionPolicyPtrOutput {
	return i.ToRunbookRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i RunbookRetentionPolicyArgs) ToRunbookRetentionPolicyPtrOutputWithContext(ctx context.Context) RunbookRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RunbookRetentionPolicyOutput).ToRunbookRetentionPolicyPtrOutputWithContext(ctx)
}

// RunbookRetentionPolicyPtrInput is an input type that accepts RunbookRetentionPolicyArgs, RunbookRetentionPolicyPtr and RunbookRetentionPolicyPtrOutput values.
// You can construct a concrete instance of `RunbookRetentionPolicyPtrInput` via:
//
//	        RunbookRetentionPolicyArgs{...}
//
//	or:
//
//	        nil
type RunbookRetentionPolicyPtrInput interface {
	pulumi.Input

	ToRunbookRetentionPolicyPtrOutput() RunbookRetentionPolicyPtrOutput
	ToRunbookRetentionPolicyPtrOutputWithContext(context.Context) RunbookRetentionPolicyPtrOutput
}

type runbookRetentionPolicyPtrType RunbookRetentionPolicyArgs

func RunbookRetentionPolicyPtr(v *RunbookRetentionPolicyArgs) RunbookRetentionPolicyPtrInput {
	return (*runbookRetentionPolicyPtrType)(v)
}

func (*runbookRetentionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RunbookRetentionPolicy)(nil)).Elem()
}

func (i *runbookRetentionPolicyPtrType) ToRunbookRetentionPolicyPtrOutput() RunbookRetentionPolicyPtrOutput {
	return i.ToRunbookRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i *runbookRetentionPolicyPtrType) ToRunbookRetentionPolicyPtrOutputWithContext(ctx context.Context) RunbookRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RunbookRetentionPolicyPtrOutput)
}

type RunbookRetentionPolicyOutput struct{ *pulumi.OutputState }

func (RunbookRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RunbookRetentionPolicy)(nil)).Elem()
}

func (o RunbookRetentionPolicyOutput) ToRunbookRetentionPolicyOutput() RunbookRetentionPolicyOutput {
	return o
}

func (o RunbookRetentionPolicyOutput) ToRunbookRetentionPolicyOutputWithContext(ctx context.Context) RunbookRetentionPolicyOutput {
	return o
}

func (o RunbookRetentionPolicyOutput) ToRunbookRetentionPolicyPtrOutput() RunbookRetentionPolicyPtrOutput {
	return o.ToRunbookRetentionPolicyPtrOutputWithContext(context.Background())
}

func (o RunbookRetentionPolicyOutput) ToRunbookRetentionPolicyPtrOutputWithContext(ctx context.Context) RunbookRetentionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RunbookRetentionPolicy) *RunbookRetentionPolicy {
		return &v
	}).(RunbookRetentionPolicyPtrOutput)
}

// How many runs to keep per environment.
func (o RunbookRetentionPolicyOutput) QuantityToKeep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RunbookRetentionPolicy) *int { return v.QuantityToKeep }).(pulumi.IntPtrOutput)
}

// Indicates if items should never be deleted. The default value is `false`.
func (o RunbookRetentionPolicyOutput) ShouldKeepForever() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RunbookRetentionPolicy) *bool { return v.ShouldKeepForever }).(pulumi.BoolPtrOutput)
}

type RunbookRetentionPolicyPtrOutput struct{ *pulumi.OutputState }

func (RunbookRetentionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RunbookRetentionPolicy)(nil)).Elem()
}

func (o RunbookRetentionPolicyPtrOutput) ToRunbookRetentionPolicyPtrOutput() RunbookRetentionPolicyPtrOutput {
	return o
}

func (o RunbookRetentionPolicyPtrOutput) ToRunbookRetentionPolicyPtrOutputWithContext(ctx context.Context) RunbookRetentionPolicyPtrOutput {
	return o
}

func (o RunbookRetentionPolicyPtrOutput) Elem() RunbookRetentionPolicyOutput {
	return o.ApplyT(func(v *RunbookRetentionPolicy) RunbookRetentionPolicy {
		if v != nil {
			return *v
		}
		var ret RunbookRetentionPolicy
		return ret
	}).(RunbookRetentionPolicyOutput)
}

// How many runs to keep per environment.
func (o RunbookRetentionPolicyPtrOutput) QuantityToKeep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RunbookRetentionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.QuantityToKeep
	}).(pulumi.IntPtrOutput)
}

// Indicates if items should never be deleted. The default value is `false`.
func (o RunbookRetentionPolicyPtrOutput) ShouldKeepForever() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RunbookRetentionPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.ShouldKeepForever
	}).(pulumi.BoolPtrOutput)
}

type ScriptModuleScript struct {
	// The body of this script module.
	Body string `pulumi:"body"`
	// The syntax of the script. Valid types are `Bash`, `CSharp`, `FSharp`, `PowerShell`, or `Python`.
	Syntax string `pulumi:"syntax"`
}

// ScriptModuleScriptInput is an input type that accepts ScriptModuleScriptArgs and ScriptModuleScriptOutput values.
// You can construct a concrete instance of `ScriptModuleScriptInput` via:
//
//	ScriptModuleScriptArgs{...}
type ScriptModuleScriptInput interface {
	pulumi.Input

	ToScriptModuleScriptOutput() ScriptModuleScriptOutput
	ToScriptModuleScriptOutputWithContext(context.Context) ScriptModuleScriptOutput
}

type ScriptModuleScriptArgs struct {
	// The body of this script module.
	Body pulumi.StringInput `pulumi:"body"`
	// The syntax of the script. Valid types are `Bash`, `CSharp`, `FSharp`, `PowerShell`, or `Python`.
	Syntax pulumi.StringInput `pulumi:"syntax"`
}

func (ScriptModuleScriptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptModuleScript)(nil)).Elem()
}

func (i ScriptModuleScriptArgs) ToScriptModuleScriptOutput() ScriptModuleScriptOutput {
	return i.ToScriptModuleScriptOutputWithContext(context.Background())
}

func (i ScriptModuleScriptArgs) ToScriptModuleScriptOutputWithContext(ctx context.Context) ScriptModuleScriptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptModuleScriptOutput)
}

func (i ScriptModuleScriptArgs) ToScriptModuleScriptPtrOutput() ScriptModuleScriptPtrOutput {
	return i.ToScriptModuleScriptPtrOutputWithContext(context.Background())
}

func (i ScriptModuleScriptArgs) ToScriptModuleScriptPtrOutputWithContext(ctx context.Context) ScriptModuleScriptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptModuleScriptOutput).ToScriptModuleScriptPtrOutputWithContext(ctx)
}

// ScriptModuleScriptPtrInput is an input type that accepts ScriptModuleScriptArgs, ScriptModuleScriptPtr and ScriptModuleScriptPtrOutput values.
// You can construct a concrete instance of `ScriptModuleScriptPtrInput` via:
//
//	        ScriptModuleScriptArgs{...}
//
//	or:
//
//	        nil
type ScriptModuleScriptPtrInput interface {
	pulumi.Input

	ToScriptModuleScriptPtrOutput() ScriptModuleScriptPtrOutput
	ToScriptModuleScriptPtrOutputWithContext(context.Context) ScriptModuleScriptPtrOutput
}

type scriptModuleScriptPtrType ScriptModuleScriptArgs

func ScriptModuleScriptPtr(v *ScriptModuleScriptArgs) ScriptModuleScriptPtrInput {
	return (*scriptModuleScriptPtrType)(v)
}

func (*scriptModuleScriptPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScriptModuleScript)(nil)).Elem()
}

func (i *scriptModuleScriptPtrType) ToScriptModuleScriptPtrOutput() ScriptModuleScriptPtrOutput {
	return i.ToScriptModuleScriptPtrOutputWithContext(context.Background())
}

func (i *scriptModuleScriptPtrType) ToScriptModuleScriptPtrOutputWithContext(ctx context.Context) ScriptModuleScriptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptModuleScriptPtrOutput)
}

type ScriptModuleScriptOutput struct{ *pulumi.OutputState }

func (ScriptModuleScriptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptModuleScript)(nil)).Elem()
}

func (o ScriptModuleScriptOutput) ToScriptModuleScriptOutput() ScriptModuleScriptOutput {
	return o
}

func (o ScriptModuleScriptOutput) ToScriptModuleScriptOutputWithContext(ctx context.Context) ScriptModuleScriptOutput {
	return o
}

func (o ScriptModuleScriptOutput) ToScriptModuleScriptPtrOutput() ScriptModuleScriptPtrOutput {
	return o.ToScriptModuleScriptPtrOutputWithContext(context.Background())
}

func (o ScriptModuleScriptOutput) ToScriptModuleScriptPtrOutputWithContext(ctx context.Context) ScriptModuleScriptPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScriptModuleScript) *ScriptModuleScript {
		return &v
	}).(ScriptModuleScriptPtrOutput)
}

// The body of this script module.
func (o ScriptModuleScriptOutput) Body() pulumi.StringOutput {
	return o.ApplyT(func(v ScriptModuleScript) string { return v.Body }).(pulumi.StringOutput)
}

// The syntax of the script. Valid types are `Bash`, `CSharp`, `FSharp`, `PowerShell`, or `Python`.
func (o ScriptModuleScriptOutput) Syntax() pulumi.StringOutput {
	return o.ApplyT(func(v ScriptModuleScript) string { return v.Syntax }).(pulumi.StringOutput)
}

type ScriptModuleScriptPtrOutput struct{ *pulumi.OutputState }

func (ScriptModuleScriptPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScriptModuleScript)(nil)).Elem()
}

func (o ScriptModuleScriptPtrOutput) ToScriptModuleScriptPtrOutput() ScriptModuleScriptPtrOutput {
	return o
}

func (o ScriptModuleScriptPtrOutput) ToScriptModuleScriptPtrOutputWithContext(ctx context.Context) ScriptModuleScriptPtrOutput {
	return o
}

func (o ScriptModuleScriptPtrOutput) Elem() ScriptModuleScriptOutput {
	return o.ApplyT(func(v *ScriptModuleScript) ScriptModuleScript {
		if v != nil {
			return *v
		}
		var ret ScriptModuleScript
		return ret
	}).(ScriptModuleScriptOutput)
}

// The body of this script module.
func (o ScriptModuleScriptPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScriptModuleScript) *string {
		if v == nil {
			return nil
		}
		return &v.Body
	}).(pulumi.StringPtrOutput)
}

// The syntax of the script. Valid types are `Bash`, `CSharp`, `FSharp`, `PowerShell`, or `Python`.
func (o ScriptModuleScriptPtrOutput) Syntax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScriptModuleScript) *string {
		if v == nil {
			return nil
		}
		return &v.Syntax
	}).(pulumi.StringPtrOutput)
}

type VariablePrompt struct {
	// The description of this variable prompt option.
	Description     *string                        `pulumi:"description"`
	DisplaySettings *VariablePromptDisplaySettings `pulumi:"displaySettings"`
	IsRequired      *bool                          `pulumi:"isRequired"`
	Label           *string                        `pulumi:"label"`
}

// VariablePromptInput is an input type that accepts VariablePromptArgs and VariablePromptOutput values.
// You can construct a concrete instance of `VariablePromptInput` via:
//
//	VariablePromptArgs{...}
type VariablePromptInput interface {
	pulumi.Input

	ToVariablePromptOutput() VariablePromptOutput
	ToVariablePromptOutputWithContext(context.Context) VariablePromptOutput
}

type VariablePromptArgs struct {
	// The description of this variable prompt option.
	Description     pulumi.StringPtrInput                 `pulumi:"description"`
	DisplaySettings VariablePromptDisplaySettingsPtrInput `pulumi:"displaySettings"`
	IsRequired      pulumi.BoolPtrInput                   `pulumi:"isRequired"`
	Label           pulumi.StringPtrInput                 `pulumi:"label"`
}

func (VariablePromptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VariablePrompt)(nil)).Elem()
}

func (i VariablePromptArgs) ToVariablePromptOutput() VariablePromptOutput {
	return i.ToVariablePromptOutputWithContext(context.Background())
}

func (i VariablePromptArgs) ToVariablePromptOutputWithContext(ctx context.Context) VariablePromptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VariablePromptOutput)
}

func (i VariablePromptArgs) ToVariablePromptPtrOutput() VariablePromptPtrOutput {
	return i.ToVariablePromptPtrOutputWithContext(context.Background())
}

func (i VariablePromptArgs) ToVariablePromptPtrOutputWithContext(ctx context.Context) VariablePromptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VariablePromptOutput).ToVariablePromptPtrOutputWithContext(ctx)
}

// VariablePromptPtrInput is an input type that accepts VariablePromptArgs, VariablePromptPtr and VariablePromptPtrOutput values.
// You can construct a concrete instance of `VariablePromptPtrInput` via:
//
//	        VariablePromptArgs{...}
//
//	or:
//
//	        nil
type VariablePromptPtrInput interface {
	pulumi.Input

	ToVariablePromptPtrOutput() VariablePromptPtrOutput
	ToVariablePromptPtrOutputWithContext(context.Context) VariablePromptPtrOutput
}

type variablePromptPtrType VariablePromptArgs

func VariablePromptPtr(v *VariablePromptArgs) VariablePromptPtrInput {
	return (*variablePromptPtrType)(v)
}

func (*variablePromptPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VariablePrompt)(nil)).Elem()
}

func (i *variablePromptPtrType) ToVariablePromptPtrOutput() VariablePromptPtrOutput {
	return i.ToVariablePromptPtrOutputWithContext(context.Background())
}

func (i *variablePromptPtrType) ToVariablePromptPtrOutputWithContext(ctx context.Context) VariablePromptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VariablePromptPtrOutput)
}

type VariablePromptOutput struct{ *pulumi.OutputState }

func (VariablePromptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VariablePrompt)(nil)).Elem()
}

func (o VariablePromptOutput) ToVariablePromptOutput() VariablePromptOutput {
	return o
}

func (o VariablePromptOutput) ToVariablePromptOutputWithContext(ctx context.Context) VariablePromptOutput {
	return o
}

func (o VariablePromptOutput) ToVariablePromptPtrOutput() VariablePromptPtrOutput {
	return o.ToVariablePromptPtrOutputWithContext(context.Background())
}

func (o VariablePromptOutput) ToVariablePromptPtrOutputWithContext(ctx context.Context) VariablePromptPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VariablePrompt) *VariablePrompt {
		return &v
	}).(VariablePromptPtrOutput)
}

// The description of this variable prompt option.
func (o VariablePromptOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VariablePrompt) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o VariablePromptOutput) DisplaySettings() VariablePromptDisplaySettingsPtrOutput {
	return o.ApplyT(func(v VariablePrompt) *VariablePromptDisplaySettings { return v.DisplaySettings }).(VariablePromptDisplaySettingsPtrOutput)
}

func (o VariablePromptOutput) IsRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VariablePrompt) *bool { return v.IsRequired }).(pulumi.BoolPtrOutput)
}

func (o VariablePromptOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VariablePrompt) *string { return v.Label }).(pulumi.StringPtrOutput)
}

type VariablePromptPtrOutput struct{ *pulumi.OutputState }

func (VariablePromptPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VariablePrompt)(nil)).Elem()
}

func (o VariablePromptPtrOutput) ToVariablePromptPtrOutput() VariablePromptPtrOutput {
	return o
}

func (o VariablePromptPtrOutput) ToVariablePromptPtrOutputWithContext(ctx context.Context) VariablePromptPtrOutput {
	return o
}

func (o VariablePromptPtrOutput) Elem() VariablePromptOutput {
	return o.ApplyT(func(v *VariablePrompt) VariablePrompt {
		if v != nil {
			return *v
		}
		var ret VariablePrompt
		return ret
	}).(VariablePromptOutput)
}

// The description of this variable prompt option.
func (o VariablePromptPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VariablePrompt) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o VariablePromptPtrOutput) DisplaySettings() VariablePromptDisplaySettingsPtrOutput {
	return o.ApplyT(func(v *VariablePrompt) *VariablePromptDisplaySettings {
		if v == nil {
			return nil
		}
		return v.DisplaySettings
	}).(VariablePromptDisplaySettingsPtrOutput)
}

func (o VariablePromptPtrOutput) IsRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VariablePrompt) *bool {
		if v == nil {
			return nil
		}
		return v.IsRequired
	}).(pulumi.BoolPtrOutput)
}

func (o VariablePromptPtrOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VariablePrompt) *string {
		if v == nil {
			return nil
		}
		return v.Label
	}).(pulumi.StringPtrOutput)
}

type VariablePromptDisplaySettings struct {
	// The type of control for rendering this prompted variable. Valid types are `SingleLineText`, `MultiLineText`, `Checkbox`, `Select`.
	ControlType string `pulumi:"controlType"`
	// If the `controlType` is `Select`, then this value defines an option.
	SelectOptions []VariablePromptDisplaySettingsSelectOption `pulumi:"selectOptions"`
}

// VariablePromptDisplaySettingsInput is an input type that accepts VariablePromptDisplaySettingsArgs and VariablePromptDisplaySettingsOutput values.
// You can construct a concrete instance of `VariablePromptDisplaySettingsInput` via:
//
//	VariablePromptDisplaySettingsArgs{...}
type VariablePromptDisplaySettingsInput interface {
	pulumi.Input

	ToVariablePromptDisplaySettingsOutput() VariablePromptDisplaySettingsOutput
	ToVariablePromptDisplaySettingsOutputWithContext(context.Context) VariablePromptDisplaySettingsOutput
}

type VariablePromptDisplaySettingsArgs struct {
	// The type of control for rendering this prompted variable. Valid types are `SingleLineText`, `MultiLineText`, `Checkbox`, `Select`.
	ControlType pulumi.StringInput `pulumi:"controlType"`
	// If the `controlType` is `Select`, then this value defines an option.
	SelectOptions VariablePromptDisplaySettingsSelectOptionArrayInput `pulumi:"selectOptions"`
}

func (VariablePromptDisplaySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VariablePromptDisplaySettings)(nil)).Elem()
}

func (i VariablePromptDisplaySettingsArgs) ToVariablePromptDisplaySettingsOutput() VariablePromptDisplaySettingsOutput {
	return i.ToVariablePromptDisplaySettingsOutputWithContext(context.Background())
}

func (i VariablePromptDisplaySettingsArgs) ToVariablePromptDisplaySettingsOutputWithContext(ctx context.Context) VariablePromptDisplaySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VariablePromptDisplaySettingsOutput)
}

func (i VariablePromptDisplaySettingsArgs) ToVariablePromptDisplaySettingsPtrOutput() VariablePromptDisplaySettingsPtrOutput {
	return i.ToVariablePromptDisplaySettingsPtrOutputWithContext(context.Background())
}

func (i VariablePromptDisplaySettingsArgs) ToVariablePromptDisplaySettingsPtrOutputWithContext(ctx context.Context) VariablePromptDisplaySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VariablePromptDisplaySettingsOutput).ToVariablePromptDisplaySettingsPtrOutputWithContext(ctx)
}

// VariablePromptDisplaySettingsPtrInput is an input type that accepts VariablePromptDisplaySettingsArgs, VariablePromptDisplaySettingsPtr and VariablePromptDisplaySettingsPtrOutput values.
// You can construct a concrete instance of `VariablePromptDisplaySettingsPtrInput` via:
//
//	        VariablePromptDisplaySettingsArgs{...}
//
//	or:
//
//	        nil
type VariablePromptDisplaySettingsPtrInput interface {
	pulumi.Input

	ToVariablePromptDisplaySettingsPtrOutput() VariablePromptDisplaySettingsPtrOutput
	ToVariablePromptDisplaySettingsPtrOutputWithContext(context.Context) VariablePromptDisplaySettingsPtrOutput
}

type variablePromptDisplaySettingsPtrType VariablePromptDisplaySettingsArgs

func VariablePromptDisplaySettingsPtr(v *VariablePromptDisplaySettingsArgs) VariablePromptDisplaySettingsPtrInput {
	return (*variablePromptDisplaySettingsPtrType)(v)
}

func (*variablePromptDisplaySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VariablePromptDisplaySettings)(nil)).Elem()
}

func (i *variablePromptDisplaySettingsPtrType) ToVariablePromptDisplaySettingsPtrOutput() VariablePromptDisplaySettingsPtrOutput {
	return i.ToVariablePromptDisplaySettingsPtrOutputWithContext(context.Background())
}

func (i *variablePromptDisplaySettingsPtrType) ToVariablePromptDisplaySettingsPtrOutputWithContext(ctx context.Context) VariablePromptDisplaySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VariablePromptDisplaySettingsPtrOutput)
}

type VariablePromptDisplaySettingsOutput struct{ *pulumi.OutputState }

func (VariablePromptDisplaySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VariablePromptDisplaySettings)(nil)).Elem()
}

func (o VariablePromptDisplaySettingsOutput) ToVariablePromptDisplaySettingsOutput() VariablePromptDisplaySettingsOutput {
	return o
}

func (o VariablePromptDisplaySettingsOutput) ToVariablePromptDisplaySettingsOutputWithContext(ctx context.Context) VariablePromptDisplaySettingsOutput {
	return o
}

func (o VariablePromptDisplaySettingsOutput) ToVariablePromptDisplaySettingsPtrOutput() VariablePromptDisplaySettingsPtrOutput {
	return o.ToVariablePromptDisplaySettingsPtrOutputWithContext(context.Background())
}

func (o VariablePromptDisplaySettingsOutput) ToVariablePromptDisplaySettingsPtrOutputWithContext(ctx context.Context) VariablePromptDisplaySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VariablePromptDisplaySettings) *VariablePromptDisplaySettings {
		return &v
	}).(VariablePromptDisplaySettingsPtrOutput)
}

// The type of control for rendering this prompted variable. Valid types are `SingleLineText`, `MultiLineText`, `Checkbox`, `Select`.
func (o VariablePromptDisplaySettingsOutput) ControlType() pulumi.StringOutput {
	return o.ApplyT(func(v VariablePromptDisplaySettings) string { return v.ControlType }).(pulumi.StringOutput)
}

// If the `controlType` is `Select`, then this value defines an option.
func (o VariablePromptDisplaySettingsOutput) SelectOptions() VariablePromptDisplaySettingsSelectOptionArrayOutput {
	return o.ApplyT(func(v VariablePromptDisplaySettings) []VariablePromptDisplaySettingsSelectOption {
		return v.SelectOptions
	}).(VariablePromptDisplaySettingsSelectOptionArrayOutput)
}

type VariablePromptDisplaySettingsPtrOutput struct{ *pulumi.OutputState }

func (VariablePromptDisplaySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VariablePromptDisplaySettings)(nil)).Elem()
}

func (o VariablePromptDisplaySettingsPtrOutput) ToVariablePromptDisplaySettingsPtrOutput() VariablePromptDisplaySettingsPtrOutput {
	return o
}

func (o VariablePromptDisplaySettingsPtrOutput) ToVariablePromptDisplaySettingsPtrOutputWithContext(ctx context.Context) VariablePromptDisplaySettingsPtrOutput {
	return o
}

func (o VariablePromptDisplaySettingsPtrOutput) Elem() VariablePromptDisplaySettingsOutput {
	return o.ApplyT(func(v *VariablePromptDisplaySettings) VariablePromptDisplaySettings {
		if v != nil {
			return *v
		}
		var ret VariablePromptDisplaySettings
		return ret
	}).(VariablePromptDisplaySettingsOutput)
}

// The type of control for rendering this prompted variable. Valid types are `SingleLineText`, `MultiLineText`, `Checkbox`, `Select`.
func (o VariablePromptDisplaySettingsPtrOutput) ControlType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VariablePromptDisplaySettings) *string {
		if v == nil {
			return nil
		}
		return &v.ControlType
	}).(pulumi.StringPtrOutput)
}

// If the `controlType` is `Select`, then this value defines an option.
func (o VariablePromptDisplaySettingsPtrOutput) SelectOptions() VariablePromptDisplaySettingsSelectOptionArrayOutput {
	return o.ApplyT(func(v *VariablePromptDisplaySettings) []VariablePromptDisplaySettingsSelectOption {
		if v == nil {
			return nil
		}
		return v.SelectOptions
	}).(VariablePromptDisplaySettingsSelectOptionArrayOutput)
}

type VariablePromptDisplaySettingsSelectOption struct {
	// The display name for the select value
	DisplayName string `pulumi:"displayName"`
	// The select value
	Value string `pulumi:"value"`
}

// VariablePromptDisplaySettingsSelectOptionInput is an input type that accepts VariablePromptDisplaySettingsSelectOptionArgs and VariablePromptDisplaySettingsSelectOptionOutput values.
// You can construct a concrete instance of `VariablePromptDisplaySettingsSelectOptionInput` via:
//
//	VariablePromptDisplaySettingsSelectOptionArgs{...}
type VariablePromptDisplaySettingsSelectOptionInput interface {
	pulumi.Input

	ToVariablePromptDisplaySettingsSelectOptionOutput() VariablePromptDisplaySettingsSelectOptionOutput
	ToVariablePromptDisplaySettingsSelectOptionOutputWithContext(context.Context) VariablePromptDisplaySettingsSelectOptionOutput
}

type VariablePromptDisplaySettingsSelectOptionArgs struct {
	// The display name for the select value
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The select value
	Value pulumi.StringInput `pulumi:"value"`
}

func (VariablePromptDisplaySettingsSelectOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VariablePromptDisplaySettingsSelectOption)(nil)).Elem()
}

func (i VariablePromptDisplaySettingsSelectOptionArgs) ToVariablePromptDisplaySettingsSelectOptionOutput() VariablePromptDisplaySettingsSelectOptionOutput {
	return i.ToVariablePromptDisplaySettingsSelectOptionOutputWithContext(context.Background())
}

func (i VariablePromptDisplaySettingsSelectOptionArgs) ToVariablePromptDisplaySettingsSelectOptionOutputWithContext(ctx context.Context) VariablePromptDisplaySettingsSelectOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VariablePromptDisplaySettingsSelectOptionOutput)
}

// VariablePromptDisplaySettingsSelectOptionArrayInput is an input type that accepts VariablePromptDisplaySettingsSelectOptionArray and VariablePromptDisplaySettingsSelectOptionArrayOutput values.
// You can construct a concrete instance of `VariablePromptDisplaySettingsSelectOptionArrayInput` via:
//
//	VariablePromptDisplaySettingsSelectOptionArray{ VariablePromptDisplaySettingsSelectOptionArgs{...} }
type VariablePromptDisplaySettingsSelectOptionArrayInput interface {
	pulumi.Input

	ToVariablePromptDisplaySettingsSelectOptionArrayOutput() VariablePromptDisplaySettingsSelectOptionArrayOutput
	ToVariablePromptDisplaySettingsSelectOptionArrayOutputWithContext(context.Context) VariablePromptDisplaySettingsSelectOptionArrayOutput
}

type VariablePromptDisplaySettingsSelectOptionArray []VariablePromptDisplaySettingsSelectOptionInput

func (VariablePromptDisplaySettingsSelectOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VariablePromptDisplaySettingsSelectOption)(nil)).Elem()
}

func (i VariablePromptDisplaySettingsSelectOptionArray) ToVariablePromptDisplaySettingsSelectOptionArrayOutput() VariablePromptDisplaySettingsSelectOptionArrayOutput {
	return i.ToVariablePromptDisplaySettingsSelectOptionArrayOutputWithContext(context.Background())
}

func (i VariablePromptDisplaySettingsSelectOptionArray) ToVariablePromptDisplaySettingsSelectOptionArrayOutputWithContext(ctx context.Context) VariablePromptDisplaySettingsSelectOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VariablePromptDisplaySettingsSelectOptionArrayOutput)
}

type VariablePromptDisplaySettingsSelectOptionOutput struct{ *pulumi.OutputState }

func (VariablePromptDisplaySettingsSelectOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VariablePromptDisplaySettingsSelectOption)(nil)).Elem()
}

func (o VariablePromptDisplaySettingsSelectOptionOutput) ToVariablePromptDisplaySettingsSelectOptionOutput() VariablePromptDisplaySettingsSelectOptionOutput {
	return o
}

func (o VariablePromptDisplaySettingsSelectOptionOutput) ToVariablePromptDisplaySettingsSelectOptionOutputWithContext(ctx context.Context) VariablePromptDisplaySettingsSelectOptionOutput {
	return o
}

// The display name for the select value
func (o VariablePromptDisplaySettingsSelectOptionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v VariablePromptDisplaySettingsSelectOption) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The select value
func (o VariablePromptDisplaySettingsSelectOptionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VariablePromptDisplaySettingsSelectOption) string { return v.Value }).(pulumi.StringOutput)
}

type VariablePromptDisplaySettingsSelectOptionArrayOutput struct{ *pulumi.OutputState }

func (VariablePromptDisplaySettingsSelectOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VariablePromptDisplaySettingsSelectOption)(nil)).Elem()
}

func (o VariablePromptDisplaySettingsSelectOptionArrayOutput) ToVariablePromptDisplaySettingsSelectOptionArrayOutput() VariablePromptDisplaySettingsSelectOptionArrayOutput {
	return o
}

func (o VariablePromptDisplaySettingsSelectOptionArrayOutput) ToVariablePromptDisplaySettingsSelectOptionArrayOutputWithContext(ctx context.Context) VariablePromptDisplaySettingsSelectOptionArrayOutput {
	return o
}

func (o VariablePromptDisplaySettingsSelectOptionArrayOutput) Index(i pulumi.IntInput) VariablePromptDisplaySettingsSelectOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VariablePromptDisplaySettingsSelectOption {
		return vs[0].([]VariablePromptDisplaySettingsSelectOption)[vs[1].(int)]
	}).(VariablePromptDisplaySettingsSelectOptionOutput)
}

type VariableScope struct {
	// A list of actions that are scoped to this variable value.
	Actions []string `pulumi:"actions"`
	// A list of channels that are scoped to this variable value.
	Channels []string `pulumi:"channels"`
	// A list of environments that are scoped to this variable value.
	Environments []string `pulumi:"environments"`
	// A list of machines that are scoped to this variable value.
	Machines []string `pulumi:"machines"`
	// A list of processes that are scoped to this variable value.
	Processes []string `pulumi:"processes"`
	// A list of roles that are scoped to this variable value.
	Roles []string `pulumi:"roles"`
	// A list of tenant tags that are scoped to this variable value.
	TenantTags []string `pulumi:"tenantTags"`
}

// VariableScopeInput is an input type that accepts VariableScopeArgs and VariableScopeOutput values.
// You can construct a concrete instance of `VariableScopeInput` via:
//
//	VariableScopeArgs{...}
type VariableScopeInput interface {
	pulumi.Input

	ToVariableScopeOutput() VariableScopeOutput
	ToVariableScopeOutputWithContext(context.Context) VariableScopeOutput
}

type VariableScopeArgs struct {
	// A list of actions that are scoped to this variable value.
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// A list of channels that are scoped to this variable value.
	Channels pulumi.StringArrayInput `pulumi:"channels"`
	// A list of environments that are scoped to this variable value.
	Environments pulumi.StringArrayInput `pulumi:"environments"`
	// A list of machines that are scoped to this variable value.
	Machines pulumi.StringArrayInput `pulumi:"machines"`
	// A list of processes that are scoped to this variable value.
	Processes pulumi.StringArrayInput `pulumi:"processes"`
	// A list of roles that are scoped to this variable value.
	Roles pulumi.StringArrayInput `pulumi:"roles"`
	// A list of tenant tags that are scoped to this variable value.
	TenantTags pulumi.StringArrayInput `pulumi:"tenantTags"`
}

func (VariableScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VariableScope)(nil)).Elem()
}

func (i VariableScopeArgs) ToVariableScopeOutput() VariableScopeOutput {
	return i.ToVariableScopeOutputWithContext(context.Background())
}

func (i VariableScopeArgs) ToVariableScopeOutputWithContext(ctx context.Context) VariableScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VariableScopeOutput)
}

func (i VariableScopeArgs) ToVariableScopePtrOutput() VariableScopePtrOutput {
	return i.ToVariableScopePtrOutputWithContext(context.Background())
}

func (i VariableScopeArgs) ToVariableScopePtrOutputWithContext(ctx context.Context) VariableScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VariableScopeOutput).ToVariableScopePtrOutputWithContext(ctx)
}

// VariableScopePtrInput is an input type that accepts VariableScopeArgs, VariableScopePtr and VariableScopePtrOutput values.
// You can construct a concrete instance of `VariableScopePtrInput` via:
//
//	        VariableScopeArgs{...}
//
//	or:
//
//	        nil
type VariableScopePtrInput interface {
	pulumi.Input

	ToVariableScopePtrOutput() VariableScopePtrOutput
	ToVariableScopePtrOutputWithContext(context.Context) VariableScopePtrOutput
}

type variableScopePtrType VariableScopeArgs

func VariableScopePtr(v *VariableScopeArgs) VariableScopePtrInput {
	return (*variableScopePtrType)(v)
}

func (*variableScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VariableScope)(nil)).Elem()
}

func (i *variableScopePtrType) ToVariableScopePtrOutput() VariableScopePtrOutput {
	return i.ToVariableScopePtrOutputWithContext(context.Background())
}

func (i *variableScopePtrType) ToVariableScopePtrOutputWithContext(ctx context.Context) VariableScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VariableScopePtrOutput)
}

type VariableScopeOutput struct{ *pulumi.OutputState }

func (VariableScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VariableScope)(nil)).Elem()
}

func (o VariableScopeOutput) ToVariableScopeOutput() VariableScopeOutput {
	return o
}

func (o VariableScopeOutput) ToVariableScopeOutputWithContext(ctx context.Context) VariableScopeOutput {
	return o
}

func (o VariableScopeOutput) ToVariableScopePtrOutput() VariableScopePtrOutput {
	return o.ToVariableScopePtrOutputWithContext(context.Background())
}

func (o VariableScopeOutput) ToVariableScopePtrOutputWithContext(ctx context.Context) VariableScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VariableScope) *VariableScope {
		return &v
	}).(VariableScopePtrOutput)
}

// A list of actions that are scoped to this variable value.
func (o VariableScopeOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VariableScope) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// A list of channels that are scoped to this variable value.
func (o VariableScopeOutput) Channels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VariableScope) []string { return v.Channels }).(pulumi.StringArrayOutput)
}

// A list of environments that are scoped to this variable value.
func (o VariableScopeOutput) Environments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VariableScope) []string { return v.Environments }).(pulumi.StringArrayOutput)
}

// A list of machines that are scoped to this variable value.
func (o VariableScopeOutput) Machines() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VariableScope) []string { return v.Machines }).(pulumi.StringArrayOutput)
}

// A list of processes that are scoped to this variable value.
func (o VariableScopeOutput) Processes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VariableScope) []string { return v.Processes }).(pulumi.StringArrayOutput)
}

// A list of roles that are scoped to this variable value.
func (o VariableScopeOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VariableScope) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

// A list of tenant tags that are scoped to this variable value.
func (o VariableScopeOutput) TenantTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VariableScope) []string { return v.TenantTags }).(pulumi.StringArrayOutput)
}

type VariableScopePtrOutput struct{ *pulumi.OutputState }

func (VariableScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VariableScope)(nil)).Elem()
}

func (o VariableScopePtrOutput) ToVariableScopePtrOutput() VariableScopePtrOutput {
	return o
}

func (o VariableScopePtrOutput) ToVariableScopePtrOutputWithContext(ctx context.Context) VariableScopePtrOutput {
	return o
}

func (o VariableScopePtrOutput) Elem() VariableScopeOutput {
	return o.ApplyT(func(v *VariableScope) VariableScope {
		if v != nil {
			return *v
		}
		var ret VariableScope
		return ret
	}).(VariableScopeOutput)
}

// A list of actions that are scoped to this variable value.
func (o VariableScopePtrOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VariableScope) []string {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(pulumi.StringArrayOutput)
}

// A list of channels that are scoped to this variable value.
func (o VariableScopePtrOutput) Channels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VariableScope) []string {
		if v == nil {
			return nil
		}
		return v.Channels
	}).(pulumi.StringArrayOutput)
}

// A list of environments that are scoped to this variable value.
func (o VariableScopePtrOutput) Environments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VariableScope) []string {
		if v == nil {
			return nil
		}
		return v.Environments
	}).(pulumi.StringArrayOutput)
}

// A list of machines that are scoped to this variable value.
func (o VariableScopePtrOutput) Machines() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VariableScope) []string {
		if v == nil {
			return nil
		}
		return v.Machines
	}).(pulumi.StringArrayOutput)
}

// A list of processes that are scoped to this variable value.
func (o VariableScopePtrOutput) Processes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VariableScope) []string {
		if v == nil {
			return nil
		}
		return v.Processes
	}).(pulumi.StringArrayOutput)
}

// A list of roles that are scoped to this variable value.
func (o VariableScopePtrOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VariableScope) []string {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(pulumi.StringArrayOutput)
}

// A list of tenant tags that are scoped to this variable value.
func (o VariableScopePtrOutput) TenantTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VariableScope) []string {
		if v == nil {
			return nil
		}
		return v.TenantTags
	}).(pulumi.StringArrayOutput)
}

type GetEnvironmentsEnvironment struct {
	AllowDynamicInfrastructure bool `pulumi:"allowDynamicInfrastructure"`
	// The description of this environment.
	Description string `pulumi:"description"`
	// The unique ID for this resource.
	Id string `pulumi:"id"`
	// Provides extension settings for the Jira integration for this environment.
	JiraExtensionSettings []GetEnvironmentsEnvironmentJiraExtensionSetting `pulumi:"jiraExtensionSettings"`
	// Provides extension settings for the Jira Service Management (JSM) integration for this environment.
	JiraServiceManagementExtensionSettings []GetEnvironmentsEnvironmentJiraServiceManagementExtensionSetting `pulumi:"jiraServiceManagementExtensionSettings"`
	// The name of this resource.
	Name string `pulumi:"name"`
	// Provides extension settings for the ServiceNow integration for this environment.
	ServicenowExtensionSettings []GetEnvironmentsEnvironmentServicenowExtensionSetting `pulumi:"servicenowExtensionSettings"`
	// The unique slug of this environment
	Slug string `pulumi:"slug"`
	// The order number to sort an environment
	SortOrder int `pulumi:"sortOrder"`
	// The space ID associated with this environment.
	SpaceId          string `pulumi:"spaceId"`
	UseGuidedFailure bool   `pulumi:"useGuidedFailure"`
}

// GetEnvironmentsEnvironmentInput is an input type that accepts GetEnvironmentsEnvironmentArgs and GetEnvironmentsEnvironmentOutput values.
// You can construct a concrete instance of `GetEnvironmentsEnvironmentInput` via:
//
//	GetEnvironmentsEnvironmentArgs{...}
type GetEnvironmentsEnvironmentInput interface {
	pulumi.Input

	ToGetEnvironmentsEnvironmentOutput() GetEnvironmentsEnvironmentOutput
	ToGetEnvironmentsEnvironmentOutputWithContext(context.Context) GetEnvironmentsEnvironmentOutput
}

type GetEnvironmentsEnvironmentArgs struct {
	AllowDynamicInfrastructure pulumi.BoolInput `pulumi:"allowDynamicInfrastructure"`
	// The description of this environment.
	Description pulumi.StringInput `pulumi:"description"`
	// The unique ID for this resource.
	Id pulumi.StringInput `pulumi:"id"`
	// Provides extension settings for the Jira integration for this environment.
	JiraExtensionSettings GetEnvironmentsEnvironmentJiraExtensionSettingArrayInput `pulumi:"jiraExtensionSettings"`
	// Provides extension settings for the Jira Service Management (JSM) integration for this environment.
	JiraServiceManagementExtensionSettings GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayInput `pulumi:"jiraServiceManagementExtensionSettings"`
	// The name of this resource.
	Name pulumi.StringInput `pulumi:"name"`
	// Provides extension settings for the ServiceNow integration for this environment.
	ServicenowExtensionSettings GetEnvironmentsEnvironmentServicenowExtensionSettingArrayInput `pulumi:"servicenowExtensionSettings"`
	// The unique slug of this environment
	Slug pulumi.StringInput `pulumi:"slug"`
	// The order number to sort an environment
	SortOrder pulumi.IntInput `pulumi:"sortOrder"`
	// The space ID associated with this environment.
	SpaceId          pulumi.StringInput `pulumi:"spaceId"`
	UseGuidedFailure pulumi.BoolInput   `pulumi:"useGuidedFailure"`
}

func (GetEnvironmentsEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentsEnvironment)(nil)).Elem()
}

func (i GetEnvironmentsEnvironmentArgs) ToGetEnvironmentsEnvironmentOutput() GetEnvironmentsEnvironmentOutput {
	return i.ToGetEnvironmentsEnvironmentOutputWithContext(context.Background())
}

func (i GetEnvironmentsEnvironmentArgs) ToGetEnvironmentsEnvironmentOutputWithContext(ctx context.Context) GetEnvironmentsEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentsEnvironmentOutput)
}

// GetEnvironmentsEnvironmentArrayInput is an input type that accepts GetEnvironmentsEnvironmentArray and GetEnvironmentsEnvironmentArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentsEnvironmentArrayInput` via:
//
//	GetEnvironmentsEnvironmentArray{ GetEnvironmentsEnvironmentArgs{...} }
type GetEnvironmentsEnvironmentArrayInput interface {
	pulumi.Input

	ToGetEnvironmentsEnvironmentArrayOutput() GetEnvironmentsEnvironmentArrayOutput
	ToGetEnvironmentsEnvironmentArrayOutputWithContext(context.Context) GetEnvironmentsEnvironmentArrayOutput
}

type GetEnvironmentsEnvironmentArray []GetEnvironmentsEnvironmentInput

func (GetEnvironmentsEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentsEnvironment)(nil)).Elem()
}

func (i GetEnvironmentsEnvironmentArray) ToGetEnvironmentsEnvironmentArrayOutput() GetEnvironmentsEnvironmentArrayOutput {
	return i.ToGetEnvironmentsEnvironmentArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentsEnvironmentArray) ToGetEnvironmentsEnvironmentArrayOutputWithContext(ctx context.Context) GetEnvironmentsEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentsEnvironmentArrayOutput)
}

type GetEnvironmentsEnvironmentOutput struct{ *pulumi.OutputState }

func (GetEnvironmentsEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentsEnvironment)(nil)).Elem()
}

func (o GetEnvironmentsEnvironmentOutput) ToGetEnvironmentsEnvironmentOutput() GetEnvironmentsEnvironmentOutput {
	return o
}

func (o GetEnvironmentsEnvironmentOutput) ToGetEnvironmentsEnvironmentOutputWithContext(ctx context.Context) GetEnvironmentsEnvironmentOutput {
	return o
}

func (o GetEnvironmentsEnvironmentOutput) AllowDynamicInfrastructure() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEnvironmentsEnvironment) bool { return v.AllowDynamicInfrastructure }).(pulumi.BoolOutput)
}

// The description of this environment.
func (o GetEnvironmentsEnvironmentOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentsEnvironment) string { return v.Description }).(pulumi.StringOutput)
}

// The unique ID for this resource.
func (o GetEnvironmentsEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentsEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

// Provides extension settings for the Jira integration for this environment.
func (o GetEnvironmentsEnvironmentOutput) JiraExtensionSettings() GetEnvironmentsEnvironmentJiraExtensionSettingArrayOutput {
	return o.ApplyT(func(v GetEnvironmentsEnvironment) []GetEnvironmentsEnvironmentJiraExtensionSetting {
		return v.JiraExtensionSettings
	}).(GetEnvironmentsEnvironmentJiraExtensionSettingArrayOutput)
}

// Provides extension settings for the Jira Service Management (JSM) integration for this environment.
func (o GetEnvironmentsEnvironmentOutput) JiraServiceManagementExtensionSettings() GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayOutput {
	return o.ApplyT(func(v GetEnvironmentsEnvironment) []GetEnvironmentsEnvironmentJiraServiceManagementExtensionSetting {
		return v.JiraServiceManagementExtensionSettings
	}).(GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayOutput)
}

// The name of this resource.
func (o GetEnvironmentsEnvironmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentsEnvironment) string { return v.Name }).(pulumi.StringOutput)
}

// Provides extension settings for the ServiceNow integration for this environment.
func (o GetEnvironmentsEnvironmentOutput) ServicenowExtensionSettings() GetEnvironmentsEnvironmentServicenowExtensionSettingArrayOutput {
	return o.ApplyT(func(v GetEnvironmentsEnvironment) []GetEnvironmentsEnvironmentServicenowExtensionSetting {
		return v.ServicenowExtensionSettings
	}).(GetEnvironmentsEnvironmentServicenowExtensionSettingArrayOutput)
}

// The unique slug of this environment
func (o GetEnvironmentsEnvironmentOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentsEnvironment) string { return v.Slug }).(pulumi.StringOutput)
}

// The order number to sort an environment
func (o GetEnvironmentsEnvironmentOutput) SortOrder() pulumi.IntOutput {
	return o.ApplyT(func(v GetEnvironmentsEnvironment) int { return v.SortOrder }).(pulumi.IntOutput)
}

// The space ID associated with this environment.
func (o GetEnvironmentsEnvironmentOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentsEnvironment) string { return v.SpaceId }).(pulumi.StringOutput)
}

func (o GetEnvironmentsEnvironmentOutput) UseGuidedFailure() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEnvironmentsEnvironment) bool { return v.UseGuidedFailure }).(pulumi.BoolOutput)
}

type GetEnvironmentsEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentsEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentsEnvironment)(nil)).Elem()
}

func (o GetEnvironmentsEnvironmentArrayOutput) ToGetEnvironmentsEnvironmentArrayOutput() GetEnvironmentsEnvironmentArrayOutput {
	return o
}

func (o GetEnvironmentsEnvironmentArrayOutput) ToGetEnvironmentsEnvironmentArrayOutputWithContext(ctx context.Context) GetEnvironmentsEnvironmentArrayOutput {
	return o
}

func (o GetEnvironmentsEnvironmentArrayOutput) Index(i pulumi.IntInput) GetEnvironmentsEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentsEnvironment {
		return vs[0].([]GetEnvironmentsEnvironment)[vs[1].(int)]
	}).(GetEnvironmentsEnvironmentOutput)
}

type GetEnvironmentsEnvironmentJiraExtensionSetting struct {
	EnvironmentType string `pulumi:"environmentType"`
}

// GetEnvironmentsEnvironmentJiraExtensionSettingInput is an input type that accepts GetEnvironmentsEnvironmentJiraExtensionSettingArgs and GetEnvironmentsEnvironmentJiraExtensionSettingOutput values.
// You can construct a concrete instance of `GetEnvironmentsEnvironmentJiraExtensionSettingInput` via:
//
//	GetEnvironmentsEnvironmentJiraExtensionSettingArgs{...}
type GetEnvironmentsEnvironmentJiraExtensionSettingInput interface {
	pulumi.Input

	ToGetEnvironmentsEnvironmentJiraExtensionSettingOutput() GetEnvironmentsEnvironmentJiraExtensionSettingOutput
	ToGetEnvironmentsEnvironmentJiraExtensionSettingOutputWithContext(context.Context) GetEnvironmentsEnvironmentJiraExtensionSettingOutput
}

type GetEnvironmentsEnvironmentJiraExtensionSettingArgs struct {
	EnvironmentType pulumi.StringInput `pulumi:"environmentType"`
}

func (GetEnvironmentsEnvironmentJiraExtensionSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentsEnvironmentJiraExtensionSetting)(nil)).Elem()
}

func (i GetEnvironmentsEnvironmentJiraExtensionSettingArgs) ToGetEnvironmentsEnvironmentJiraExtensionSettingOutput() GetEnvironmentsEnvironmentJiraExtensionSettingOutput {
	return i.ToGetEnvironmentsEnvironmentJiraExtensionSettingOutputWithContext(context.Background())
}

func (i GetEnvironmentsEnvironmentJiraExtensionSettingArgs) ToGetEnvironmentsEnvironmentJiraExtensionSettingOutputWithContext(ctx context.Context) GetEnvironmentsEnvironmentJiraExtensionSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentsEnvironmentJiraExtensionSettingOutput)
}

// GetEnvironmentsEnvironmentJiraExtensionSettingArrayInput is an input type that accepts GetEnvironmentsEnvironmentJiraExtensionSettingArray and GetEnvironmentsEnvironmentJiraExtensionSettingArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentsEnvironmentJiraExtensionSettingArrayInput` via:
//
//	GetEnvironmentsEnvironmentJiraExtensionSettingArray{ GetEnvironmentsEnvironmentJiraExtensionSettingArgs{...} }
type GetEnvironmentsEnvironmentJiraExtensionSettingArrayInput interface {
	pulumi.Input

	ToGetEnvironmentsEnvironmentJiraExtensionSettingArrayOutput() GetEnvironmentsEnvironmentJiraExtensionSettingArrayOutput
	ToGetEnvironmentsEnvironmentJiraExtensionSettingArrayOutputWithContext(context.Context) GetEnvironmentsEnvironmentJiraExtensionSettingArrayOutput
}

type GetEnvironmentsEnvironmentJiraExtensionSettingArray []GetEnvironmentsEnvironmentJiraExtensionSettingInput

func (GetEnvironmentsEnvironmentJiraExtensionSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentsEnvironmentJiraExtensionSetting)(nil)).Elem()
}

func (i GetEnvironmentsEnvironmentJiraExtensionSettingArray) ToGetEnvironmentsEnvironmentJiraExtensionSettingArrayOutput() GetEnvironmentsEnvironmentJiraExtensionSettingArrayOutput {
	return i.ToGetEnvironmentsEnvironmentJiraExtensionSettingArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentsEnvironmentJiraExtensionSettingArray) ToGetEnvironmentsEnvironmentJiraExtensionSettingArrayOutputWithContext(ctx context.Context) GetEnvironmentsEnvironmentJiraExtensionSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentsEnvironmentJiraExtensionSettingArrayOutput)
}

type GetEnvironmentsEnvironmentJiraExtensionSettingOutput struct{ *pulumi.OutputState }

func (GetEnvironmentsEnvironmentJiraExtensionSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentsEnvironmentJiraExtensionSetting)(nil)).Elem()
}

func (o GetEnvironmentsEnvironmentJiraExtensionSettingOutput) ToGetEnvironmentsEnvironmentJiraExtensionSettingOutput() GetEnvironmentsEnvironmentJiraExtensionSettingOutput {
	return o
}

func (o GetEnvironmentsEnvironmentJiraExtensionSettingOutput) ToGetEnvironmentsEnvironmentJiraExtensionSettingOutputWithContext(ctx context.Context) GetEnvironmentsEnvironmentJiraExtensionSettingOutput {
	return o
}

func (o GetEnvironmentsEnvironmentJiraExtensionSettingOutput) EnvironmentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentsEnvironmentJiraExtensionSetting) string { return v.EnvironmentType }).(pulumi.StringOutput)
}

type GetEnvironmentsEnvironmentJiraExtensionSettingArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentsEnvironmentJiraExtensionSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentsEnvironmentJiraExtensionSetting)(nil)).Elem()
}

func (o GetEnvironmentsEnvironmentJiraExtensionSettingArrayOutput) ToGetEnvironmentsEnvironmentJiraExtensionSettingArrayOutput() GetEnvironmentsEnvironmentJiraExtensionSettingArrayOutput {
	return o
}

func (o GetEnvironmentsEnvironmentJiraExtensionSettingArrayOutput) ToGetEnvironmentsEnvironmentJiraExtensionSettingArrayOutputWithContext(ctx context.Context) GetEnvironmentsEnvironmentJiraExtensionSettingArrayOutput {
	return o
}

func (o GetEnvironmentsEnvironmentJiraExtensionSettingArrayOutput) Index(i pulumi.IntInput) GetEnvironmentsEnvironmentJiraExtensionSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentsEnvironmentJiraExtensionSetting {
		return vs[0].([]GetEnvironmentsEnvironmentJiraExtensionSetting)[vs[1].(int)]
	}).(GetEnvironmentsEnvironmentJiraExtensionSettingOutput)
}

type GetEnvironmentsEnvironmentJiraServiceManagementExtensionSetting struct {
	IsEnabled bool `pulumi:"isEnabled"`
}

// GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingInput is an input type that accepts GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArgs and GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingOutput values.
// You can construct a concrete instance of `GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingInput` via:
//
//	GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArgs{...}
type GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingInput interface {
	pulumi.Input

	ToGetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingOutput() GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingOutput
	ToGetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingOutputWithContext(context.Context) GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingOutput
}

type GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArgs struct {
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

func (GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentsEnvironmentJiraServiceManagementExtensionSetting)(nil)).Elem()
}

func (i GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArgs) ToGetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingOutput() GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingOutput {
	return i.ToGetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingOutputWithContext(context.Background())
}

func (i GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArgs) ToGetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingOutputWithContext(ctx context.Context) GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingOutput)
}

// GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayInput is an input type that accepts GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArray and GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayInput` via:
//
//	GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArray{ GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArgs{...} }
type GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayInput interface {
	pulumi.Input

	ToGetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayOutput() GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayOutput
	ToGetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayOutputWithContext(context.Context) GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayOutput
}

type GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArray []GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingInput

func (GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentsEnvironmentJiraServiceManagementExtensionSetting)(nil)).Elem()
}

func (i GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArray) ToGetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayOutput() GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayOutput {
	return i.ToGetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArray) ToGetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayOutputWithContext(ctx context.Context) GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayOutput)
}

type GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingOutput struct{ *pulumi.OutputState }

func (GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentsEnvironmentJiraServiceManagementExtensionSetting)(nil)).Elem()
}

func (o GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingOutput) ToGetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingOutput() GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingOutput {
	return o
}

func (o GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingOutput) ToGetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingOutputWithContext(ctx context.Context) GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingOutput {
	return o
}

func (o GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEnvironmentsEnvironmentJiraServiceManagementExtensionSetting) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentsEnvironmentJiraServiceManagementExtensionSetting)(nil)).Elem()
}

func (o GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayOutput) ToGetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayOutput() GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayOutput {
	return o
}

func (o GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayOutput) ToGetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayOutputWithContext(ctx context.Context) GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayOutput {
	return o
}

func (o GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayOutput) Index(i pulumi.IntInput) GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentsEnvironmentJiraServiceManagementExtensionSetting {
		return vs[0].([]GetEnvironmentsEnvironmentJiraServiceManagementExtensionSetting)[vs[1].(int)]
	}).(GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingOutput)
}

type GetEnvironmentsEnvironmentServicenowExtensionSetting struct {
	IsEnabled bool `pulumi:"isEnabled"`
}

// GetEnvironmentsEnvironmentServicenowExtensionSettingInput is an input type that accepts GetEnvironmentsEnvironmentServicenowExtensionSettingArgs and GetEnvironmentsEnvironmentServicenowExtensionSettingOutput values.
// You can construct a concrete instance of `GetEnvironmentsEnvironmentServicenowExtensionSettingInput` via:
//
//	GetEnvironmentsEnvironmentServicenowExtensionSettingArgs{...}
type GetEnvironmentsEnvironmentServicenowExtensionSettingInput interface {
	pulumi.Input

	ToGetEnvironmentsEnvironmentServicenowExtensionSettingOutput() GetEnvironmentsEnvironmentServicenowExtensionSettingOutput
	ToGetEnvironmentsEnvironmentServicenowExtensionSettingOutputWithContext(context.Context) GetEnvironmentsEnvironmentServicenowExtensionSettingOutput
}

type GetEnvironmentsEnvironmentServicenowExtensionSettingArgs struct {
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

func (GetEnvironmentsEnvironmentServicenowExtensionSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentsEnvironmentServicenowExtensionSetting)(nil)).Elem()
}

func (i GetEnvironmentsEnvironmentServicenowExtensionSettingArgs) ToGetEnvironmentsEnvironmentServicenowExtensionSettingOutput() GetEnvironmentsEnvironmentServicenowExtensionSettingOutput {
	return i.ToGetEnvironmentsEnvironmentServicenowExtensionSettingOutputWithContext(context.Background())
}

func (i GetEnvironmentsEnvironmentServicenowExtensionSettingArgs) ToGetEnvironmentsEnvironmentServicenowExtensionSettingOutputWithContext(ctx context.Context) GetEnvironmentsEnvironmentServicenowExtensionSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentsEnvironmentServicenowExtensionSettingOutput)
}

// GetEnvironmentsEnvironmentServicenowExtensionSettingArrayInput is an input type that accepts GetEnvironmentsEnvironmentServicenowExtensionSettingArray and GetEnvironmentsEnvironmentServicenowExtensionSettingArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentsEnvironmentServicenowExtensionSettingArrayInput` via:
//
//	GetEnvironmentsEnvironmentServicenowExtensionSettingArray{ GetEnvironmentsEnvironmentServicenowExtensionSettingArgs{...} }
type GetEnvironmentsEnvironmentServicenowExtensionSettingArrayInput interface {
	pulumi.Input

	ToGetEnvironmentsEnvironmentServicenowExtensionSettingArrayOutput() GetEnvironmentsEnvironmentServicenowExtensionSettingArrayOutput
	ToGetEnvironmentsEnvironmentServicenowExtensionSettingArrayOutputWithContext(context.Context) GetEnvironmentsEnvironmentServicenowExtensionSettingArrayOutput
}

type GetEnvironmentsEnvironmentServicenowExtensionSettingArray []GetEnvironmentsEnvironmentServicenowExtensionSettingInput

func (GetEnvironmentsEnvironmentServicenowExtensionSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentsEnvironmentServicenowExtensionSetting)(nil)).Elem()
}

func (i GetEnvironmentsEnvironmentServicenowExtensionSettingArray) ToGetEnvironmentsEnvironmentServicenowExtensionSettingArrayOutput() GetEnvironmentsEnvironmentServicenowExtensionSettingArrayOutput {
	return i.ToGetEnvironmentsEnvironmentServicenowExtensionSettingArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentsEnvironmentServicenowExtensionSettingArray) ToGetEnvironmentsEnvironmentServicenowExtensionSettingArrayOutputWithContext(ctx context.Context) GetEnvironmentsEnvironmentServicenowExtensionSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentsEnvironmentServicenowExtensionSettingArrayOutput)
}

type GetEnvironmentsEnvironmentServicenowExtensionSettingOutput struct{ *pulumi.OutputState }

func (GetEnvironmentsEnvironmentServicenowExtensionSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentsEnvironmentServicenowExtensionSetting)(nil)).Elem()
}

func (o GetEnvironmentsEnvironmentServicenowExtensionSettingOutput) ToGetEnvironmentsEnvironmentServicenowExtensionSettingOutput() GetEnvironmentsEnvironmentServicenowExtensionSettingOutput {
	return o
}

func (o GetEnvironmentsEnvironmentServicenowExtensionSettingOutput) ToGetEnvironmentsEnvironmentServicenowExtensionSettingOutputWithContext(ctx context.Context) GetEnvironmentsEnvironmentServicenowExtensionSettingOutput {
	return o
}

func (o GetEnvironmentsEnvironmentServicenowExtensionSettingOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEnvironmentsEnvironmentServicenowExtensionSetting) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type GetEnvironmentsEnvironmentServicenowExtensionSettingArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentsEnvironmentServicenowExtensionSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentsEnvironmentServicenowExtensionSetting)(nil)).Elem()
}

func (o GetEnvironmentsEnvironmentServicenowExtensionSettingArrayOutput) ToGetEnvironmentsEnvironmentServicenowExtensionSettingArrayOutput() GetEnvironmentsEnvironmentServicenowExtensionSettingArrayOutput {
	return o
}

func (o GetEnvironmentsEnvironmentServicenowExtensionSettingArrayOutput) ToGetEnvironmentsEnvironmentServicenowExtensionSettingArrayOutputWithContext(ctx context.Context) GetEnvironmentsEnvironmentServicenowExtensionSettingArrayOutput {
	return o
}

func (o GetEnvironmentsEnvironmentServicenowExtensionSettingArrayOutput) Index(i pulumi.IntInput) GetEnvironmentsEnvironmentServicenowExtensionSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentsEnvironmentServicenowExtensionSetting {
		return vs[0].([]GetEnvironmentsEnvironmentServicenowExtensionSetting)[vs[1].(int)]
	}).(GetEnvironmentsEnvironmentServicenowExtensionSettingOutput)
}

type GetFeedsFeed struct {
	// The AWS access key to use when authenticating against Amazon Web Services.
	AccessKey                         string `pulumi:"accessKey"`
	ApiVersion                        string `pulumi:"apiVersion"`
	DeleteUnreleasedPackagesAfterDays int    `pulumi:"deleteUnreleasedPackagesAfterDays"`
	// The number of times a deployment should attempt to download a package from this feed before failing.
	DownloadAttempts int `pulumi:"downloadAttempts"`
	// The number of seconds to apply as a linear back off between download attempts.
	DownloadRetryBackoffSeconds int `pulumi:"downloadRetryBackoffSeconds"`
	// A filter to search by feed type. Valid feed types are `AwsElasticContainerRegistry`, `BuiltIn`, `Docker`, `GitHub`, `Helm`, `Maven`, `NuGet`, or `OctopusProject`.
	FeedType string `pulumi:"feedType"`
	FeedUri  string `pulumi:"feedUri"`
	// The unique ID for this resource.
	Id             string `pulumi:"id"`
	IsEnhancedMode bool   `pulumi:"isEnhancedMode"`
	// The name of this resource.
	Name                              string   `pulumi:"name"`
	PackageAcquisitionLocationOptions []string `pulumi:"packageAcquisitionLocationOptions"`
	// The password associated with this resource.
	Password     string `pulumi:"password"`
	Region       string `pulumi:"region"`
	RegistryPath string `pulumi:"registryPath"`
	SecretKey    string `pulumi:"secretKey"`
	// The space ID associated with this feeds.
	SpaceId string `pulumi:"spaceId"`
	// The username associated with this resource.
	Username string `pulumi:"username"`
}

// GetFeedsFeedInput is an input type that accepts GetFeedsFeedArgs and GetFeedsFeedOutput values.
// You can construct a concrete instance of `GetFeedsFeedInput` via:
//
//	GetFeedsFeedArgs{...}
type GetFeedsFeedInput interface {
	pulumi.Input

	ToGetFeedsFeedOutput() GetFeedsFeedOutput
	ToGetFeedsFeedOutputWithContext(context.Context) GetFeedsFeedOutput
}

type GetFeedsFeedArgs struct {
	// The AWS access key to use when authenticating against Amazon Web Services.
	AccessKey                         pulumi.StringInput `pulumi:"accessKey"`
	ApiVersion                        pulumi.StringInput `pulumi:"apiVersion"`
	DeleteUnreleasedPackagesAfterDays pulumi.IntInput    `pulumi:"deleteUnreleasedPackagesAfterDays"`
	// The number of times a deployment should attempt to download a package from this feed before failing.
	DownloadAttempts pulumi.IntInput `pulumi:"downloadAttempts"`
	// The number of seconds to apply as a linear back off between download attempts.
	DownloadRetryBackoffSeconds pulumi.IntInput `pulumi:"downloadRetryBackoffSeconds"`
	// A filter to search by feed type. Valid feed types are `AwsElasticContainerRegistry`, `BuiltIn`, `Docker`, `GitHub`, `Helm`, `Maven`, `NuGet`, or `OctopusProject`.
	FeedType pulumi.StringInput `pulumi:"feedType"`
	FeedUri  pulumi.StringInput `pulumi:"feedUri"`
	// The unique ID for this resource.
	Id             pulumi.StringInput `pulumi:"id"`
	IsEnhancedMode pulumi.BoolInput   `pulumi:"isEnhancedMode"`
	// The name of this resource.
	Name                              pulumi.StringInput      `pulumi:"name"`
	PackageAcquisitionLocationOptions pulumi.StringArrayInput `pulumi:"packageAcquisitionLocationOptions"`
	// The password associated with this resource.
	Password     pulumi.StringInput `pulumi:"password"`
	Region       pulumi.StringInput `pulumi:"region"`
	RegistryPath pulumi.StringInput `pulumi:"registryPath"`
	SecretKey    pulumi.StringInput `pulumi:"secretKey"`
	// The space ID associated with this feeds.
	SpaceId pulumi.StringInput `pulumi:"spaceId"`
	// The username associated with this resource.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetFeedsFeedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFeedsFeed)(nil)).Elem()
}

func (i GetFeedsFeedArgs) ToGetFeedsFeedOutput() GetFeedsFeedOutput {
	return i.ToGetFeedsFeedOutputWithContext(context.Background())
}

func (i GetFeedsFeedArgs) ToGetFeedsFeedOutputWithContext(ctx context.Context) GetFeedsFeedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFeedsFeedOutput)
}

// GetFeedsFeedArrayInput is an input type that accepts GetFeedsFeedArray and GetFeedsFeedArrayOutput values.
// You can construct a concrete instance of `GetFeedsFeedArrayInput` via:
//
//	GetFeedsFeedArray{ GetFeedsFeedArgs{...} }
type GetFeedsFeedArrayInput interface {
	pulumi.Input

	ToGetFeedsFeedArrayOutput() GetFeedsFeedArrayOutput
	ToGetFeedsFeedArrayOutputWithContext(context.Context) GetFeedsFeedArrayOutput
}

type GetFeedsFeedArray []GetFeedsFeedInput

func (GetFeedsFeedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFeedsFeed)(nil)).Elem()
}

func (i GetFeedsFeedArray) ToGetFeedsFeedArrayOutput() GetFeedsFeedArrayOutput {
	return i.ToGetFeedsFeedArrayOutputWithContext(context.Background())
}

func (i GetFeedsFeedArray) ToGetFeedsFeedArrayOutputWithContext(ctx context.Context) GetFeedsFeedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFeedsFeedArrayOutput)
}

type GetFeedsFeedOutput struct{ *pulumi.OutputState }

func (GetFeedsFeedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFeedsFeed)(nil)).Elem()
}

func (o GetFeedsFeedOutput) ToGetFeedsFeedOutput() GetFeedsFeedOutput {
	return o
}

func (o GetFeedsFeedOutput) ToGetFeedsFeedOutputWithContext(ctx context.Context) GetFeedsFeedOutput {
	return o
}

// The AWS access key to use when authenticating against Amazon Web Services.
func (o GetFeedsFeedOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetFeedsFeed) string { return v.AccessKey }).(pulumi.StringOutput)
}

func (o GetFeedsFeedOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetFeedsFeed) string { return v.ApiVersion }).(pulumi.StringOutput)
}

func (o GetFeedsFeedOutput) DeleteUnreleasedPackagesAfterDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetFeedsFeed) int { return v.DeleteUnreleasedPackagesAfterDays }).(pulumi.IntOutput)
}

// The number of times a deployment should attempt to download a package from this feed before failing.
func (o GetFeedsFeedOutput) DownloadAttempts() pulumi.IntOutput {
	return o.ApplyT(func(v GetFeedsFeed) int { return v.DownloadAttempts }).(pulumi.IntOutput)
}

// The number of seconds to apply as a linear back off between download attempts.
func (o GetFeedsFeedOutput) DownloadRetryBackoffSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetFeedsFeed) int { return v.DownloadRetryBackoffSeconds }).(pulumi.IntOutput)
}

// A filter to search by feed type. Valid feed types are `AwsElasticContainerRegistry`, `BuiltIn`, `Docker`, `GitHub`, `Helm`, `Maven`, `NuGet`, or `OctopusProject`.
func (o GetFeedsFeedOutput) FeedType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFeedsFeed) string { return v.FeedType }).(pulumi.StringOutput)
}

func (o GetFeedsFeedOutput) FeedUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetFeedsFeed) string { return v.FeedUri }).(pulumi.StringOutput)
}

// The unique ID for this resource.
func (o GetFeedsFeedOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFeedsFeed) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetFeedsFeedOutput) IsEnhancedMode() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFeedsFeed) bool { return v.IsEnhancedMode }).(pulumi.BoolOutput)
}

// The name of this resource.
func (o GetFeedsFeedOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFeedsFeed) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetFeedsFeedOutput) PackageAcquisitionLocationOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFeedsFeed) []string { return v.PackageAcquisitionLocationOptions }).(pulumi.StringArrayOutput)
}

// The password associated with this resource.
func (o GetFeedsFeedOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetFeedsFeed) string { return v.Password }).(pulumi.StringOutput)
}

func (o GetFeedsFeedOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetFeedsFeed) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetFeedsFeedOutput) RegistryPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetFeedsFeed) string { return v.RegistryPath }).(pulumi.StringOutput)
}

func (o GetFeedsFeedOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetFeedsFeed) string { return v.SecretKey }).(pulumi.StringOutput)
}

// The space ID associated with this feeds.
func (o GetFeedsFeedOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFeedsFeed) string { return v.SpaceId }).(pulumi.StringOutput)
}

// The username associated with this resource.
func (o GetFeedsFeedOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetFeedsFeed) string { return v.Username }).(pulumi.StringOutput)
}

type GetFeedsFeedArrayOutput struct{ *pulumi.OutputState }

func (GetFeedsFeedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFeedsFeed)(nil)).Elem()
}

func (o GetFeedsFeedArrayOutput) ToGetFeedsFeedArrayOutput() GetFeedsFeedArrayOutput {
	return o
}

func (o GetFeedsFeedArrayOutput) ToGetFeedsFeedArrayOutputWithContext(ctx context.Context) GetFeedsFeedArrayOutput {
	return o
}

func (o GetFeedsFeedArrayOutput) Index(i pulumi.IntInput) GetFeedsFeedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFeedsFeed {
		return vs[0].([]GetFeedsFeed)[vs[1].(int)]
	}).(GetFeedsFeedOutput)
}

type GetGitCredentialsGitCredential struct {
	// The description of this Git Credential.
	Description string `pulumi:"description"`
	// The unique ID for this resource.
	Id string `pulumi:"id"`
	// The name of this Git Credential.
	Name string `pulumi:"name"`
	// The space ID associated with this Git Credential.
	SpaceId string `pulumi:"spaceId"`
	// The Git credential authentication type.
	Type string `pulumi:"type"`
	// The username for the Git credential.
	Username string `pulumi:"username"`
}

// GetGitCredentialsGitCredentialInput is an input type that accepts GetGitCredentialsGitCredentialArgs and GetGitCredentialsGitCredentialOutput values.
// You can construct a concrete instance of `GetGitCredentialsGitCredentialInput` via:
//
//	GetGitCredentialsGitCredentialArgs{...}
type GetGitCredentialsGitCredentialInput interface {
	pulumi.Input

	ToGetGitCredentialsGitCredentialOutput() GetGitCredentialsGitCredentialOutput
	ToGetGitCredentialsGitCredentialOutputWithContext(context.Context) GetGitCredentialsGitCredentialOutput
}

type GetGitCredentialsGitCredentialArgs struct {
	// The description of this Git Credential.
	Description pulumi.StringInput `pulumi:"description"`
	// The unique ID for this resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of this Git Credential.
	Name pulumi.StringInput `pulumi:"name"`
	// The space ID associated with this Git Credential.
	SpaceId pulumi.StringInput `pulumi:"spaceId"`
	// The Git credential authentication type.
	Type pulumi.StringInput `pulumi:"type"`
	// The username for the Git credential.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetGitCredentialsGitCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitCredentialsGitCredential)(nil)).Elem()
}

func (i GetGitCredentialsGitCredentialArgs) ToGetGitCredentialsGitCredentialOutput() GetGitCredentialsGitCredentialOutput {
	return i.ToGetGitCredentialsGitCredentialOutputWithContext(context.Background())
}

func (i GetGitCredentialsGitCredentialArgs) ToGetGitCredentialsGitCredentialOutputWithContext(ctx context.Context) GetGitCredentialsGitCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitCredentialsGitCredentialOutput)
}

// GetGitCredentialsGitCredentialArrayInput is an input type that accepts GetGitCredentialsGitCredentialArray and GetGitCredentialsGitCredentialArrayOutput values.
// You can construct a concrete instance of `GetGitCredentialsGitCredentialArrayInput` via:
//
//	GetGitCredentialsGitCredentialArray{ GetGitCredentialsGitCredentialArgs{...} }
type GetGitCredentialsGitCredentialArrayInput interface {
	pulumi.Input

	ToGetGitCredentialsGitCredentialArrayOutput() GetGitCredentialsGitCredentialArrayOutput
	ToGetGitCredentialsGitCredentialArrayOutputWithContext(context.Context) GetGitCredentialsGitCredentialArrayOutput
}

type GetGitCredentialsGitCredentialArray []GetGitCredentialsGitCredentialInput

func (GetGitCredentialsGitCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitCredentialsGitCredential)(nil)).Elem()
}

func (i GetGitCredentialsGitCredentialArray) ToGetGitCredentialsGitCredentialArrayOutput() GetGitCredentialsGitCredentialArrayOutput {
	return i.ToGetGitCredentialsGitCredentialArrayOutputWithContext(context.Background())
}

func (i GetGitCredentialsGitCredentialArray) ToGetGitCredentialsGitCredentialArrayOutputWithContext(ctx context.Context) GetGitCredentialsGitCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitCredentialsGitCredentialArrayOutput)
}

type GetGitCredentialsGitCredentialOutput struct{ *pulumi.OutputState }

func (GetGitCredentialsGitCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitCredentialsGitCredential)(nil)).Elem()
}

func (o GetGitCredentialsGitCredentialOutput) ToGetGitCredentialsGitCredentialOutput() GetGitCredentialsGitCredentialOutput {
	return o
}

func (o GetGitCredentialsGitCredentialOutput) ToGetGitCredentialsGitCredentialOutputWithContext(ctx context.Context) GetGitCredentialsGitCredentialOutput {
	return o
}

// The description of this Git Credential.
func (o GetGitCredentialsGitCredentialOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitCredentialsGitCredential) string { return v.Description }).(pulumi.StringOutput)
}

// The unique ID for this resource.
func (o GetGitCredentialsGitCredentialOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitCredentialsGitCredential) string { return v.Id }).(pulumi.StringOutput)
}

// The name of this Git Credential.
func (o GetGitCredentialsGitCredentialOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitCredentialsGitCredential) string { return v.Name }).(pulumi.StringOutput)
}

// The space ID associated with this Git Credential.
func (o GetGitCredentialsGitCredentialOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitCredentialsGitCredential) string { return v.SpaceId }).(pulumi.StringOutput)
}

// The Git credential authentication type.
func (o GetGitCredentialsGitCredentialOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitCredentialsGitCredential) string { return v.Type }).(pulumi.StringOutput)
}

// The username for the Git credential.
func (o GetGitCredentialsGitCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitCredentialsGitCredential) string { return v.Username }).(pulumi.StringOutput)
}

type GetGitCredentialsGitCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetGitCredentialsGitCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitCredentialsGitCredential)(nil)).Elem()
}

func (o GetGitCredentialsGitCredentialArrayOutput) ToGetGitCredentialsGitCredentialArrayOutput() GetGitCredentialsGitCredentialArrayOutput {
	return o
}

func (o GetGitCredentialsGitCredentialArrayOutput) ToGetGitCredentialsGitCredentialArrayOutputWithContext(ctx context.Context) GetGitCredentialsGitCredentialArrayOutput {
	return o
}

func (o GetGitCredentialsGitCredentialArrayOutput) Index(i pulumi.IntInput) GetGitCredentialsGitCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitCredentialsGitCredential {
		return vs[0].([]GetGitCredentialsGitCredential)[vs[1].(int)]
	}).(GetGitCredentialsGitCredentialOutput)
}

type GetLibraryVariableSetsLibraryVariableSet struct {
	// The description of this library variable set.
	Description string `pulumi:"description"`
	// The unique ID for this resource.
	Id string `pulumi:"id"`
	// The name of this resource.
	Name string `pulumi:"name"`
	// The space ID associated with this library variable set.
	SpaceId       string                                             `pulumi:"spaceId"`
	TemplateIds   map[string]string                                  `pulumi:"templateIds"`
	Templates     []GetLibraryVariableSetsLibraryVariableSetTemplate `pulumi:"templates"`
	VariableSetId string                                             `pulumi:"variableSetId"`
}

// GetLibraryVariableSetsLibraryVariableSetInput is an input type that accepts GetLibraryVariableSetsLibraryVariableSetArgs and GetLibraryVariableSetsLibraryVariableSetOutput values.
// You can construct a concrete instance of `GetLibraryVariableSetsLibraryVariableSetInput` via:
//
//	GetLibraryVariableSetsLibraryVariableSetArgs{...}
type GetLibraryVariableSetsLibraryVariableSetInput interface {
	pulumi.Input

	ToGetLibraryVariableSetsLibraryVariableSetOutput() GetLibraryVariableSetsLibraryVariableSetOutput
	ToGetLibraryVariableSetsLibraryVariableSetOutputWithContext(context.Context) GetLibraryVariableSetsLibraryVariableSetOutput
}

type GetLibraryVariableSetsLibraryVariableSetArgs struct {
	// The description of this library variable set.
	Description pulumi.StringInput `pulumi:"description"`
	// The unique ID for this resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of this resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The space ID associated with this library variable set.
	SpaceId       pulumi.StringInput                                         `pulumi:"spaceId"`
	TemplateIds   pulumi.StringMapInput                                      `pulumi:"templateIds"`
	Templates     GetLibraryVariableSetsLibraryVariableSetTemplateArrayInput `pulumi:"templates"`
	VariableSetId pulumi.StringInput                                         `pulumi:"variableSetId"`
}

func (GetLibraryVariableSetsLibraryVariableSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLibraryVariableSetsLibraryVariableSet)(nil)).Elem()
}

func (i GetLibraryVariableSetsLibraryVariableSetArgs) ToGetLibraryVariableSetsLibraryVariableSetOutput() GetLibraryVariableSetsLibraryVariableSetOutput {
	return i.ToGetLibraryVariableSetsLibraryVariableSetOutputWithContext(context.Background())
}

func (i GetLibraryVariableSetsLibraryVariableSetArgs) ToGetLibraryVariableSetsLibraryVariableSetOutputWithContext(ctx context.Context) GetLibraryVariableSetsLibraryVariableSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLibraryVariableSetsLibraryVariableSetOutput)
}

// GetLibraryVariableSetsLibraryVariableSetArrayInput is an input type that accepts GetLibraryVariableSetsLibraryVariableSetArray and GetLibraryVariableSetsLibraryVariableSetArrayOutput values.
// You can construct a concrete instance of `GetLibraryVariableSetsLibraryVariableSetArrayInput` via:
//
//	GetLibraryVariableSetsLibraryVariableSetArray{ GetLibraryVariableSetsLibraryVariableSetArgs{...} }
type GetLibraryVariableSetsLibraryVariableSetArrayInput interface {
	pulumi.Input

	ToGetLibraryVariableSetsLibraryVariableSetArrayOutput() GetLibraryVariableSetsLibraryVariableSetArrayOutput
	ToGetLibraryVariableSetsLibraryVariableSetArrayOutputWithContext(context.Context) GetLibraryVariableSetsLibraryVariableSetArrayOutput
}

type GetLibraryVariableSetsLibraryVariableSetArray []GetLibraryVariableSetsLibraryVariableSetInput

func (GetLibraryVariableSetsLibraryVariableSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLibraryVariableSetsLibraryVariableSet)(nil)).Elem()
}

func (i GetLibraryVariableSetsLibraryVariableSetArray) ToGetLibraryVariableSetsLibraryVariableSetArrayOutput() GetLibraryVariableSetsLibraryVariableSetArrayOutput {
	return i.ToGetLibraryVariableSetsLibraryVariableSetArrayOutputWithContext(context.Background())
}

func (i GetLibraryVariableSetsLibraryVariableSetArray) ToGetLibraryVariableSetsLibraryVariableSetArrayOutputWithContext(ctx context.Context) GetLibraryVariableSetsLibraryVariableSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLibraryVariableSetsLibraryVariableSetArrayOutput)
}

type GetLibraryVariableSetsLibraryVariableSetOutput struct{ *pulumi.OutputState }

func (GetLibraryVariableSetsLibraryVariableSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLibraryVariableSetsLibraryVariableSet)(nil)).Elem()
}

func (o GetLibraryVariableSetsLibraryVariableSetOutput) ToGetLibraryVariableSetsLibraryVariableSetOutput() GetLibraryVariableSetsLibraryVariableSetOutput {
	return o
}

func (o GetLibraryVariableSetsLibraryVariableSetOutput) ToGetLibraryVariableSetsLibraryVariableSetOutputWithContext(ctx context.Context) GetLibraryVariableSetsLibraryVariableSetOutput {
	return o
}

// The description of this library variable set.
func (o GetLibraryVariableSetsLibraryVariableSetOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLibraryVariableSetsLibraryVariableSet) string { return v.Description }).(pulumi.StringOutput)
}

// The unique ID for this resource.
func (o GetLibraryVariableSetsLibraryVariableSetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLibraryVariableSetsLibraryVariableSet) string { return v.Id }).(pulumi.StringOutput)
}

// The name of this resource.
func (o GetLibraryVariableSetsLibraryVariableSetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLibraryVariableSetsLibraryVariableSet) string { return v.Name }).(pulumi.StringOutput)
}

// The space ID associated with this library variable set.
func (o GetLibraryVariableSetsLibraryVariableSetOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLibraryVariableSetsLibraryVariableSet) string { return v.SpaceId }).(pulumi.StringOutput)
}

func (o GetLibraryVariableSetsLibraryVariableSetOutput) TemplateIds() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetLibraryVariableSetsLibraryVariableSet) map[string]string { return v.TemplateIds }).(pulumi.StringMapOutput)
}

func (o GetLibraryVariableSetsLibraryVariableSetOutput) Templates() GetLibraryVariableSetsLibraryVariableSetTemplateArrayOutput {
	return o.ApplyT(func(v GetLibraryVariableSetsLibraryVariableSet) []GetLibraryVariableSetsLibraryVariableSetTemplate {
		return v.Templates
	}).(GetLibraryVariableSetsLibraryVariableSetTemplateArrayOutput)
}

func (o GetLibraryVariableSetsLibraryVariableSetOutput) VariableSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLibraryVariableSetsLibraryVariableSet) string { return v.VariableSetId }).(pulumi.StringOutput)
}

type GetLibraryVariableSetsLibraryVariableSetArrayOutput struct{ *pulumi.OutputState }

func (GetLibraryVariableSetsLibraryVariableSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLibraryVariableSetsLibraryVariableSet)(nil)).Elem()
}

func (o GetLibraryVariableSetsLibraryVariableSetArrayOutput) ToGetLibraryVariableSetsLibraryVariableSetArrayOutput() GetLibraryVariableSetsLibraryVariableSetArrayOutput {
	return o
}

func (o GetLibraryVariableSetsLibraryVariableSetArrayOutput) ToGetLibraryVariableSetsLibraryVariableSetArrayOutputWithContext(ctx context.Context) GetLibraryVariableSetsLibraryVariableSetArrayOutput {
	return o
}

func (o GetLibraryVariableSetsLibraryVariableSetArrayOutput) Index(i pulumi.IntInput) GetLibraryVariableSetsLibraryVariableSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLibraryVariableSetsLibraryVariableSet {
		return vs[0].([]GetLibraryVariableSetsLibraryVariableSet)[vs[1].(int)]
	}).(GetLibraryVariableSetsLibraryVariableSetOutput)
}

type GetLibraryVariableSetsLibraryVariableSetTemplate struct {
	DefaultValue    string            `pulumi:"defaultValue"`
	DisplaySettings map[string]string `pulumi:"displaySettings"`
	HelpText        string            `pulumi:"helpText"`
	Id              string            `pulumi:"id"`
	Label           string            `pulumi:"label"`
	Name            string            `pulumi:"name"`
}

// GetLibraryVariableSetsLibraryVariableSetTemplateInput is an input type that accepts GetLibraryVariableSetsLibraryVariableSetTemplateArgs and GetLibraryVariableSetsLibraryVariableSetTemplateOutput values.
// You can construct a concrete instance of `GetLibraryVariableSetsLibraryVariableSetTemplateInput` via:
//
//	GetLibraryVariableSetsLibraryVariableSetTemplateArgs{...}
type GetLibraryVariableSetsLibraryVariableSetTemplateInput interface {
	pulumi.Input

	ToGetLibraryVariableSetsLibraryVariableSetTemplateOutput() GetLibraryVariableSetsLibraryVariableSetTemplateOutput
	ToGetLibraryVariableSetsLibraryVariableSetTemplateOutputWithContext(context.Context) GetLibraryVariableSetsLibraryVariableSetTemplateOutput
}

type GetLibraryVariableSetsLibraryVariableSetTemplateArgs struct {
	DefaultValue    pulumi.StringInput    `pulumi:"defaultValue"`
	DisplaySettings pulumi.StringMapInput `pulumi:"displaySettings"`
	HelpText        pulumi.StringInput    `pulumi:"helpText"`
	Id              pulumi.StringInput    `pulumi:"id"`
	Label           pulumi.StringInput    `pulumi:"label"`
	Name            pulumi.StringInput    `pulumi:"name"`
}

func (GetLibraryVariableSetsLibraryVariableSetTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLibraryVariableSetsLibraryVariableSetTemplate)(nil)).Elem()
}

func (i GetLibraryVariableSetsLibraryVariableSetTemplateArgs) ToGetLibraryVariableSetsLibraryVariableSetTemplateOutput() GetLibraryVariableSetsLibraryVariableSetTemplateOutput {
	return i.ToGetLibraryVariableSetsLibraryVariableSetTemplateOutputWithContext(context.Background())
}

func (i GetLibraryVariableSetsLibraryVariableSetTemplateArgs) ToGetLibraryVariableSetsLibraryVariableSetTemplateOutputWithContext(ctx context.Context) GetLibraryVariableSetsLibraryVariableSetTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLibraryVariableSetsLibraryVariableSetTemplateOutput)
}

// GetLibraryVariableSetsLibraryVariableSetTemplateArrayInput is an input type that accepts GetLibraryVariableSetsLibraryVariableSetTemplateArray and GetLibraryVariableSetsLibraryVariableSetTemplateArrayOutput values.
// You can construct a concrete instance of `GetLibraryVariableSetsLibraryVariableSetTemplateArrayInput` via:
//
//	GetLibraryVariableSetsLibraryVariableSetTemplateArray{ GetLibraryVariableSetsLibraryVariableSetTemplateArgs{...} }
type GetLibraryVariableSetsLibraryVariableSetTemplateArrayInput interface {
	pulumi.Input

	ToGetLibraryVariableSetsLibraryVariableSetTemplateArrayOutput() GetLibraryVariableSetsLibraryVariableSetTemplateArrayOutput
	ToGetLibraryVariableSetsLibraryVariableSetTemplateArrayOutputWithContext(context.Context) GetLibraryVariableSetsLibraryVariableSetTemplateArrayOutput
}

type GetLibraryVariableSetsLibraryVariableSetTemplateArray []GetLibraryVariableSetsLibraryVariableSetTemplateInput

func (GetLibraryVariableSetsLibraryVariableSetTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLibraryVariableSetsLibraryVariableSetTemplate)(nil)).Elem()
}

func (i GetLibraryVariableSetsLibraryVariableSetTemplateArray) ToGetLibraryVariableSetsLibraryVariableSetTemplateArrayOutput() GetLibraryVariableSetsLibraryVariableSetTemplateArrayOutput {
	return i.ToGetLibraryVariableSetsLibraryVariableSetTemplateArrayOutputWithContext(context.Background())
}

func (i GetLibraryVariableSetsLibraryVariableSetTemplateArray) ToGetLibraryVariableSetsLibraryVariableSetTemplateArrayOutputWithContext(ctx context.Context) GetLibraryVariableSetsLibraryVariableSetTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLibraryVariableSetsLibraryVariableSetTemplateArrayOutput)
}

type GetLibraryVariableSetsLibraryVariableSetTemplateOutput struct{ *pulumi.OutputState }

func (GetLibraryVariableSetsLibraryVariableSetTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLibraryVariableSetsLibraryVariableSetTemplate)(nil)).Elem()
}

func (o GetLibraryVariableSetsLibraryVariableSetTemplateOutput) ToGetLibraryVariableSetsLibraryVariableSetTemplateOutput() GetLibraryVariableSetsLibraryVariableSetTemplateOutput {
	return o
}

func (o GetLibraryVariableSetsLibraryVariableSetTemplateOutput) ToGetLibraryVariableSetsLibraryVariableSetTemplateOutputWithContext(ctx context.Context) GetLibraryVariableSetsLibraryVariableSetTemplateOutput {
	return o
}

func (o GetLibraryVariableSetsLibraryVariableSetTemplateOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetLibraryVariableSetsLibraryVariableSetTemplate) string { return v.DefaultValue }).(pulumi.StringOutput)
}

func (o GetLibraryVariableSetsLibraryVariableSetTemplateOutput) DisplaySettings() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetLibraryVariableSetsLibraryVariableSetTemplate) map[string]string { return v.DisplaySettings }).(pulumi.StringMapOutput)
}

func (o GetLibraryVariableSetsLibraryVariableSetTemplateOutput) HelpText() pulumi.StringOutput {
	return o.ApplyT(func(v GetLibraryVariableSetsLibraryVariableSetTemplate) string { return v.HelpText }).(pulumi.StringOutput)
}

func (o GetLibraryVariableSetsLibraryVariableSetTemplateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLibraryVariableSetsLibraryVariableSetTemplate) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetLibraryVariableSetsLibraryVariableSetTemplateOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetLibraryVariableSetsLibraryVariableSetTemplate) string { return v.Label }).(pulumi.StringOutput)
}

func (o GetLibraryVariableSetsLibraryVariableSetTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLibraryVariableSetsLibraryVariableSetTemplate) string { return v.Name }).(pulumi.StringOutput)
}

type GetLibraryVariableSetsLibraryVariableSetTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetLibraryVariableSetsLibraryVariableSetTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLibraryVariableSetsLibraryVariableSetTemplate)(nil)).Elem()
}

func (o GetLibraryVariableSetsLibraryVariableSetTemplateArrayOutput) ToGetLibraryVariableSetsLibraryVariableSetTemplateArrayOutput() GetLibraryVariableSetsLibraryVariableSetTemplateArrayOutput {
	return o
}

func (o GetLibraryVariableSetsLibraryVariableSetTemplateArrayOutput) ToGetLibraryVariableSetsLibraryVariableSetTemplateArrayOutputWithContext(ctx context.Context) GetLibraryVariableSetsLibraryVariableSetTemplateArrayOutput {
	return o
}

func (o GetLibraryVariableSetsLibraryVariableSetTemplateArrayOutput) Index(i pulumi.IntInput) GetLibraryVariableSetsLibraryVariableSetTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLibraryVariableSetsLibraryVariableSetTemplate {
		return vs[0].([]GetLibraryVariableSetsLibraryVariableSetTemplate)[vs[1].(int)]
	}).(GetLibraryVariableSetsLibraryVariableSetTemplateOutput)
}

type GetLifecyclesLifecycle struct {
	// The description of the lifecycle.
	Description string `pulumi:"description"`
	// The ID of the lifecycle.
	Id string `pulumi:"id"`
	// The name of the lifecycle.
	Name                     string                                         `pulumi:"name"`
	Phases                   []GetLifecyclesLifecyclePhase                  `pulumi:"phases"`
	ReleaseRetentionPolicies []GetLifecyclesLifecycleReleaseRetentionPolicy `pulumi:"releaseRetentionPolicies"`
	// The space ID associated with this lifecycle.
	SpaceId                   string                                          `pulumi:"spaceId"`
	TentacleRetentionPolicies []GetLifecyclesLifecycleTentacleRetentionPolicy `pulumi:"tentacleRetentionPolicies"`
}

// GetLifecyclesLifecycleInput is an input type that accepts GetLifecyclesLifecycleArgs and GetLifecyclesLifecycleOutput values.
// You can construct a concrete instance of `GetLifecyclesLifecycleInput` via:
//
//	GetLifecyclesLifecycleArgs{...}
type GetLifecyclesLifecycleInput interface {
	pulumi.Input

	ToGetLifecyclesLifecycleOutput() GetLifecyclesLifecycleOutput
	ToGetLifecyclesLifecycleOutputWithContext(context.Context) GetLifecyclesLifecycleOutput
}

type GetLifecyclesLifecycleArgs struct {
	// The description of the lifecycle.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the lifecycle.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the lifecycle.
	Name                     pulumi.StringInput                                     `pulumi:"name"`
	Phases                   GetLifecyclesLifecyclePhaseArrayInput                  `pulumi:"phases"`
	ReleaseRetentionPolicies GetLifecyclesLifecycleReleaseRetentionPolicyArrayInput `pulumi:"releaseRetentionPolicies"`
	// The space ID associated with this lifecycle.
	SpaceId                   pulumi.StringInput                                      `pulumi:"spaceId"`
	TentacleRetentionPolicies GetLifecyclesLifecycleTentacleRetentionPolicyArrayInput `pulumi:"tentacleRetentionPolicies"`
}

func (GetLifecyclesLifecycleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecyclesLifecycle)(nil)).Elem()
}

func (i GetLifecyclesLifecycleArgs) ToGetLifecyclesLifecycleOutput() GetLifecyclesLifecycleOutput {
	return i.ToGetLifecyclesLifecycleOutputWithContext(context.Background())
}

func (i GetLifecyclesLifecycleArgs) ToGetLifecyclesLifecycleOutputWithContext(ctx context.Context) GetLifecyclesLifecycleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecyclesLifecycleOutput)
}

// GetLifecyclesLifecycleArrayInput is an input type that accepts GetLifecyclesLifecycleArray and GetLifecyclesLifecycleArrayOutput values.
// You can construct a concrete instance of `GetLifecyclesLifecycleArrayInput` via:
//
//	GetLifecyclesLifecycleArray{ GetLifecyclesLifecycleArgs{...} }
type GetLifecyclesLifecycleArrayInput interface {
	pulumi.Input

	ToGetLifecyclesLifecycleArrayOutput() GetLifecyclesLifecycleArrayOutput
	ToGetLifecyclesLifecycleArrayOutputWithContext(context.Context) GetLifecyclesLifecycleArrayOutput
}

type GetLifecyclesLifecycleArray []GetLifecyclesLifecycleInput

func (GetLifecyclesLifecycleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecyclesLifecycle)(nil)).Elem()
}

func (i GetLifecyclesLifecycleArray) ToGetLifecyclesLifecycleArrayOutput() GetLifecyclesLifecycleArrayOutput {
	return i.ToGetLifecyclesLifecycleArrayOutputWithContext(context.Background())
}

func (i GetLifecyclesLifecycleArray) ToGetLifecyclesLifecycleArrayOutputWithContext(ctx context.Context) GetLifecyclesLifecycleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecyclesLifecycleArrayOutput)
}

type GetLifecyclesLifecycleOutput struct{ *pulumi.OutputState }

func (GetLifecyclesLifecycleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecyclesLifecycle)(nil)).Elem()
}

func (o GetLifecyclesLifecycleOutput) ToGetLifecyclesLifecycleOutput() GetLifecyclesLifecycleOutput {
	return o
}

func (o GetLifecyclesLifecycleOutput) ToGetLifecyclesLifecycleOutputWithContext(ctx context.Context) GetLifecyclesLifecycleOutput {
	return o
}

// The description of the lifecycle.
func (o GetLifecyclesLifecycleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLifecyclesLifecycle) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the lifecycle.
func (o GetLifecyclesLifecycleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLifecyclesLifecycle) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the lifecycle.
func (o GetLifecyclesLifecycleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLifecyclesLifecycle) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLifecyclesLifecycleOutput) Phases() GetLifecyclesLifecyclePhaseArrayOutput {
	return o.ApplyT(func(v GetLifecyclesLifecycle) []GetLifecyclesLifecyclePhase { return v.Phases }).(GetLifecyclesLifecyclePhaseArrayOutput)
}

func (o GetLifecyclesLifecycleOutput) ReleaseRetentionPolicies() GetLifecyclesLifecycleReleaseRetentionPolicyArrayOutput {
	return o.ApplyT(func(v GetLifecyclesLifecycle) []GetLifecyclesLifecycleReleaseRetentionPolicy {
		return v.ReleaseRetentionPolicies
	}).(GetLifecyclesLifecycleReleaseRetentionPolicyArrayOutput)
}

// The space ID associated with this lifecycle.
func (o GetLifecyclesLifecycleOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLifecyclesLifecycle) string { return v.SpaceId }).(pulumi.StringOutput)
}

func (o GetLifecyclesLifecycleOutput) TentacleRetentionPolicies() GetLifecyclesLifecycleTentacleRetentionPolicyArrayOutput {
	return o.ApplyT(func(v GetLifecyclesLifecycle) []GetLifecyclesLifecycleTentacleRetentionPolicy {
		return v.TentacleRetentionPolicies
	}).(GetLifecyclesLifecycleTentacleRetentionPolicyArrayOutput)
}

type GetLifecyclesLifecycleArrayOutput struct{ *pulumi.OutputState }

func (GetLifecyclesLifecycleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecyclesLifecycle)(nil)).Elem()
}

func (o GetLifecyclesLifecycleArrayOutput) ToGetLifecyclesLifecycleArrayOutput() GetLifecyclesLifecycleArrayOutput {
	return o
}

func (o GetLifecyclesLifecycleArrayOutput) ToGetLifecyclesLifecycleArrayOutputWithContext(ctx context.Context) GetLifecyclesLifecycleArrayOutput {
	return o
}

func (o GetLifecyclesLifecycleArrayOutput) Index(i pulumi.IntInput) GetLifecyclesLifecycleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecyclesLifecycle {
		return vs[0].([]GetLifecyclesLifecycle)[vs[1].(int)]
	}).(GetLifecyclesLifecycleOutput)
}

type GetLifecyclesLifecyclePhase struct {
	// The automatic deployment targets for this phase.
	AutomaticDeploymentTargets []string `pulumi:"automaticDeploymentTargets"`
	// The ID of the phase.
	Id string `pulumi:"id"`
	// Whether this phase is optional.
	IsOptionalPhase bool `pulumi:"isOptionalPhase"`
	// The minimum number of environments before promotion.
	MinimumEnvironmentsBeforePromotion int `pulumi:"minimumEnvironmentsBeforePromotion"`
	// The name of the phase.
	Name string `pulumi:"name"`
	// The optional deployment targets for this phase.
	OptionalDeploymentTargets []string                                             `pulumi:"optionalDeploymentTargets"`
	ReleaseRetentionPolicies  []GetLifecyclesLifecyclePhaseReleaseRetentionPolicy  `pulumi:"releaseRetentionPolicies"`
	TentacleRetentionPolicies []GetLifecyclesLifecyclePhaseTentacleRetentionPolicy `pulumi:"tentacleRetentionPolicies"`
}

// GetLifecyclesLifecyclePhaseInput is an input type that accepts GetLifecyclesLifecyclePhaseArgs and GetLifecyclesLifecyclePhaseOutput values.
// You can construct a concrete instance of `GetLifecyclesLifecyclePhaseInput` via:
//
//	GetLifecyclesLifecyclePhaseArgs{...}
type GetLifecyclesLifecyclePhaseInput interface {
	pulumi.Input

	ToGetLifecyclesLifecyclePhaseOutput() GetLifecyclesLifecyclePhaseOutput
	ToGetLifecyclesLifecyclePhaseOutputWithContext(context.Context) GetLifecyclesLifecyclePhaseOutput
}

type GetLifecyclesLifecyclePhaseArgs struct {
	// The automatic deployment targets for this phase.
	AutomaticDeploymentTargets pulumi.StringArrayInput `pulumi:"automaticDeploymentTargets"`
	// The ID of the phase.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether this phase is optional.
	IsOptionalPhase pulumi.BoolInput `pulumi:"isOptionalPhase"`
	// The minimum number of environments before promotion.
	MinimumEnvironmentsBeforePromotion pulumi.IntInput `pulumi:"minimumEnvironmentsBeforePromotion"`
	// The name of the phase.
	Name pulumi.StringInput `pulumi:"name"`
	// The optional deployment targets for this phase.
	OptionalDeploymentTargets pulumi.StringArrayInput                                      `pulumi:"optionalDeploymentTargets"`
	ReleaseRetentionPolicies  GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayInput  `pulumi:"releaseRetentionPolicies"`
	TentacleRetentionPolicies GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayInput `pulumi:"tentacleRetentionPolicies"`
}

func (GetLifecyclesLifecyclePhaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecyclesLifecyclePhase)(nil)).Elem()
}

func (i GetLifecyclesLifecyclePhaseArgs) ToGetLifecyclesLifecyclePhaseOutput() GetLifecyclesLifecyclePhaseOutput {
	return i.ToGetLifecyclesLifecyclePhaseOutputWithContext(context.Background())
}

func (i GetLifecyclesLifecyclePhaseArgs) ToGetLifecyclesLifecyclePhaseOutputWithContext(ctx context.Context) GetLifecyclesLifecyclePhaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecyclesLifecyclePhaseOutput)
}

// GetLifecyclesLifecyclePhaseArrayInput is an input type that accepts GetLifecyclesLifecyclePhaseArray and GetLifecyclesLifecyclePhaseArrayOutput values.
// You can construct a concrete instance of `GetLifecyclesLifecyclePhaseArrayInput` via:
//
//	GetLifecyclesLifecyclePhaseArray{ GetLifecyclesLifecyclePhaseArgs{...} }
type GetLifecyclesLifecyclePhaseArrayInput interface {
	pulumi.Input

	ToGetLifecyclesLifecyclePhaseArrayOutput() GetLifecyclesLifecyclePhaseArrayOutput
	ToGetLifecyclesLifecyclePhaseArrayOutputWithContext(context.Context) GetLifecyclesLifecyclePhaseArrayOutput
}

type GetLifecyclesLifecyclePhaseArray []GetLifecyclesLifecyclePhaseInput

func (GetLifecyclesLifecyclePhaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecyclesLifecyclePhase)(nil)).Elem()
}

func (i GetLifecyclesLifecyclePhaseArray) ToGetLifecyclesLifecyclePhaseArrayOutput() GetLifecyclesLifecyclePhaseArrayOutput {
	return i.ToGetLifecyclesLifecyclePhaseArrayOutputWithContext(context.Background())
}

func (i GetLifecyclesLifecyclePhaseArray) ToGetLifecyclesLifecyclePhaseArrayOutputWithContext(ctx context.Context) GetLifecyclesLifecyclePhaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecyclesLifecyclePhaseArrayOutput)
}

type GetLifecyclesLifecyclePhaseOutput struct{ *pulumi.OutputState }

func (GetLifecyclesLifecyclePhaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecyclesLifecyclePhase)(nil)).Elem()
}

func (o GetLifecyclesLifecyclePhaseOutput) ToGetLifecyclesLifecyclePhaseOutput() GetLifecyclesLifecyclePhaseOutput {
	return o
}

func (o GetLifecyclesLifecyclePhaseOutput) ToGetLifecyclesLifecyclePhaseOutputWithContext(ctx context.Context) GetLifecyclesLifecyclePhaseOutput {
	return o
}

// The automatic deployment targets for this phase.
func (o GetLifecyclesLifecyclePhaseOutput) AutomaticDeploymentTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLifecyclesLifecyclePhase) []string { return v.AutomaticDeploymentTargets }).(pulumi.StringArrayOutput)
}

// The ID of the phase.
func (o GetLifecyclesLifecyclePhaseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLifecyclesLifecyclePhase) string { return v.Id }).(pulumi.StringOutput)
}

// Whether this phase is optional.
func (o GetLifecyclesLifecyclePhaseOutput) IsOptionalPhase() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLifecyclesLifecyclePhase) bool { return v.IsOptionalPhase }).(pulumi.BoolOutput)
}

// The minimum number of environments before promotion.
func (o GetLifecyclesLifecyclePhaseOutput) MinimumEnvironmentsBeforePromotion() pulumi.IntOutput {
	return o.ApplyT(func(v GetLifecyclesLifecyclePhase) int { return v.MinimumEnvironmentsBeforePromotion }).(pulumi.IntOutput)
}

// The name of the phase.
func (o GetLifecyclesLifecyclePhaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLifecyclesLifecyclePhase) string { return v.Name }).(pulumi.StringOutput)
}

// The optional deployment targets for this phase.
func (o GetLifecyclesLifecyclePhaseOutput) OptionalDeploymentTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLifecyclesLifecyclePhase) []string { return v.OptionalDeploymentTargets }).(pulumi.StringArrayOutput)
}

func (o GetLifecyclesLifecyclePhaseOutput) ReleaseRetentionPolicies() GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayOutput {
	return o.ApplyT(func(v GetLifecyclesLifecyclePhase) []GetLifecyclesLifecyclePhaseReleaseRetentionPolicy {
		return v.ReleaseRetentionPolicies
	}).(GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayOutput)
}

func (o GetLifecyclesLifecyclePhaseOutput) TentacleRetentionPolicies() GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayOutput {
	return o.ApplyT(func(v GetLifecyclesLifecyclePhase) []GetLifecyclesLifecyclePhaseTentacleRetentionPolicy {
		return v.TentacleRetentionPolicies
	}).(GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayOutput)
}

type GetLifecyclesLifecyclePhaseArrayOutput struct{ *pulumi.OutputState }

func (GetLifecyclesLifecyclePhaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecyclesLifecyclePhase)(nil)).Elem()
}

func (o GetLifecyclesLifecyclePhaseArrayOutput) ToGetLifecyclesLifecyclePhaseArrayOutput() GetLifecyclesLifecyclePhaseArrayOutput {
	return o
}

func (o GetLifecyclesLifecyclePhaseArrayOutput) ToGetLifecyclesLifecyclePhaseArrayOutputWithContext(ctx context.Context) GetLifecyclesLifecyclePhaseArrayOutput {
	return o
}

func (o GetLifecyclesLifecyclePhaseArrayOutput) Index(i pulumi.IntInput) GetLifecyclesLifecyclePhaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecyclesLifecyclePhase {
		return vs[0].([]GetLifecyclesLifecyclePhase)[vs[1].(int)]
	}).(GetLifecyclesLifecyclePhaseOutput)
}

type GetLifecyclesLifecyclePhaseReleaseRetentionPolicy struct {
	// The quantity of releases to keep.
	QuantityToKeep int `pulumi:"quantityToKeep"`
	// Whether releases should be kept forever.
	ShouldKeepForever bool `pulumi:"shouldKeepForever"`
	// The unit of time for the retention policy.
	Unit string `pulumi:"unit"`
}

// GetLifecyclesLifecyclePhaseReleaseRetentionPolicyInput is an input type that accepts GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArgs and GetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutput values.
// You can construct a concrete instance of `GetLifecyclesLifecyclePhaseReleaseRetentionPolicyInput` via:
//
//	GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArgs{...}
type GetLifecyclesLifecyclePhaseReleaseRetentionPolicyInput interface {
	pulumi.Input

	ToGetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutput() GetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutput
	ToGetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutputWithContext(context.Context) GetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutput
}

type GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArgs struct {
	// The quantity of releases to keep.
	QuantityToKeep pulumi.IntInput `pulumi:"quantityToKeep"`
	// Whether releases should be kept forever.
	ShouldKeepForever pulumi.BoolInput `pulumi:"shouldKeepForever"`
	// The unit of time for the retention policy.
	Unit pulumi.StringInput `pulumi:"unit"`
}

func (GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecyclesLifecyclePhaseReleaseRetentionPolicy)(nil)).Elem()
}

func (i GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArgs) ToGetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutput() GetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutput {
	return i.ToGetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutputWithContext(context.Background())
}

func (i GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArgs) ToGetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutputWithContext(ctx context.Context) GetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutput)
}

// GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayInput is an input type that accepts GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArray and GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayOutput values.
// You can construct a concrete instance of `GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayInput` via:
//
//	GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArray{ GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArgs{...} }
type GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayInput interface {
	pulumi.Input

	ToGetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayOutput() GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayOutput
	ToGetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayOutputWithContext(context.Context) GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayOutput
}

type GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArray []GetLifecyclesLifecyclePhaseReleaseRetentionPolicyInput

func (GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecyclesLifecyclePhaseReleaseRetentionPolicy)(nil)).Elem()
}

func (i GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArray) ToGetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayOutput() GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayOutput {
	return i.ToGetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayOutputWithContext(context.Background())
}

func (i GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArray) ToGetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayOutputWithContext(ctx context.Context) GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayOutput)
}

type GetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutput struct{ *pulumi.OutputState }

func (GetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecyclesLifecyclePhaseReleaseRetentionPolicy)(nil)).Elem()
}

func (o GetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutput) ToGetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutput() GetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutput {
	return o
}

func (o GetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutput) ToGetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutputWithContext(ctx context.Context) GetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutput {
	return o
}

// The quantity of releases to keep.
func (o GetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutput) QuantityToKeep() pulumi.IntOutput {
	return o.ApplyT(func(v GetLifecyclesLifecyclePhaseReleaseRetentionPolicy) int { return v.QuantityToKeep }).(pulumi.IntOutput)
}

// Whether releases should be kept forever.
func (o GetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutput) ShouldKeepForever() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLifecyclesLifecyclePhaseReleaseRetentionPolicy) bool { return v.ShouldKeepForever }).(pulumi.BoolOutput)
}

// The unit of time for the retention policy.
func (o GetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetLifecyclesLifecyclePhaseReleaseRetentionPolicy) string { return v.Unit }).(pulumi.StringOutput)
}

type GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecyclesLifecyclePhaseReleaseRetentionPolicy)(nil)).Elem()
}

func (o GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayOutput) ToGetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayOutput() GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayOutput {
	return o
}

func (o GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayOutput) ToGetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayOutputWithContext(ctx context.Context) GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayOutput {
	return o
}

func (o GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayOutput) Index(i pulumi.IntInput) GetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecyclesLifecyclePhaseReleaseRetentionPolicy {
		return vs[0].([]GetLifecyclesLifecyclePhaseReleaseRetentionPolicy)[vs[1].(int)]
	}).(GetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutput)
}

type GetLifecyclesLifecyclePhaseTentacleRetentionPolicy struct {
	// The quantity of releases to keep.
	QuantityToKeep int `pulumi:"quantityToKeep"`
	// Whether releases should be kept forever.
	ShouldKeepForever bool `pulumi:"shouldKeepForever"`
	// The unit of time for the retention policy.
	Unit string `pulumi:"unit"`
}

// GetLifecyclesLifecyclePhaseTentacleRetentionPolicyInput is an input type that accepts GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArgs and GetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutput values.
// You can construct a concrete instance of `GetLifecyclesLifecyclePhaseTentacleRetentionPolicyInput` via:
//
//	GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArgs{...}
type GetLifecyclesLifecyclePhaseTentacleRetentionPolicyInput interface {
	pulumi.Input

	ToGetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutput() GetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutput
	ToGetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutputWithContext(context.Context) GetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutput
}

type GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArgs struct {
	// The quantity of releases to keep.
	QuantityToKeep pulumi.IntInput `pulumi:"quantityToKeep"`
	// Whether releases should be kept forever.
	ShouldKeepForever pulumi.BoolInput `pulumi:"shouldKeepForever"`
	// The unit of time for the retention policy.
	Unit pulumi.StringInput `pulumi:"unit"`
}

func (GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecyclesLifecyclePhaseTentacleRetentionPolicy)(nil)).Elem()
}

func (i GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArgs) ToGetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutput() GetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutput {
	return i.ToGetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutputWithContext(context.Background())
}

func (i GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArgs) ToGetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutputWithContext(ctx context.Context) GetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutput)
}

// GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayInput is an input type that accepts GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArray and GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayOutput values.
// You can construct a concrete instance of `GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayInput` via:
//
//	GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArray{ GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArgs{...} }
type GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayInput interface {
	pulumi.Input

	ToGetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayOutput() GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayOutput
	ToGetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayOutputWithContext(context.Context) GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayOutput
}

type GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArray []GetLifecyclesLifecyclePhaseTentacleRetentionPolicyInput

func (GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecyclesLifecyclePhaseTentacleRetentionPolicy)(nil)).Elem()
}

func (i GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArray) ToGetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayOutput() GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayOutput {
	return i.ToGetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayOutputWithContext(context.Background())
}

func (i GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArray) ToGetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayOutputWithContext(ctx context.Context) GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayOutput)
}

type GetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutput struct{ *pulumi.OutputState }

func (GetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecyclesLifecyclePhaseTentacleRetentionPolicy)(nil)).Elem()
}

func (o GetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutput) ToGetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutput() GetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutput {
	return o
}

func (o GetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutput) ToGetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutputWithContext(ctx context.Context) GetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutput {
	return o
}

// The quantity of releases to keep.
func (o GetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutput) QuantityToKeep() pulumi.IntOutput {
	return o.ApplyT(func(v GetLifecyclesLifecyclePhaseTentacleRetentionPolicy) int { return v.QuantityToKeep }).(pulumi.IntOutput)
}

// Whether releases should be kept forever.
func (o GetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutput) ShouldKeepForever() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLifecyclesLifecyclePhaseTentacleRetentionPolicy) bool { return v.ShouldKeepForever }).(pulumi.BoolOutput)
}

// The unit of time for the retention policy.
func (o GetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetLifecyclesLifecyclePhaseTentacleRetentionPolicy) string { return v.Unit }).(pulumi.StringOutput)
}

type GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecyclesLifecyclePhaseTentacleRetentionPolicy)(nil)).Elem()
}

func (o GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayOutput) ToGetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayOutput() GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayOutput {
	return o
}

func (o GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayOutput) ToGetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayOutputWithContext(ctx context.Context) GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayOutput {
	return o
}

func (o GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayOutput) Index(i pulumi.IntInput) GetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecyclesLifecyclePhaseTentacleRetentionPolicy {
		return vs[0].([]GetLifecyclesLifecyclePhaseTentacleRetentionPolicy)[vs[1].(int)]
	}).(GetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutput)
}

type GetLifecyclesLifecycleReleaseRetentionPolicy struct {
	// The quantity of releases to keep.
	QuantityToKeep int `pulumi:"quantityToKeep"`
	// Whether releases should be kept forever.
	ShouldKeepForever bool `pulumi:"shouldKeepForever"`
	// The unit of time for the retention policy.
	Unit string `pulumi:"unit"`
}

// GetLifecyclesLifecycleReleaseRetentionPolicyInput is an input type that accepts GetLifecyclesLifecycleReleaseRetentionPolicyArgs and GetLifecyclesLifecycleReleaseRetentionPolicyOutput values.
// You can construct a concrete instance of `GetLifecyclesLifecycleReleaseRetentionPolicyInput` via:
//
//	GetLifecyclesLifecycleReleaseRetentionPolicyArgs{...}
type GetLifecyclesLifecycleReleaseRetentionPolicyInput interface {
	pulumi.Input

	ToGetLifecyclesLifecycleReleaseRetentionPolicyOutput() GetLifecyclesLifecycleReleaseRetentionPolicyOutput
	ToGetLifecyclesLifecycleReleaseRetentionPolicyOutputWithContext(context.Context) GetLifecyclesLifecycleReleaseRetentionPolicyOutput
}

type GetLifecyclesLifecycleReleaseRetentionPolicyArgs struct {
	// The quantity of releases to keep.
	QuantityToKeep pulumi.IntInput `pulumi:"quantityToKeep"`
	// Whether releases should be kept forever.
	ShouldKeepForever pulumi.BoolInput `pulumi:"shouldKeepForever"`
	// The unit of time for the retention policy.
	Unit pulumi.StringInput `pulumi:"unit"`
}

func (GetLifecyclesLifecycleReleaseRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecyclesLifecycleReleaseRetentionPolicy)(nil)).Elem()
}

func (i GetLifecyclesLifecycleReleaseRetentionPolicyArgs) ToGetLifecyclesLifecycleReleaseRetentionPolicyOutput() GetLifecyclesLifecycleReleaseRetentionPolicyOutput {
	return i.ToGetLifecyclesLifecycleReleaseRetentionPolicyOutputWithContext(context.Background())
}

func (i GetLifecyclesLifecycleReleaseRetentionPolicyArgs) ToGetLifecyclesLifecycleReleaseRetentionPolicyOutputWithContext(ctx context.Context) GetLifecyclesLifecycleReleaseRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecyclesLifecycleReleaseRetentionPolicyOutput)
}

// GetLifecyclesLifecycleReleaseRetentionPolicyArrayInput is an input type that accepts GetLifecyclesLifecycleReleaseRetentionPolicyArray and GetLifecyclesLifecycleReleaseRetentionPolicyArrayOutput values.
// You can construct a concrete instance of `GetLifecyclesLifecycleReleaseRetentionPolicyArrayInput` via:
//
//	GetLifecyclesLifecycleReleaseRetentionPolicyArray{ GetLifecyclesLifecycleReleaseRetentionPolicyArgs{...} }
type GetLifecyclesLifecycleReleaseRetentionPolicyArrayInput interface {
	pulumi.Input

	ToGetLifecyclesLifecycleReleaseRetentionPolicyArrayOutput() GetLifecyclesLifecycleReleaseRetentionPolicyArrayOutput
	ToGetLifecyclesLifecycleReleaseRetentionPolicyArrayOutputWithContext(context.Context) GetLifecyclesLifecycleReleaseRetentionPolicyArrayOutput
}

type GetLifecyclesLifecycleReleaseRetentionPolicyArray []GetLifecyclesLifecycleReleaseRetentionPolicyInput

func (GetLifecyclesLifecycleReleaseRetentionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecyclesLifecycleReleaseRetentionPolicy)(nil)).Elem()
}

func (i GetLifecyclesLifecycleReleaseRetentionPolicyArray) ToGetLifecyclesLifecycleReleaseRetentionPolicyArrayOutput() GetLifecyclesLifecycleReleaseRetentionPolicyArrayOutput {
	return i.ToGetLifecyclesLifecycleReleaseRetentionPolicyArrayOutputWithContext(context.Background())
}

func (i GetLifecyclesLifecycleReleaseRetentionPolicyArray) ToGetLifecyclesLifecycleReleaseRetentionPolicyArrayOutputWithContext(ctx context.Context) GetLifecyclesLifecycleReleaseRetentionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecyclesLifecycleReleaseRetentionPolicyArrayOutput)
}

type GetLifecyclesLifecycleReleaseRetentionPolicyOutput struct{ *pulumi.OutputState }

func (GetLifecyclesLifecycleReleaseRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecyclesLifecycleReleaseRetentionPolicy)(nil)).Elem()
}

func (o GetLifecyclesLifecycleReleaseRetentionPolicyOutput) ToGetLifecyclesLifecycleReleaseRetentionPolicyOutput() GetLifecyclesLifecycleReleaseRetentionPolicyOutput {
	return o
}

func (o GetLifecyclesLifecycleReleaseRetentionPolicyOutput) ToGetLifecyclesLifecycleReleaseRetentionPolicyOutputWithContext(ctx context.Context) GetLifecyclesLifecycleReleaseRetentionPolicyOutput {
	return o
}

// The quantity of releases to keep.
func (o GetLifecyclesLifecycleReleaseRetentionPolicyOutput) QuantityToKeep() pulumi.IntOutput {
	return o.ApplyT(func(v GetLifecyclesLifecycleReleaseRetentionPolicy) int { return v.QuantityToKeep }).(pulumi.IntOutput)
}

// Whether releases should be kept forever.
func (o GetLifecyclesLifecycleReleaseRetentionPolicyOutput) ShouldKeepForever() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLifecyclesLifecycleReleaseRetentionPolicy) bool { return v.ShouldKeepForever }).(pulumi.BoolOutput)
}

// The unit of time for the retention policy.
func (o GetLifecyclesLifecycleReleaseRetentionPolicyOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetLifecyclesLifecycleReleaseRetentionPolicy) string { return v.Unit }).(pulumi.StringOutput)
}

type GetLifecyclesLifecycleReleaseRetentionPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetLifecyclesLifecycleReleaseRetentionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecyclesLifecycleReleaseRetentionPolicy)(nil)).Elem()
}

func (o GetLifecyclesLifecycleReleaseRetentionPolicyArrayOutput) ToGetLifecyclesLifecycleReleaseRetentionPolicyArrayOutput() GetLifecyclesLifecycleReleaseRetentionPolicyArrayOutput {
	return o
}

func (o GetLifecyclesLifecycleReleaseRetentionPolicyArrayOutput) ToGetLifecyclesLifecycleReleaseRetentionPolicyArrayOutputWithContext(ctx context.Context) GetLifecyclesLifecycleReleaseRetentionPolicyArrayOutput {
	return o
}

func (o GetLifecyclesLifecycleReleaseRetentionPolicyArrayOutput) Index(i pulumi.IntInput) GetLifecyclesLifecycleReleaseRetentionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecyclesLifecycleReleaseRetentionPolicy {
		return vs[0].([]GetLifecyclesLifecycleReleaseRetentionPolicy)[vs[1].(int)]
	}).(GetLifecyclesLifecycleReleaseRetentionPolicyOutput)
}

type GetLifecyclesLifecycleTentacleRetentionPolicy struct {
	// The quantity of releases to keep.
	QuantityToKeep int `pulumi:"quantityToKeep"`
	// Whether releases should be kept forever.
	ShouldKeepForever bool `pulumi:"shouldKeepForever"`
	// The unit of time for the retention policy.
	Unit string `pulumi:"unit"`
}

// GetLifecyclesLifecycleTentacleRetentionPolicyInput is an input type that accepts GetLifecyclesLifecycleTentacleRetentionPolicyArgs and GetLifecyclesLifecycleTentacleRetentionPolicyOutput values.
// You can construct a concrete instance of `GetLifecyclesLifecycleTentacleRetentionPolicyInput` via:
//
//	GetLifecyclesLifecycleTentacleRetentionPolicyArgs{...}
type GetLifecyclesLifecycleTentacleRetentionPolicyInput interface {
	pulumi.Input

	ToGetLifecyclesLifecycleTentacleRetentionPolicyOutput() GetLifecyclesLifecycleTentacleRetentionPolicyOutput
	ToGetLifecyclesLifecycleTentacleRetentionPolicyOutputWithContext(context.Context) GetLifecyclesLifecycleTentacleRetentionPolicyOutput
}

type GetLifecyclesLifecycleTentacleRetentionPolicyArgs struct {
	// The quantity of releases to keep.
	QuantityToKeep pulumi.IntInput `pulumi:"quantityToKeep"`
	// Whether releases should be kept forever.
	ShouldKeepForever pulumi.BoolInput `pulumi:"shouldKeepForever"`
	// The unit of time for the retention policy.
	Unit pulumi.StringInput `pulumi:"unit"`
}

func (GetLifecyclesLifecycleTentacleRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecyclesLifecycleTentacleRetentionPolicy)(nil)).Elem()
}

func (i GetLifecyclesLifecycleTentacleRetentionPolicyArgs) ToGetLifecyclesLifecycleTentacleRetentionPolicyOutput() GetLifecyclesLifecycleTentacleRetentionPolicyOutput {
	return i.ToGetLifecyclesLifecycleTentacleRetentionPolicyOutputWithContext(context.Background())
}

func (i GetLifecyclesLifecycleTentacleRetentionPolicyArgs) ToGetLifecyclesLifecycleTentacleRetentionPolicyOutputWithContext(ctx context.Context) GetLifecyclesLifecycleTentacleRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecyclesLifecycleTentacleRetentionPolicyOutput)
}

// GetLifecyclesLifecycleTentacleRetentionPolicyArrayInput is an input type that accepts GetLifecyclesLifecycleTentacleRetentionPolicyArray and GetLifecyclesLifecycleTentacleRetentionPolicyArrayOutput values.
// You can construct a concrete instance of `GetLifecyclesLifecycleTentacleRetentionPolicyArrayInput` via:
//
//	GetLifecyclesLifecycleTentacleRetentionPolicyArray{ GetLifecyclesLifecycleTentacleRetentionPolicyArgs{...} }
type GetLifecyclesLifecycleTentacleRetentionPolicyArrayInput interface {
	pulumi.Input

	ToGetLifecyclesLifecycleTentacleRetentionPolicyArrayOutput() GetLifecyclesLifecycleTentacleRetentionPolicyArrayOutput
	ToGetLifecyclesLifecycleTentacleRetentionPolicyArrayOutputWithContext(context.Context) GetLifecyclesLifecycleTentacleRetentionPolicyArrayOutput
}

type GetLifecyclesLifecycleTentacleRetentionPolicyArray []GetLifecyclesLifecycleTentacleRetentionPolicyInput

func (GetLifecyclesLifecycleTentacleRetentionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecyclesLifecycleTentacleRetentionPolicy)(nil)).Elem()
}

func (i GetLifecyclesLifecycleTentacleRetentionPolicyArray) ToGetLifecyclesLifecycleTentacleRetentionPolicyArrayOutput() GetLifecyclesLifecycleTentacleRetentionPolicyArrayOutput {
	return i.ToGetLifecyclesLifecycleTentacleRetentionPolicyArrayOutputWithContext(context.Background())
}

func (i GetLifecyclesLifecycleTentacleRetentionPolicyArray) ToGetLifecyclesLifecycleTentacleRetentionPolicyArrayOutputWithContext(ctx context.Context) GetLifecyclesLifecycleTentacleRetentionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecyclesLifecycleTentacleRetentionPolicyArrayOutput)
}

type GetLifecyclesLifecycleTentacleRetentionPolicyOutput struct{ *pulumi.OutputState }

func (GetLifecyclesLifecycleTentacleRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecyclesLifecycleTentacleRetentionPolicy)(nil)).Elem()
}

func (o GetLifecyclesLifecycleTentacleRetentionPolicyOutput) ToGetLifecyclesLifecycleTentacleRetentionPolicyOutput() GetLifecyclesLifecycleTentacleRetentionPolicyOutput {
	return o
}

func (o GetLifecyclesLifecycleTentacleRetentionPolicyOutput) ToGetLifecyclesLifecycleTentacleRetentionPolicyOutputWithContext(ctx context.Context) GetLifecyclesLifecycleTentacleRetentionPolicyOutput {
	return o
}

// The quantity of releases to keep.
func (o GetLifecyclesLifecycleTentacleRetentionPolicyOutput) QuantityToKeep() pulumi.IntOutput {
	return o.ApplyT(func(v GetLifecyclesLifecycleTentacleRetentionPolicy) int { return v.QuantityToKeep }).(pulumi.IntOutput)
}

// Whether releases should be kept forever.
func (o GetLifecyclesLifecycleTentacleRetentionPolicyOutput) ShouldKeepForever() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLifecyclesLifecycleTentacleRetentionPolicy) bool { return v.ShouldKeepForever }).(pulumi.BoolOutput)
}

// The unit of time for the retention policy.
func (o GetLifecyclesLifecycleTentacleRetentionPolicyOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetLifecyclesLifecycleTentacleRetentionPolicy) string { return v.Unit }).(pulumi.StringOutput)
}

type GetLifecyclesLifecycleTentacleRetentionPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetLifecyclesLifecycleTentacleRetentionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecyclesLifecycleTentacleRetentionPolicy)(nil)).Elem()
}

func (o GetLifecyclesLifecycleTentacleRetentionPolicyArrayOutput) ToGetLifecyclesLifecycleTentacleRetentionPolicyArrayOutput() GetLifecyclesLifecycleTentacleRetentionPolicyArrayOutput {
	return o
}

func (o GetLifecyclesLifecycleTentacleRetentionPolicyArrayOutput) ToGetLifecyclesLifecycleTentacleRetentionPolicyArrayOutputWithContext(ctx context.Context) GetLifecyclesLifecycleTentacleRetentionPolicyArrayOutput {
	return o
}

func (o GetLifecyclesLifecycleTentacleRetentionPolicyArrayOutput) Index(i pulumi.IntInput) GetLifecyclesLifecycleTentacleRetentionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecyclesLifecycleTentacleRetentionPolicy {
		return vs[0].([]GetLifecyclesLifecycleTentacleRetentionPolicy)[vs[1].(int)]
	}).(GetLifecyclesLifecycleTentacleRetentionPolicyOutput)
}

type GetProjectGroupsProjectGroup struct {
	// The description of this project group.
	Description string `pulumi:"description"`
	// The unique ID for this resource.
	Id string `pulumi:"id"`
	// The name of this resource.
	Name string `pulumi:"name"`
	// The space ID associated with this project group.
	SpaceId string `pulumi:"spaceId"`
}

// GetProjectGroupsProjectGroupInput is an input type that accepts GetProjectGroupsProjectGroupArgs and GetProjectGroupsProjectGroupOutput values.
// You can construct a concrete instance of `GetProjectGroupsProjectGroupInput` via:
//
//	GetProjectGroupsProjectGroupArgs{...}
type GetProjectGroupsProjectGroupInput interface {
	pulumi.Input

	ToGetProjectGroupsProjectGroupOutput() GetProjectGroupsProjectGroupOutput
	ToGetProjectGroupsProjectGroupOutputWithContext(context.Context) GetProjectGroupsProjectGroupOutput
}

type GetProjectGroupsProjectGroupArgs struct {
	// The description of this project group.
	Description pulumi.StringInput `pulumi:"description"`
	// The unique ID for this resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of this resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The space ID associated with this project group.
	SpaceId pulumi.StringInput `pulumi:"spaceId"`
}

func (GetProjectGroupsProjectGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectGroupsProjectGroup)(nil)).Elem()
}

func (i GetProjectGroupsProjectGroupArgs) ToGetProjectGroupsProjectGroupOutput() GetProjectGroupsProjectGroupOutput {
	return i.ToGetProjectGroupsProjectGroupOutputWithContext(context.Background())
}

func (i GetProjectGroupsProjectGroupArgs) ToGetProjectGroupsProjectGroupOutputWithContext(ctx context.Context) GetProjectGroupsProjectGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectGroupsProjectGroupOutput)
}

// GetProjectGroupsProjectGroupArrayInput is an input type that accepts GetProjectGroupsProjectGroupArray and GetProjectGroupsProjectGroupArrayOutput values.
// You can construct a concrete instance of `GetProjectGroupsProjectGroupArrayInput` via:
//
//	GetProjectGroupsProjectGroupArray{ GetProjectGroupsProjectGroupArgs{...} }
type GetProjectGroupsProjectGroupArrayInput interface {
	pulumi.Input

	ToGetProjectGroupsProjectGroupArrayOutput() GetProjectGroupsProjectGroupArrayOutput
	ToGetProjectGroupsProjectGroupArrayOutputWithContext(context.Context) GetProjectGroupsProjectGroupArrayOutput
}

type GetProjectGroupsProjectGroupArray []GetProjectGroupsProjectGroupInput

func (GetProjectGroupsProjectGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectGroupsProjectGroup)(nil)).Elem()
}

func (i GetProjectGroupsProjectGroupArray) ToGetProjectGroupsProjectGroupArrayOutput() GetProjectGroupsProjectGroupArrayOutput {
	return i.ToGetProjectGroupsProjectGroupArrayOutputWithContext(context.Background())
}

func (i GetProjectGroupsProjectGroupArray) ToGetProjectGroupsProjectGroupArrayOutputWithContext(ctx context.Context) GetProjectGroupsProjectGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectGroupsProjectGroupArrayOutput)
}

type GetProjectGroupsProjectGroupOutput struct{ *pulumi.OutputState }

func (GetProjectGroupsProjectGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectGroupsProjectGroup)(nil)).Elem()
}

func (o GetProjectGroupsProjectGroupOutput) ToGetProjectGroupsProjectGroupOutput() GetProjectGroupsProjectGroupOutput {
	return o
}

func (o GetProjectGroupsProjectGroupOutput) ToGetProjectGroupsProjectGroupOutputWithContext(ctx context.Context) GetProjectGroupsProjectGroupOutput {
	return o
}

// The description of this project group.
func (o GetProjectGroupsProjectGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectGroupsProjectGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The unique ID for this resource.
func (o GetProjectGroupsProjectGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectGroupsProjectGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The name of this resource.
func (o GetProjectGroupsProjectGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectGroupsProjectGroup) string { return v.Name }).(pulumi.StringOutput)
}

// The space ID associated with this project group.
func (o GetProjectGroupsProjectGroupOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectGroupsProjectGroup) string { return v.SpaceId }).(pulumi.StringOutput)
}

type GetProjectGroupsProjectGroupArrayOutput struct{ *pulumi.OutputState }

func (GetProjectGroupsProjectGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectGroupsProjectGroup)(nil)).Elem()
}

func (o GetProjectGroupsProjectGroupArrayOutput) ToGetProjectGroupsProjectGroupArrayOutput() GetProjectGroupsProjectGroupArrayOutput {
	return o
}

func (o GetProjectGroupsProjectGroupArrayOutput) ToGetProjectGroupsProjectGroupArrayOutputWithContext(ctx context.Context) GetProjectGroupsProjectGroupArrayOutput {
	return o
}

func (o GetProjectGroupsProjectGroupArrayOutput) Index(i pulumi.IntInput) GetProjectGroupsProjectGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectGroupsProjectGroup {
		return vs[0].([]GetProjectGroupsProjectGroup)[vs[1].(int)]
	}).(GetProjectGroupsProjectGroupOutput)
}

type GetProjectsProject struct {
	// Deprecated: Allow deployments to be created when there are no targets.
	AllowDeploymentsToNoTargets     bool                                          `pulumi:"allowDeploymentsToNoTargets"`
	AutoCreateRelease               bool                                          `pulumi:"autoCreateRelease"`
	AutoDeployReleaseOverrides      []GetProjectsProjectAutoDeployReleaseOverride `pulumi:"autoDeployReleaseOverrides"`
	ClonedFromProjectId             string                                        `pulumi:"clonedFromProjectId"`
	ConnectivityPolicies            []GetProjectsProjectConnectivityPolicy        `pulumi:"connectivityPolicies"`
	DefaultGuidedFailureMode        string                                        `pulumi:"defaultGuidedFailureMode"`
	DefaultToSkipIfAlreadyInstalled bool                                          `pulumi:"defaultToSkipIfAlreadyInstalled"`
	DeploymentChangesTemplate       string                                        `pulumi:"deploymentChangesTemplate"`
	DeploymentProcessId             string                                        `pulumi:"deploymentProcessId"`
	// The description of this project
	Description string `pulumi:"description"`
	// Treats releases of different channels to the same environment as a separate deployment dimension
	DiscreteChannelRelease bool `pulumi:"discreteChannelRelease"`
	// Git-related persistence settings for a version-controlled project using anonymous authentication.
	GitAnonymousPersistenceSettings []GetProjectsProjectGitAnonymousPersistenceSetting `pulumi:"gitAnonymousPersistenceSettings"`
	// Git-related persistence settings for a version-controlled project using library authentication.
	GitLibraryPersistenceSettings []GetProjectsProjectGitLibraryPersistenceSetting `pulumi:"gitLibraryPersistenceSettings"`
	// Git-related persistence settings for a version-controlled project using username*password authentication.
	GitUsernamePasswordPersistenceSettings []GetProjectsProjectGitUsernamePasswordPersistenceSetting `pulumi:"gitUsernamePasswordPersistenceSettings"`
	Id                                     string                                                    `pulumi:"id"`
	IncludedLibraryVariableSets            []string                                                  `pulumi:"includedLibraryVariableSets"`
	IsDisabled                             bool                                                      `pulumi:"isDisabled"`
	IsDiscreteChannelRelease               bool                                                      `pulumi:"isDiscreteChannelRelease"`
	IsVersionControlled                    bool                                                      `pulumi:"isVersionControlled"`
	// Extension settings for the Jira Service Management (JSM) integration.
	JiraServiceManagementExtensionSettings []GetProjectsProjectJiraServiceManagementExtensionSetting `pulumi:"jiraServiceManagementExtensionSettings"`
	// The lifecycle ID associated with this project
	LifecycleId string `pulumi:"lifecycleId"`
	// The name of the project in Octopus Deploy. This name must be unique.
	Name string `pulumi:"name"`
	// The project group ID associated with this project.
	ProjectGroupId string `pulumi:"projectGroupId"`
	// The release creation strategy for the project.
	ReleaseCreationStrategies []GetProjectsProjectReleaseCreationStrategy `pulumi:"releaseCreationStrategies"`
	// The template to use for release notes.
	ReleaseNotesTemplate string `pulumi:"releaseNotesTemplate"`
	// Extension settings for the ServiceNow integration.
	ServicenowExtensionSettings []GetProjectsProjectServicenowExtensionSetting `pulumi:"servicenowExtensionSettings"`
	// A human-readable, unique identifier, used to identify a project.
	Slug string `pulumi:"slug"`
	// The space ID associated with this project.
	SpaceId string `pulumi:"spaceId"`
	// Template parameters for the project.
	Templates []GetProjectsProjectTemplate `pulumi:"templates"`
	// The tenanted deployment mode of the project.
	TenantedDeploymentParticipation string `pulumi:"tenantedDeploymentParticipation"`
	// The ID of the variable set associated with this project.
	VariableSetId string `pulumi:"variableSetId"`
	// The versioning strategy for the project.
	VersioningStrategies []GetProjectsProjectVersioningStrategy `pulumi:"versioningStrategies"`
}

// GetProjectsProjectInput is an input type that accepts GetProjectsProjectArgs and GetProjectsProjectOutput values.
// You can construct a concrete instance of `GetProjectsProjectInput` via:
//
//	GetProjectsProjectArgs{...}
type GetProjectsProjectInput interface {
	pulumi.Input

	ToGetProjectsProjectOutput() GetProjectsProjectOutput
	ToGetProjectsProjectOutputWithContext(context.Context) GetProjectsProjectOutput
}

type GetProjectsProjectArgs struct {
	// Deprecated: Allow deployments to be created when there are no targets.
	AllowDeploymentsToNoTargets     pulumi.BoolInput                                      `pulumi:"allowDeploymentsToNoTargets"`
	AutoCreateRelease               pulumi.BoolInput                                      `pulumi:"autoCreateRelease"`
	AutoDeployReleaseOverrides      GetProjectsProjectAutoDeployReleaseOverrideArrayInput `pulumi:"autoDeployReleaseOverrides"`
	ClonedFromProjectId             pulumi.StringInput                                    `pulumi:"clonedFromProjectId"`
	ConnectivityPolicies            GetProjectsProjectConnectivityPolicyArrayInput        `pulumi:"connectivityPolicies"`
	DefaultGuidedFailureMode        pulumi.StringInput                                    `pulumi:"defaultGuidedFailureMode"`
	DefaultToSkipIfAlreadyInstalled pulumi.BoolInput                                      `pulumi:"defaultToSkipIfAlreadyInstalled"`
	DeploymentChangesTemplate       pulumi.StringInput                                    `pulumi:"deploymentChangesTemplate"`
	DeploymentProcessId             pulumi.StringInput                                    `pulumi:"deploymentProcessId"`
	// The description of this project
	Description pulumi.StringInput `pulumi:"description"`
	// Treats releases of different channels to the same environment as a separate deployment dimension
	DiscreteChannelRelease pulumi.BoolInput `pulumi:"discreteChannelRelease"`
	// Git-related persistence settings for a version-controlled project using anonymous authentication.
	GitAnonymousPersistenceSettings GetProjectsProjectGitAnonymousPersistenceSettingArrayInput `pulumi:"gitAnonymousPersistenceSettings"`
	// Git-related persistence settings for a version-controlled project using library authentication.
	GitLibraryPersistenceSettings GetProjectsProjectGitLibraryPersistenceSettingArrayInput `pulumi:"gitLibraryPersistenceSettings"`
	// Git-related persistence settings for a version-controlled project using username*password authentication.
	GitUsernamePasswordPersistenceSettings GetProjectsProjectGitUsernamePasswordPersistenceSettingArrayInput `pulumi:"gitUsernamePasswordPersistenceSettings"`
	Id                                     pulumi.StringInput                                                `pulumi:"id"`
	IncludedLibraryVariableSets            pulumi.StringArrayInput                                           `pulumi:"includedLibraryVariableSets"`
	IsDisabled                             pulumi.BoolInput                                                  `pulumi:"isDisabled"`
	IsDiscreteChannelRelease               pulumi.BoolInput                                                  `pulumi:"isDiscreteChannelRelease"`
	IsVersionControlled                    pulumi.BoolInput                                                  `pulumi:"isVersionControlled"`
	// Extension settings for the Jira Service Management (JSM) integration.
	JiraServiceManagementExtensionSettings GetProjectsProjectJiraServiceManagementExtensionSettingArrayInput `pulumi:"jiraServiceManagementExtensionSettings"`
	// The lifecycle ID associated with this project
	LifecycleId pulumi.StringInput `pulumi:"lifecycleId"`
	// The name of the project in Octopus Deploy. This name must be unique.
	Name pulumi.StringInput `pulumi:"name"`
	// The project group ID associated with this project.
	ProjectGroupId pulumi.StringInput `pulumi:"projectGroupId"`
	// The release creation strategy for the project.
	ReleaseCreationStrategies GetProjectsProjectReleaseCreationStrategyArrayInput `pulumi:"releaseCreationStrategies"`
	// The template to use for release notes.
	ReleaseNotesTemplate pulumi.StringInput `pulumi:"releaseNotesTemplate"`
	// Extension settings for the ServiceNow integration.
	ServicenowExtensionSettings GetProjectsProjectServicenowExtensionSettingArrayInput `pulumi:"servicenowExtensionSettings"`
	// A human-readable, unique identifier, used to identify a project.
	Slug pulumi.StringInput `pulumi:"slug"`
	// The space ID associated with this project.
	SpaceId pulumi.StringInput `pulumi:"spaceId"`
	// Template parameters for the project.
	Templates GetProjectsProjectTemplateArrayInput `pulumi:"templates"`
	// The tenanted deployment mode of the project.
	TenantedDeploymentParticipation pulumi.StringInput `pulumi:"tenantedDeploymentParticipation"`
	// The ID of the variable set associated with this project.
	VariableSetId pulumi.StringInput `pulumi:"variableSetId"`
	// The versioning strategy for the project.
	VersioningStrategies GetProjectsProjectVersioningStrategyArrayInput `pulumi:"versioningStrategies"`
}

func (GetProjectsProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProject)(nil)).Elem()
}

func (i GetProjectsProjectArgs) ToGetProjectsProjectOutput() GetProjectsProjectOutput {
	return i.ToGetProjectsProjectOutputWithContext(context.Background())
}

func (i GetProjectsProjectArgs) ToGetProjectsProjectOutputWithContext(ctx context.Context) GetProjectsProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectOutput)
}

// GetProjectsProjectArrayInput is an input type that accepts GetProjectsProjectArray and GetProjectsProjectArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectArrayInput` via:
//
//	GetProjectsProjectArray{ GetProjectsProjectArgs{...} }
type GetProjectsProjectArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectArrayOutput() GetProjectsProjectArrayOutput
	ToGetProjectsProjectArrayOutputWithContext(context.Context) GetProjectsProjectArrayOutput
}

type GetProjectsProjectArray []GetProjectsProjectInput

func (GetProjectsProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProject)(nil)).Elem()
}

func (i GetProjectsProjectArray) ToGetProjectsProjectArrayOutput() GetProjectsProjectArrayOutput {
	return i.ToGetProjectsProjectArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectArray) ToGetProjectsProjectArrayOutputWithContext(ctx context.Context) GetProjectsProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectArrayOutput)
}

type GetProjectsProjectOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProject)(nil)).Elem()
}

func (o GetProjectsProjectOutput) ToGetProjectsProjectOutput() GetProjectsProjectOutput {
	return o
}

func (o GetProjectsProjectOutput) ToGetProjectsProjectOutputWithContext(ctx context.Context) GetProjectsProjectOutput {
	return o
}

// Deprecated: Allow deployments to be created when there are no targets.
func (o GetProjectsProjectOutput) AllowDeploymentsToNoTargets() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.AllowDeploymentsToNoTargets }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) AutoCreateRelease() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.AutoCreateRelease }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) AutoDeployReleaseOverrides() GetProjectsProjectAutoDeployReleaseOverrideArrayOutput {
	return o.ApplyT(func(v GetProjectsProject) []GetProjectsProjectAutoDeployReleaseOverride {
		return v.AutoDeployReleaseOverrides
	}).(GetProjectsProjectAutoDeployReleaseOverrideArrayOutput)
}

func (o GetProjectsProjectOutput) ClonedFromProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.ClonedFromProjectId }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) ConnectivityPolicies() GetProjectsProjectConnectivityPolicyArrayOutput {
	return o.ApplyT(func(v GetProjectsProject) []GetProjectsProjectConnectivityPolicy { return v.ConnectivityPolicies }).(GetProjectsProjectConnectivityPolicyArrayOutput)
}

func (o GetProjectsProjectOutput) DefaultGuidedFailureMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.DefaultGuidedFailureMode }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) DefaultToSkipIfAlreadyInstalled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.DefaultToSkipIfAlreadyInstalled }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) DeploymentChangesTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.DeploymentChangesTemplate }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) DeploymentProcessId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.DeploymentProcessId }).(pulumi.StringOutput)
}

// The description of this project
func (o GetProjectsProjectOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.Description }).(pulumi.StringOutput)
}

// Treats releases of different channels to the same environment as a separate deployment dimension
func (o GetProjectsProjectOutput) DiscreteChannelRelease() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.DiscreteChannelRelease }).(pulumi.BoolOutput)
}

// Git-related persistence settings for a version-controlled project using anonymous authentication.
func (o GetProjectsProjectOutput) GitAnonymousPersistenceSettings() GetProjectsProjectGitAnonymousPersistenceSettingArrayOutput {
	return o.ApplyT(func(v GetProjectsProject) []GetProjectsProjectGitAnonymousPersistenceSetting {
		return v.GitAnonymousPersistenceSettings
	}).(GetProjectsProjectGitAnonymousPersistenceSettingArrayOutput)
}

// Git-related persistence settings for a version-controlled project using library authentication.
func (o GetProjectsProjectOutput) GitLibraryPersistenceSettings() GetProjectsProjectGitLibraryPersistenceSettingArrayOutput {
	return o.ApplyT(func(v GetProjectsProject) []GetProjectsProjectGitLibraryPersistenceSetting {
		return v.GitLibraryPersistenceSettings
	}).(GetProjectsProjectGitLibraryPersistenceSettingArrayOutput)
}

// Git-related persistence settings for a version-controlled project using username*password authentication.
func (o GetProjectsProjectOutput) GitUsernamePasswordPersistenceSettings() GetProjectsProjectGitUsernamePasswordPersistenceSettingArrayOutput {
	return o.ApplyT(func(v GetProjectsProject) []GetProjectsProjectGitUsernamePasswordPersistenceSetting {
		return v.GitUsernamePasswordPersistenceSettings
	}).(GetProjectsProjectGitUsernamePasswordPersistenceSettingArrayOutput)
}

func (o GetProjectsProjectOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) IncludedLibraryVariableSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectsProject) []string { return v.IncludedLibraryVariableSets }).(pulumi.StringArrayOutput)
}

func (o GetProjectsProjectOutput) IsDisabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.IsDisabled }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) IsDiscreteChannelRelease() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.IsDiscreteChannelRelease }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) IsVersionControlled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.IsVersionControlled }).(pulumi.BoolOutput)
}

// Extension settings for the Jira Service Management (JSM) integration.
func (o GetProjectsProjectOutput) JiraServiceManagementExtensionSettings() GetProjectsProjectJiraServiceManagementExtensionSettingArrayOutput {
	return o.ApplyT(func(v GetProjectsProject) []GetProjectsProjectJiraServiceManagementExtensionSetting {
		return v.JiraServiceManagementExtensionSettings
	}).(GetProjectsProjectJiraServiceManagementExtensionSettingArrayOutput)
}

// The lifecycle ID associated with this project
func (o GetProjectsProjectOutput) LifecycleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.LifecycleId }).(pulumi.StringOutput)
}

// The name of the project in Octopus Deploy. This name must be unique.
func (o GetProjectsProjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.Name }).(pulumi.StringOutput)
}

// The project group ID associated with this project.
func (o GetProjectsProjectOutput) ProjectGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.ProjectGroupId }).(pulumi.StringOutput)
}

// The release creation strategy for the project.
func (o GetProjectsProjectOutput) ReleaseCreationStrategies() GetProjectsProjectReleaseCreationStrategyArrayOutput {
	return o.ApplyT(func(v GetProjectsProject) []GetProjectsProjectReleaseCreationStrategy {
		return v.ReleaseCreationStrategies
	}).(GetProjectsProjectReleaseCreationStrategyArrayOutput)
}

// The template to use for release notes.
func (o GetProjectsProjectOutput) ReleaseNotesTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.ReleaseNotesTemplate }).(pulumi.StringOutput)
}

// Extension settings for the ServiceNow integration.
func (o GetProjectsProjectOutput) ServicenowExtensionSettings() GetProjectsProjectServicenowExtensionSettingArrayOutput {
	return o.ApplyT(func(v GetProjectsProject) []GetProjectsProjectServicenowExtensionSetting {
		return v.ServicenowExtensionSettings
	}).(GetProjectsProjectServicenowExtensionSettingArrayOutput)
}

// A human-readable, unique identifier, used to identify a project.
func (o GetProjectsProjectOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.Slug }).(pulumi.StringOutput)
}

// The space ID associated with this project.
func (o GetProjectsProjectOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.SpaceId }).(pulumi.StringOutput)
}

// Template parameters for the project.
func (o GetProjectsProjectOutput) Templates() GetProjectsProjectTemplateArrayOutput {
	return o.ApplyT(func(v GetProjectsProject) []GetProjectsProjectTemplate { return v.Templates }).(GetProjectsProjectTemplateArrayOutput)
}

// The tenanted deployment mode of the project.
func (o GetProjectsProjectOutput) TenantedDeploymentParticipation() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.TenantedDeploymentParticipation }).(pulumi.StringOutput)
}

// The ID of the variable set associated with this project.
func (o GetProjectsProjectOutput) VariableSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.VariableSetId }).(pulumi.StringOutput)
}

// The versioning strategy for the project.
func (o GetProjectsProjectOutput) VersioningStrategies() GetProjectsProjectVersioningStrategyArrayOutput {
	return o.ApplyT(func(v GetProjectsProject) []GetProjectsProjectVersioningStrategy { return v.VersioningStrategies }).(GetProjectsProjectVersioningStrategyArrayOutput)
}

type GetProjectsProjectArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProject)(nil)).Elem()
}

func (o GetProjectsProjectArrayOutput) ToGetProjectsProjectArrayOutput() GetProjectsProjectArrayOutput {
	return o
}

func (o GetProjectsProjectArrayOutput) ToGetProjectsProjectArrayOutputWithContext(ctx context.Context) GetProjectsProjectArrayOutput {
	return o
}

func (o GetProjectsProjectArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProject {
		return vs[0].([]GetProjectsProject)[vs[1].(int)]
	}).(GetProjectsProjectOutput)
}

type GetProjectsProjectAutoDeployReleaseOverride struct {
	// The environment ID for the auto deploy release override.
	EnvironmentId string `pulumi:"environmentId"`
	// The release ID for the auto deploy release override.
	ReleaseId string `pulumi:"releaseId"`
	// The tenant ID for the auto deploy release override.
	TenantId string `pulumi:"tenantId"`
}

// GetProjectsProjectAutoDeployReleaseOverrideInput is an input type that accepts GetProjectsProjectAutoDeployReleaseOverrideArgs and GetProjectsProjectAutoDeployReleaseOverrideOutput values.
// You can construct a concrete instance of `GetProjectsProjectAutoDeployReleaseOverrideInput` via:
//
//	GetProjectsProjectAutoDeployReleaseOverrideArgs{...}
type GetProjectsProjectAutoDeployReleaseOverrideInput interface {
	pulumi.Input

	ToGetProjectsProjectAutoDeployReleaseOverrideOutput() GetProjectsProjectAutoDeployReleaseOverrideOutput
	ToGetProjectsProjectAutoDeployReleaseOverrideOutputWithContext(context.Context) GetProjectsProjectAutoDeployReleaseOverrideOutput
}

type GetProjectsProjectAutoDeployReleaseOverrideArgs struct {
	// The environment ID for the auto deploy release override.
	EnvironmentId pulumi.StringInput `pulumi:"environmentId"`
	// The release ID for the auto deploy release override.
	ReleaseId pulumi.StringInput `pulumi:"releaseId"`
	// The tenant ID for the auto deploy release override.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (GetProjectsProjectAutoDeployReleaseOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectAutoDeployReleaseOverride)(nil)).Elem()
}

func (i GetProjectsProjectAutoDeployReleaseOverrideArgs) ToGetProjectsProjectAutoDeployReleaseOverrideOutput() GetProjectsProjectAutoDeployReleaseOverrideOutput {
	return i.ToGetProjectsProjectAutoDeployReleaseOverrideOutputWithContext(context.Background())
}

func (i GetProjectsProjectAutoDeployReleaseOverrideArgs) ToGetProjectsProjectAutoDeployReleaseOverrideOutputWithContext(ctx context.Context) GetProjectsProjectAutoDeployReleaseOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectAutoDeployReleaseOverrideOutput)
}

// GetProjectsProjectAutoDeployReleaseOverrideArrayInput is an input type that accepts GetProjectsProjectAutoDeployReleaseOverrideArray and GetProjectsProjectAutoDeployReleaseOverrideArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectAutoDeployReleaseOverrideArrayInput` via:
//
//	GetProjectsProjectAutoDeployReleaseOverrideArray{ GetProjectsProjectAutoDeployReleaseOverrideArgs{...} }
type GetProjectsProjectAutoDeployReleaseOverrideArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectAutoDeployReleaseOverrideArrayOutput() GetProjectsProjectAutoDeployReleaseOverrideArrayOutput
	ToGetProjectsProjectAutoDeployReleaseOverrideArrayOutputWithContext(context.Context) GetProjectsProjectAutoDeployReleaseOverrideArrayOutput
}

type GetProjectsProjectAutoDeployReleaseOverrideArray []GetProjectsProjectAutoDeployReleaseOverrideInput

func (GetProjectsProjectAutoDeployReleaseOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectAutoDeployReleaseOverride)(nil)).Elem()
}

func (i GetProjectsProjectAutoDeployReleaseOverrideArray) ToGetProjectsProjectAutoDeployReleaseOverrideArrayOutput() GetProjectsProjectAutoDeployReleaseOverrideArrayOutput {
	return i.ToGetProjectsProjectAutoDeployReleaseOverrideArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectAutoDeployReleaseOverrideArray) ToGetProjectsProjectAutoDeployReleaseOverrideArrayOutputWithContext(ctx context.Context) GetProjectsProjectAutoDeployReleaseOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectAutoDeployReleaseOverrideArrayOutput)
}

type GetProjectsProjectAutoDeployReleaseOverrideOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectAutoDeployReleaseOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectAutoDeployReleaseOverride)(nil)).Elem()
}

func (o GetProjectsProjectAutoDeployReleaseOverrideOutput) ToGetProjectsProjectAutoDeployReleaseOverrideOutput() GetProjectsProjectAutoDeployReleaseOverrideOutput {
	return o
}

func (o GetProjectsProjectAutoDeployReleaseOverrideOutput) ToGetProjectsProjectAutoDeployReleaseOverrideOutputWithContext(ctx context.Context) GetProjectsProjectAutoDeployReleaseOverrideOutput {
	return o
}

// The environment ID for the auto deploy release override.
func (o GetProjectsProjectAutoDeployReleaseOverrideOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectAutoDeployReleaseOverride) string { return v.EnvironmentId }).(pulumi.StringOutput)
}

// The release ID for the auto deploy release override.
func (o GetProjectsProjectAutoDeployReleaseOverrideOutput) ReleaseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectAutoDeployReleaseOverride) string { return v.ReleaseId }).(pulumi.StringOutput)
}

// The tenant ID for the auto deploy release override.
func (o GetProjectsProjectAutoDeployReleaseOverrideOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectAutoDeployReleaseOverride) string { return v.TenantId }).(pulumi.StringOutput)
}

type GetProjectsProjectAutoDeployReleaseOverrideArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectAutoDeployReleaseOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectAutoDeployReleaseOverride)(nil)).Elem()
}

func (o GetProjectsProjectAutoDeployReleaseOverrideArrayOutput) ToGetProjectsProjectAutoDeployReleaseOverrideArrayOutput() GetProjectsProjectAutoDeployReleaseOverrideArrayOutput {
	return o
}

func (o GetProjectsProjectAutoDeployReleaseOverrideArrayOutput) ToGetProjectsProjectAutoDeployReleaseOverrideArrayOutputWithContext(ctx context.Context) GetProjectsProjectAutoDeployReleaseOverrideArrayOutput {
	return o
}

func (o GetProjectsProjectAutoDeployReleaseOverrideArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectAutoDeployReleaseOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProjectAutoDeployReleaseOverride {
		return vs[0].([]GetProjectsProjectAutoDeployReleaseOverride)[vs[1].(int)]
	}).(GetProjectsProjectAutoDeployReleaseOverrideOutput)
}

type GetProjectsProjectConnectivityPolicy struct {
	// Allow deployments to be created when there are no targets.
	AllowDeploymentsToNoTargets bool `pulumi:"allowDeploymentsToNoTargets"`
	// Exclude unhealthy targets from deployments.
	ExcludeUnhealthyTargets bool `pulumi:"excludeUnhealthyTargets"`
	// The behavior when a machine is skipped.
	SkipMachineBehavior string `pulumi:"skipMachineBehavior"`
	// The target roles for the connectivity policy.
	TargetRoles []string `pulumi:"targetRoles"`
}

// GetProjectsProjectConnectivityPolicyInput is an input type that accepts GetProjectsProjectConnectivityPolicyArgs and GetProjectsProjectConnectivityPolicyOutput values.
// You can construct a concrete instance of `GetProjectsProjectConnectivityPolicyInput` via:
//
//	GetProjectsProjectConnectivityPolicyArgs{...}
type GetProjectsProjectConnectivityPolicyInput interface {
	pulumi.Input

	ToGetProjectsProjectConnectivityPolicyOutput() GetProjectsProjectConnectivityPolicyOutput
	ToGetProjectsProjectConnectivityPolicyOutputWithContext(context.Context) GetProjectsProjectConnectivityPolicyOutput
}

type GetProjectsProjectConnectivityPolicyArgs struct {
	// Allow deployments to be created when there are no targets.
	AllowDeploymentsToNoTargets pulumi.BoolInput `pulumi:"allowDeploymentsToNoTargets"`
	// Exclude unhealthy targets from deployments.
	ExcludeUnhealthyTargets pulumi.BoolInput `pulumi:"excludeUnhealthyTargets"`
	// The behavior when a machine is skipped.
	SkipMachineBehavior pulumi.StringInput `pulumi:"skipMachineBehavior"`
	// The target roles for the connectivity policy.
	TargetRoles pulumi.StringArrayInput `pulumi:"targetRoles"`
}

func (GetProjectsProjectConnectivityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectConnectivityPolicy)(nil)).Elem()
}

func (i GetProjectsProjectConnectivityPolicyArgs) ToGetProjectsProjectConnectivityPolicyOutput() GetProjectsProjectConnectivityPolicyOutput {
	return i.ToGetProjectsProjectConnectivityPolicyOutputWithContext(context.Background())
}

func (i GetProjectsProjectConnectivityPolicyArgs) ToGetProjectsProjectConnectivityPolicyOutputWithContext(ctx context.Context) GetProjectsProjectConnectivityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectConnectivityPolicyOutput)
}

// GetProjectsProjectConnectivityPolicyArrayInput is an input type that accepts GetProjectsProjectConnectivityPolicyArray and GetProjectsProjectConnectivityPolicyArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectConnectivityPolicyArrayInput` via:
//
//	GetProjectsProjectConnectivityPolicyArray{ GetProjectsProjectConnectivityPolicyArgs{...} }
type GetProjectsProjectConnectivityPolicyArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectConnectivityPolicyArrayOutput() GetProjectsProjectConnectivityPolicyArrayOutput
	ToGetProjectsProjectConnectivityPolicyArrayOutputWithContext(context.Context) GetProjectsProjectConnectivityPolicyArrayOutput
}

type GetProjectsProjectConnectivityPolicyArray []GetProjectsProjectConnectivityPolicyInput

func (GetProjectsProjectConnectivityPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectConnectivityPolicy)(nil)).Elem()
}

func (i GetProjectsProjectConnectivityPolicyArray) ToGetProjectsProjectConnectivityPolicyArrayOutput() GetProjectsProjectConnectivityPolicyArrayOutput {
	return i.ToGetProjectsProjectConnectivityPolicyArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectConnectivityPolicyArray) ToGetProjectsProjectConnectivityPolicyArrayOutputWithContext(ctx context.Context) GetProjectsProjectConnectivityPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectConnectivityPolicyArrayOutput)
}

type GetProjectsProjectConnectivityPolicyOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectConnectivityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectConnectivityPolicy)(nil)).Elem()
}

func (o GetProjectsProjectConnectivityPolicyOutput) ToGetProjectsProjectConnectivityPolicyOutput() GetProjectsProjectConnectivityPolicyOutput {
	return o
}

func (o GetProjectsProjectConnectivityPolicyOutput) ToGetProjectsProjectConnectivityPolicyOutputWithContext(ctx context.Context) GetProjectsProjectConnectivityPolicyOutput {
	return o
}

// Allow deployments to be created when there are no targets.
func (o GetProjectsProjectConnectivityPolicyOutput) AllowDeploymentsToNoTargets() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProjectConnectivityPolicy) bool { return v.AllowDeploymentsToNoTargets }).(pulumi.BoolOutput)
}

// Exclude unhealthy targets from deployments.
func (o GetProjectsProjectConnectivityPolicyOutput) ExcludeUnhealthyTargets() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProjectConnectivityPolicy) bool { return v.ExcludeUnhealthyTargets }).(pulumi.BoolOutput)
}

// The behavior when a machine is skipped.
func (o GetProjectsProjectConnectivityPolicyOutput) SkipMachineBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectConnectivityPolicy) string { return v.SkipMachineBehavior }).(pulumi.StringOutput)
}

// The target roles for the connectivity policy.
func (o GetProjectsProjectConnectivityPolicyOutput) TargetRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectsProjectConnectivityPolicy) []string { return v.TargetRoles }).(pulumi.StringArrayOutput)
}

type GetProjectsProjectConnectivityPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectConnectivityPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectConnectivityPolicy)(nil)).Elem()
}

func (o GetProjectsProjectConnectivityPolicyArrayOutput) ToGetProjectsProjectConnectivityPolicyArrayOutput() GetProjectsProjectConnectivityPolicyArrayOutput {
	return o
}

func (o GetProjectsProjectConnectivityPolicyArrayOutput) ToGetProjectsProjectConnectivityPolicyArrayOutputWithContext(ctx context.Context) GetProjectsProjectConnectivityPolicyArrayOutput {
	return o
}

func (o GetProjectsProjectConnectivityPolicyArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectConnectivityPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProjectConnectivityPolicy {
		return vs[0].([]GetProjectsProjectConnectivityPolicy)[vs[1].(int)]
	}).(GetProjectsProjectConnectivityPolicyOutput)
}

type GetProjectsProjectGitAnonymousPersistenceSetting struct {
	// The base path associated with these version control settings.
	BasePath string `pulumi:"basePath"`
	// The default branch associated with these version control settings.
	DefaultBranch string `pulumi:"defaultBranch"`
	// A list of protected branch patterns.
	ProtectedBranches []string `pulumi:"protectedBranches"`
	// The URL associated with these version control settings.
	Url string `pulumi:"url"`
}

// GetProjectsProjectGitAnonymousPersistenceSettingInput is an input type that accepts GetProjectsProjectGitAnonymousPersistenceSettingArgs and GetProjectsProjectGitAnonymousPersistenceSettingOutput values.
// You can construct a concrete instance of `GetProjectsProjectGitAnonymousPersistenceSettingInput` via:
//
//	GetProjectsProjectGitAnonymousPersistenceSettingArgs{...}
type GetProjectsProjectGitAnonymousPersistenceSettingInput interface {
	pulumi.Input

	ToGetProjectsProjectGitAnonymousPersistenceSettingOutput() GetProjectsProjectGitAnonymousPersistenceSettingOutput
	ToGetProjectsProjectGitAnonymousPersistenceSettingOutputWithContext(context.Context) GetProjectsProjectGitAnonymousPersistenceSettingOutput
}

type GetProjectsProjectGitAnonymousPersistenceSettingArgs struct {
	// The base path associated with these version control settings.
	BasePath pulumi.StringInput `pulumi:"basePath"`
	// The default branch associated with these version control settings.
	DefaultBranch pulumi.StringInput `pulumi:"defaultBranch"`
	// A list of protected branch patterns.
	ProtectedBranches pulumi.StringArrayInput `pulumi:"protectedBranches"`
	// The URL associated with these version control settings.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetProjectsProjectGitAnonymousPersistenceSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectGitAnonymousPersistenceSetting)(nil)).Elem()
}

func (i GetProjectsProjectGitAnonymousPersistenceSettingArgs) ToGetProjectsProjectGitAnonymousPersistenceSettingOutput() GetProjectsProjectGitAnonymousPersistenceSettingOutput {
	return i.ToGetProjectsProjectGitAnonymousPersistenceSettingOutputWithContext(context.Background())
}

func (i GetProjectsProjectGitAnonymousPersistenceSettingArgs) ToGetProjectsProjectGitAnonymousPersistenceSettingOutputWithContext(ctx context.Context) GetProjectsProjectGitAnonymousPersistenceSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectGitAnonymousPersistenceSettingOutput)
}

// GetProjectsProjectGitAnonymousPersistenceSettingArrayInput is an input type that accepts GetProjectsProjectGitAnonymousPersistenceSettingArray and GetProjectsProjectGitAnonymousPersistenceSettingArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectGitAnonymousPersistenceSettingArrayInput` via:
//
//	GetProjectsProjectGitAnonymousPersistenceSettingArray{ GetProjectsProjectGitAnonymousPersistenceSettingArgs{...} }
type GetProjectsProjectGitAnonymousPersistenceSettingArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectGitAnonymousPersistenceSettingArrayOutput() GetProjectsProjectGitAnonymousPersistenceSettingArrayOutput
	ToGetProjectsProjectGitAnonymousPersistenceSettingArrayOutputWithContext(context.Context) GetProjectsProjectGitAnonymousPersistenceSettingArrayOutput
}

type GetProjectsProjectGitAnonymousPersistenceSettingArray []GetProjectsProjectGitAnonymousPersistenceSettingInput

func (GetProjectsProjectGitAnonymousPersistenceSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectGitAnonymousPersistenceSetting)(nil)).Elem()
}

func (i GetProjectsProjectGitAnonymousPersistenceSettingArray) ToGetProjectsProjectGitAnonymousPersistenceSettingArrayOutput() GetProjectsProjectGitAnonymousPersistenceSettingArrayOutput {
	return i.ToGetProjectsProjectGitAnonymousPersistenceSettingArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectGitAnonymousPersistenceSettingArray) ToGetProjectsProjectGitAnonymousPersistenceSettingArrayOutputWithContext(ctx context.Context) GetProjectsProjectGitAnonymousPersistenceSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectGitAnonymousPersistenceSettingArrayOutput)
}

type GetProjectsProjectGitAnonymousPersistenceSettingOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectGitAnonymousPersistenceSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectGitAnonymousPersistenceSetting)(nil)).Elem()
}

func (o GetProjectsProjectGitAnonymousPersistenceSettingOutput) ToGetProjectsProjectGitAnonymousPersistenceSettingOutput() GetProjectsProjectGitAnonymousPersistenceSettingOutput {
	return o
}

func (o GetProjectsProjectGitAnonymousPersistenceSettingOutput) ToGetProjectsProjectGitAnonymousPersistenceSettingOutputWithContext(ctx context.Context) GetProjectsProjectGitAnonymousPersistenceSettingOutput {
	return o
}

// The base path associated with these version control settings.
func (o GetProjectsProjectGitAnonymousPersistenceSettingOutput) BasePath() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectGitAnonymousPersistenceSetting) string { return v.BasePath }).(pulumi.StringOutput)
}

// The default branch associated with these version control settings.
func (o GetProjectsProjectGitAnonymousPersistenceSettingOutput) DefaultBranch() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectGitAnonymousPersistenceSetting) string { return v.DefaultBranch }).(pulumi.StringOutput)
}

// A list of protected branch patterns.
func (o GetProjectsProjectGitAnonymousPersistenceSettingOutput) ProtectedBranches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectsProjectGitAnonymousPersistenceSetting) []string { return v.ProtectedBranches }).(pulumi.StringArrayOutput)
}

// The URL associated with these version control settings.
func (o GetProjectsProjectGitAnonymousPersistenceSettingOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectGitAnonymousPersistenceSetting) string { return v.Url }).(pulumi.StringOutput)
}

type GetProjectsProjectGitAnonymousPersistenceSettingArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectGitAnonymousPersistenceSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectGitAnonymousPersistenceSetting)(nil)).Elem()
}

func (o GetProjectsProjectGitAnonymousPersistenceSettingArrayOutput) ToGetProjectsProjectGitAnonymousPersistenceSettingArrayOutput() GetProjectsProjectGitAnonymousPersistenceSettingArrayOutput {
	return o
}

func (o GetProjectsProjectGitAnonymousPersistenceSettingArrayOutput) ToGetProjectsProjectGitAnonymousPersistenceSettingArrayOutputWithContext(ctx context.Context) GetProjectsProjectGitAnonymousPersistenceSettingArrayOutput {
	return o
}

func (o GetProjectsProjectGitAnonymousPersistenceSettingArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectGitAnonymousPersistenceSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProjectGitAnonymousPersistenceSetting {
		return vs[0].([]GetProjectsProjectGitAnonymousPersistenceSetting)[vs[1].(int)]
	}).(GetProjectsProjectGitAnonymousPersistenceSettingOutput)
}

type GetProjectsProjectGitLibraryPersistenceSetting struct {
	// The base path associated with these version control settings.
	BasePath string `pulumi:"basePath"`
	// The default branch associated with these version control settings.
	DefaultBranch string `pulumi:"defaultBranch"`
	// The ID of the Git credential.
	GitCredentialId string `pulumi:"gitCredentialId"`
	// A list of protected branch patterns.
	ProtectedBranches []string `pulumi:"protectedBranches"`
	// The URL associated with these version control settings.
	Url string `pulumi:"url"`
}

// GetProjectsProjectGitLibraryPersistenceSettingInput is an input type that accepts GetProjectsProjectGitLibraryPersistenceSettingArgs and GetProjectsProjectGitLibraryPersistenceSettingOutput values.
// You can construct a concrete instance of `GetProjectsProjectGitLibraryPersistenceSettingInput` via:
//
//	GetProjectsProjectGitLibraryPersistenceSettingArgs{...}
type GetProjectsProjectGitLibraryPersistenceSettingInput interface {
	pulumi.Input

	ToGetProjectsProjectGitLibraryPersistenceSettingOutput() GetProjectsProjectGitLibraryPersistenceSettingOutput
	ToGetProjectsProjectGitLibraryPersistenceSettingOutputWithContext(context.Context) GetProjectsProjectGitLibraryPersistenceSettingOutput
}

type GetProjectsProjectGitLibraryPersistenceSettingArgs struct {
	// The base path associated with these version control settings.
	BasePath pulumi.StringInput `pulumi:"basePath"`
	// The default branch associated with these version control settings.
	DefaultBranch pulumi.StringInput `pulumi:"defaultBranch"`
	// The ID of the Git credential.
	GitCredentialId pulumi.StringInput `pulumi:"gitCredentialId"`
	// A list of protected branch patterns.
	ProtectedBranches pulumi.StringArrayInput `pulumi:"protectedBranches"`
	// The URL associated with these version control settings.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetProjectsProjectGitLibraryPersistenceSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectGitLibraryPersistenceSetting)(nil)).Elem()
}

func (i GetProjectsProjectGitLibraryPersistenceSettingArgs) ToGetProjectsProjectGitLibraryPersistenceSettingOutput() GetProjectsProjectGitLibraryPersistenceSettingOutput {
	return i.ToGetProjectsProjectGitLibraryPersistenceSettingOutputWithContext(context.Background())
}

func (i GetProjectsProjectGitLibraryPersistenceSettingArgs) ToGetProjectsProjectGitLibraryPersistenceSettingOutputWithContext(ctx context.Context) GetProjectsProjectGitLibraryPersistenceSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectGitLibraryPersistenceSettingOutput)
}

// GetProjectsProjectGitLibraryPersistenceSettingArrayInput is an input type that accepts GetProjectsProjectGitLibraryPersistenceSettingArray and GetProjectsProjectGitLibraryPersistenceSettingArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectGitLibraryPersistenceSettingArrayInput` via:
//
//	GetProjectsProjectGitLibraryPersistenceSettingArray{ GetProjectsProjectGitLibraryPersistenceSettingArgs{...} }
type GetProjectsProjectGitLibraryPersistenceSettingArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectGitLibraryPersistenceSettingArrayOutput() GetProjectsProjectGitLibraryPersistenceSettingArrayOutput
	ToGetProjectsProjectGitLibraryPersistenceSettingArrayOutputWithContext(context.Context) GetProjectsProjectGitLibraryPersistenceSettingArrayOutput
}

type GetProjectsProjectGitLibraryPersistenceSettingArray []GetProjectsProjectGitLibraryPersistenceSettingInput

func (GetProjectsProjectGitLibraryPersistenceSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectGitLibraryPersistenceSetting)(nil)).Elem()
}

func (i GetProjectsProjectGitLibraryPersistenceSettingArray) ToGetProjectsProjectGitLibraryPersistenceSettingArrayOutput() GetProjectsProjectGitLibraryPersistenceSettingArrayOutput {
	return i.ToGetProjectsProjectGitLibraryPersistenceSettingArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectGitLibraryPersistenceSettingArray) ToGetProjectsProjectGitLibraryPersistenceSettingArrayOutputWithContext(ctx context.Context) GetProjectsProjectGitLibraryPersistenceSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectGitLibraryPersistenceSettingArrayOutput)
}

type GetProjectsProjectGitLibraryPersistenceSettingOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectGitLibraryPersistenceSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectGitLibraryPersistenceSetting)(nil)).Elem()
}

func (o GetProjectsProjectGitLibraryPersistenceSettingOutput) ToGetProjectsProjectGitLibraryPersistenceSettingOutput() GetProjectsProjectGitLibraryPersistenceSettingOutput {
	return o
}

func (o GetProjectsProjectGitLibraryPersistenceSettingOutput) ToGetProjectsProjectGitLibraryPersistenceSettingOutputWithContext(ctx context.Context) GetProjectsProjectGitLibraryPersistenceSettingOutput {
	return o
}

// The base path associated with these version control settings.
func (o GetProjectsProjectGitLibraryPersistenceSettingOutput) BasePath() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectGitLibraryPersistenceSetting) string { return v.BasePath }).(pulumi.StringOutput)
}

// The default branch associated with these version control settings.
func (o GetProjectsProjectGitLibraryPersistenceSettingOutput) DefaultBranch() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectGitLibraryPersistenceSetting) string { return v.DefaultBranch }).(pulumi.StringOutput)
}

// The ID of the Git credential.
func (o GetProjectsProjectGitLibraryPersistenceSettingOutput) GitCredentialId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectGitLibraryPersistenceSetting) string { return v.GitCredentialId }).(pulumi.StringOutput)
}

// A list of protected branch patterns.
func (o GetProjectsProjectGitLibraryPersistenceSettingOutput) ProtectedBranches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectsProjectGitLibraryPersistenceSetting) []string { return v.ProtectedBranches }).(pulumi.StringArrayOutput)
}

// The URL associated with these version control settings.
func (o GetProjectsProjectGitLibraryPersistenceSettingOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectGitLibraryPersistenceSetting) string { return v.Url }).(pulumi.StringOutput)
}

type GetProjectsProjectGitLibraryPersistenceSettingArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectGitLibraryPersistenceSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectGitLibraryPersistenceSetting)(nil)).Elem()
}

func (o GetProjectsProjectGitLibraryPersistenceSettingArrayOutput) ToGetProjectsProjectGitLibraryPersistenceSettingArrayOutput() GetProjectsProjectGitLibraryPersistenceSettingArrayOutput {
	return o
}

func (o GetProjectsProjectGitLibraryPersistenceSettingArrayOutput) ToGetProjectsProjectGitLibraryPersistenceSettingArrayOutputWithContext(ctx context.Context) GetProjectsProjectGitLibraryPersistenceSettingArrayOutput {
	return o
}

func (o GetProjectsProjectGitLibraryPersistenceSettingArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectGitLibraryPersistenceSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProjectGitLibraryPersistenceSetting {
		return vs[0].([]GetProjectsProjectGitLibraryPersistenceSetting)[vs[1].(int)]
	}).(GetProjectsProjectGitLibraryPersistenceSettingOutput)
}

type GetProjectsProjectGitUsernamePasswordPersistenceSetting struct {
	// The base path associated with these version control settings.
	BasePath string `pulumi:"basePath"`
	// The default branch associated with these version control settings.
	DefaultBranch string `pulumi:"defaultBranch"`
	// The password for the Git credential.
	Password string `pulumi:"password"`
	// A list of protected branch patterns.
	ProtectedBranches []string `pulumi:"protectedBranches"`
	// The URL associated with these version control settings.
	Url string `pulumi:"url"`
	// The username for the Git credential.
	Username string `pulumi:"username"`
}

// GetProjectsProjectGitUsernamePasswordPersistenceSettingInput is an input type that accepts GetProjectsProjectGitUsernamePasswordPersistenceSettingArgs and GetProjectsProjectGitUsernamePasswordPersistenceSettingOutput values.
// You can construct a concrete instance of `GetProjectsProjectGitUsernamePasswordPersistenceSettingInput` via:
//
//	GetProjectsProjectGitUsernamePasswordPersistenceSettingArgs{...}
type GetProjectsProjectGitUsernamePasswordPersistenceSettingInput interface {
	pulumi.Input

	ToGetProjectsProjectGitUsernamePasswordPersistenceSettingOutput() GetProjectsProjectGitUsernamePasswordPersistenceSettingOutput
	ToGetProjectsProjectGitUsernamePasswordPersistenceSettingOutputWithContext(context.Context) GetProjectsProjectGitUsernamePasswordPersistenceSettingOutput
}

type GetProjectsProjectGitUsernamePasswordPersistenceSettingArgs struct {
	// The base path associated with these version control settings.
	BasePath pulumi.StringInput `pulumi:"basePath"`
	// The default branch associated with these version control settings.
	DefaultBranch pulumi.StringInput `pulumi:"defaultBranch"`
	// The password for the Git credential.
	Password pulumi.StringInput `pulumi:"password"`
	// A list of protected branch patterns.
	ProtectedBranches pulumi.StringArrayInput `pulumi:"protectedBranches"`
	// The URL associated with these version control settings.
	Url pulumi.StringInput `pulumi:"url"`
	// The username for the Git credential.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetProjectsProjectGitUsernamePasswordPersistenceSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectGitUsernamePasswordPersistenceSetting)(nil)).Elem()
}

func (i GetProjectsProjectGitUsernamePasswordPersistenceSettingArgs) ToGetProjectsProjectGitUsernamePasswordPersistenceSettingOutput() GetProjectsProjectGitUsernamePasswordPersistenceSettingOutput {
	return i.ToGetProjectsProjectGitUsernamePasswordPersistenceSettingOutputWithContext(context.Background())
}

func (i GetProjectsProjectGitUsernamePasswordPersistenceSettingArgs) ToGetProjectsProjectGitUsernamePasswordPersistenceSettingOutputWithContext(ctx context.Context) GetProjectsProjectGitUsernamePasswordPersistenceSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectGitUsernamePasswordPersistenceSettingOutput)
}

// GetProjectsProjectGitUsernamePasswordPersistenceSettingArrayInput is an input type that accepts GetProjectsProjectGitUsernamePasswordPersistenceSettingArray and GetProjectsProjectGitUsernamePasswordPersistenceSettingArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectGitUsernamePasswordPersistenceSettingArrayInput` via:
//
//	GetProjectsProjectGitUsernamePasswordPersistenceSettingArray{ GetProjectsProjectGitUsernamePasswordPersistenceSettingArgs{...} }
type GetProjectsProjectGitUsernamePasswordPersistenceSettingArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectGitUsernamePasswordPersistenceSettingArrayOutput() GetProjectsProjectGitUsernamePasswordPersistenceSettingArrayOutput
	ToGetProjectsProjectGitUsernamePasswordPersistenceSettingArrayOutputWithContext(context.Context) GetProjectsProjectGitUsernamePasswordPersistenceSettingArrayOutput
}

type GetProjectsProjectGitUsernamePasswordPersistenceSettingArray []GetProjectsProjectGitUsernamePasswordPersistenceSettingInput

func (GetProjectsProjectGitUsernamePasswordPersistenceSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectGitUsernamePasswordPersistenceSetting)(nil)).Elem()
}

func (i GetProjectsProjectGitUsernamePasswordPersistenceSettingArray) ToGetProjectsProjectGitUsernamePasswordPersistenceSettingArrayOutput() GetProjectsProjectGitUsernamePasswordPersistenceSettingArrayOutput {
	return i.ToGetProjectsProjectGitUsernamePasswordPersistenceSettingArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectGitUsernamePasswordPersistenceSettingArray) ToGetProjectsProjectGitUsernamePasswordPersistenceSettingArrayOutputWithContext(ctx context.Context) GetProjectsProjectGitUsernamePasswordPersistenceSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectGitUsernamePasswordPersistenceSettingArrayOutput)
}

type GetProjectsProjectGitUsernamePasswordPersistenceSettingOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectGitUsernamePasswordPersistenceSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectGitUsernamePasswordPersistenceSetting)(nil)).Elem()
}

func (o GetProjectsProjectGitUsernamePasswordPersistenceSettingOutput) ToGetProjectsProjectGitUsernamePasswordPersistenceSettingOutput() GetProjectsProjectGitUsernamePasswordPersistenceSettingOutput {
	return o
}

func (o GetProjectsProjectGitUsernamePasswordPersistenceSettingOutput) ToGetProjectsProjectGitUsernamePasswordPersistenceSettingOutputWithContext(ctx context.Context) GetProjectsProjectGitUsernamePasswordPersistenceSettingOutput {
	return o
}

// The base path associated with these version control settings.
func (o GetProjectsProjectGitUsernamePasswordPersistenceSettingOutput) BasePath() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectGitUsernamePasswordPersistenceSetting) string { return v.BasePath }).(pulumi.StringOutput)
}

// The default branch associated with these version control settings.
func (o GetProjectsProjectGitUsernamePasswordPersistenceSettingOutput) DefaultBranch() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectGitUsernamePasswordPersistenceSetting) string { return v.DefaultBranch }).(pulumi.StringOutput)
}

// The password for the Git credential.
func (o GetProjectsProjectGitUsernamePasswordPersistenceSettingOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectGitUsernamePasswordPersistenceSetting) string { return v.Password }).(pulumi.StringOutput)
}

// A list of protected branch patterns.
func (o GetProjectsProjectGitUsernamePasswordPersistenceSettingOutput) ProtectedBranches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectsProjectGitUsernamePasswordPersistenceSetting) []string { return v.ProtectedBranches }).(pulumi.StringArrayOutput)
}

// The URL associated with these version control settings.
func (o GetProjectsProjectGitUsernamePasswordPersistenceSettingOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectGitUsernamePasswordPersistenceSetting) string { return v.Url }).(pulumi.StringOutput)
}

// The username for the Git credential.
func (o GetProjectsProjectGitUsernamePasswordPersistenceSettingOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectGitUsernamePasswordPersistenceSetting) string { return v.Username }).(pulumi.StringOutput)
}

type GetProjectsProjectGitUsernamePasswordPersistenceSettingArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectGitUsernamePasswordPersistenceSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectGitUsernamePasswordPersistenceSetting)(nil)).Elem()
}

func (o GetProjectsProjectGitUsernamePasswordPersistenceSettingArrayOutput) ToGetProjectsProjectGitUsernamePasswordPersistenceSettingArrayOutput() GetProjectsProjectGitUsernamePasswordPersistenceSettingArrayOutput {
	return o
}

func (o GetProjectsProjectGitUsernamePasswordPersistenceSettingArrayOutput) ToGetProjectsProjectGitUsernamePasswordPersistenceSettingArrayOutputWithContext(ctx context.Context) GetProjectsProjectGitUsernamePasswordPersistenceSettingArrayOutput {
	return o
}

func (o GetProjectsProjectGitUsernamePasswordPersistenceSettingArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectGitUsernamePasswordPersistenceSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProjectGitUsernamePasswordPersistenceSetting {
		return vs[0].([]GetProjectsProjectGitUsernamePasswordPersistenceSetting)[vs[1].(int)]
	}).(GetProjectsProjectGitUsernamePasswordPersistenceSettingOutput)
}

type GetProjectsProjectJiraServiceManagementExtensionSetting struct {
	// The connection identifier for JSM.
	ConnectionId string `pulumi:"connectionId"`
	// Whether the JSM extension is enabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// The JSM service desk project name.
	ServiceDeskProjectName string `pulumi:"serviceDeskProjectName"`
}

// GetProjectsProjectJiraServiceManagementExtensionSettingInput is an input type that accepts GetProjectsProjectJiraServiceManagementExtensionSettingArgs and GetProjectsProjectJiraServiceManagementExtensionSettingOutput values.
// You can construct a concrete instance of `GetProjectsProjectJiraServiceManagementExtensionSettingInput` via:
//
//	GetProjectsProjectJiraServiceManagementExtensionSettingArgs{...}
type GetProjectsProjectJiraServiceManagementExtensionSettingInput interface {
	pulumi.Input

	ToGetProjectsProjectJiraServiceManagementExtensionSettingOutput() GetProjectsProjectJiraServiceManagementExtensionSettingOutput
	ToGetProjectsProjectJiraServiceManagementExtensionSettingOutputWithContext(context.Context) GetProjectsProjectJiraServiceManagementExtensionSettingOutput
}

type GetProjectsProjectJiraServiceManagementExtensionSettingArgs struct {
	// The connection identifier for JSM.
	ConnectionId pulumi.StringInput `pulumi:"connectionId"`
	// Whether the JSM extension is enabled.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The JSM service desk project name.
	ServiceDeskProjectName pulumi.StringInput `pulumi:"serviceDeskProjectName"`
}

func (GetProjectsProjectJiraServiceManagementExtensionSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectJiraServiceManagementExtensionSetting)(nil)).Elem()
}

func (i GetProjectsProjectJiraServiceManagementExtensionSettingArgs) ToGetProjectsProjectJiraServiceManagementExtensionSettingOutput() GetProjectsProjectJiraServiceManagementExtensionSettingOutput {
	return i.ToGetProjectsProjectJiraServiceManagementExtensionSettingOutputWithContext(context.Background())
}

func (i GetProjectsProjectJiraServiceManagementExtensionSettingArgs) ToGetProjectsProjectJiraServiceManagementExtensionSettingOutputWithContext(ctx context.Context) GetProjectsProjectJiraServiceManagementExtensionSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectJiraServiceManagementExtensionSettingOutput)
}

// GetProjectsProjectJiraServiceManagementExtensionSettingArrayInput is an input type that accepts GetProjectsProjectJiraServiceManagementExtensionSettingArray and GetProjectsProjectJiraServiceManagementExtensionSettingArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectJiraServiceManagementExtensionSettingArrayInput` via:
//
//	GetProjectsProjectJiraServiceManagementExtensionSettingArray{ GetProjectsProjectJiraServiceManagementExtensionSettingArgs{...} }
type GetProjectsProjectJiraServiceManagementExtensionSettingArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectJiraServiceManagementExtensionSettingArrayOutput() GetProjectsProjectJiraServiceManagementExtensionSettingArrayOutput
	ToGetProjectsProjectJiraServiceManagementExtensionSettingArrayOutputWithContext(context.Context) GetProjectsProjectJiraServiceManagementExtensionSettingArrayOutput
}

type GetProjectsProjectJiraServiceManagementExtensionSettingArray []GetProjectsProjectJiraServiceManagementExtensionSettingInput

func (GetProjectsProjectJiraServiceManagementExtensionSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectJiraServiceManagementExtensionSetting)(nil)).Elem()
}

func (i GetProjectsProjectJiraServiceManagementExtensionSettingArray) ToGetProjectsProjectJiraServiceManagementExtensionSettingArrayOutput() GetProjectsProjectJiraServiceManagementExtensionSettingArrayOutput {
	return i.ToGetProjectsProjectJiraServiceManagementExtensionSettingArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectJiraServiceManagementExtensionSettingArray) ToGetProjectsProjectJiraServiceManagementExtensionSettingArrayOutputWithContext(ctx context.Context) GetProjectsProjectJiraServiceManagementExtensionSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectJiraServiceManagementExtensionSettingArrayOutput)
}

type GetProjectsProjectJiraServiceManagementExtensionSettingOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectJiraServiceManagementExtensionSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectJiraServiceManagementExtensionSetting)(nil)).Elem()
}

func (o GetProjectsProjectJiraServiceManagementExtensionSettingOutput) ToGetProjectsProjectJiraServiceManagementExtensionSettingOutput() GetProjectsProjectJiraServiceManagementExtensionSettingOutput {
	return o
}

func (o GetProjectsProjectJiraServiceManagementExtensionSettingOutput) ToGetProjectsProjectJiraServiceManagementExtensionSettingOutputWithContext(ctx context.Context) GetProjectsProjectJiraServiceManagementExtensionSettingOutput {
	return o
}

// The connection identifier for JSM.
func (o GetProjectsProjectJiraServiceManagementExtensionSettingOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectJiraServiceManagementExtensionSetting) string { return v.ConnectionId }).(pulumi.StringOutput)
}

// Whether the JSM extension is enabled.
func (o GetProjectsProjectJiraServiceManagementExtensionSettingOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProjectJiraServiceManagementExtensionSetting) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The JSM service desk project name.
func (o GetProjectsProjectJiraServiceManagementExtensionSettingOutput) ServiceDeskProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectJiraServiceManagementExtensionSetting) string {
		return v.ServiceDeskProjectName
	}).(pulumi.StringOutput)
}

type GetProjectsProjectJiraServiceManagementExtensionSettingArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectJiraServiceManagementExtensionSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectJiraServiceManagementExtensionSetting)(nil)).Elem()
}

func (o GetProjectsProjectJiraServiceManagementExtensionSettingArrayOutput) ToGetProjectsProjectJiraServiceManagementExtensionSettingArrayOutput() GetProjectsProjectJiraServiceManagementExtensionSettingArrayOutput {
	return o
}

func (o GetProjectsProjectJiraServiceManagementExtensionSettingArrayOutput) ToGetProjectsProjectJiraServiceManagementExtensionSettingArrayOutputWithContext(ctx context.Context) GetProjectsProjectJiraServiceManagementExtensionSettingArrayOutput {
	return o
}

func (o GetProjectsProjectJiraServiceManagementExtensionSettingArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectJiraServiceManagementExtensionSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProjectJiraServiceManagementExtensionSetting {
		return vs[0].([]GetProjectsProjectJiraServiceManagementExtensionSetting)[vs[1].(int)]
	}).(GetProjectsProjectJiraServiceManagementExtensionSettingOutput)
}

type GetProjectsProjectReleaseCreationStrategy struct {
	// The ID of the channel to use for release creation.
	ChannelId string `pulumi:"channelId"`
	// The ID of the step containing the package for release creation.
	ReleaseCreationPackageStepId string `pulumi:"releaseCreationPackageStepId"`
	// Details of the package used for release creation.
	ReleaseCreationPackages []GetProjectsProjectReleaseCreationStrategyReleaseCreationPackage `pulumi:"releaseCreationPackages"`
}

// GetProjectsProjectReleaseCreationStrategyInput is an input type that accepts GetProjectsProjectReleaseCreationStrategyArgs and GetProjectsProjectReleaseCreationStrategyOutput values.
// You can construct a concrete instance of `GetProjectsProjectReleaseCreationStrategyInput` via:
//
//	GetProjectsProjectReleaseCreationStrategyArgs{...}
type GetProjectsProjectReleaseCreationStrategyInput interface {
	pulumi.Input

	ToGetProjectsProjectReleaseCreationStrategyOutput() GetProjectsProjectReleaseCreationStrategyOutput
	ToGetProjectsProjectReleaseCreationStrategyOutputWithContext(context.Context) GetProjectsProjectReleaseCreationStrategyOutput
}

type GetProjectsProjectReleaseCreationStrategyArgs struct {
	// The ID of the channel to use for release creation.
	ChannelId pulumi.StringInput `pulumi:"channelId"`
	// The ID of the step containing the package for release creation.
	ReleaseCreationPackageStepId pulumi.StringInput `pulumi:"releaseCreationPackageStepId"`
	// Details of the package used for release creation.
	ReleaseCreationPackages GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayInput `pulumi:"releaseCreationPackages"`
}

func (GetProjectsProjectReleaseCreationStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectReleaseCreationStrategy)(nil)).Elem()
}

func (i GetProjectsProjectReleaseCreationStrategyArgs) ToGetProjectsProjectReleaseCreationStrategyOutput() GetProjectsProjectReleaseCreationStrategyOutput {
	return i.ToGetProjectsProjectReleaseCreationStrategyOutputWithContext(context.Background())
}

func (i GetProjectsProjectReleaseCreationStrategyArgs) ToGetProjectsProjectReleaseCreationStrategyOutputWithContext(ctx context.Context) GetProjectsProjectReleaseCreationStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectReleaseCreationStrategyOutput)
}

// GetProjectsProjectReleaseCreationStrategyArrayInput is an input type that accepts GetProjectsProjectReleaseCreationStrategyArray and GetProjectsProjectReleaseCreationStrategyArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectReleaseCreationStrategyArrayInput` via:
//
//	GetProjectsProjectReleaseCreationStrategyArray{ GetProjectsProjectReleaseCreationStrategyArgs{...} }
type GetProjectsProjectReleaseCreationStrategyArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectReleaseCreationStrategyArrayOutput() GetProjectsProjectReleaseCreationStrategyArrayOutput
	ToGetProjectsProjectReleaseCreationStrategyArrayOutputWithContext(context.Context) GetProjectsProjectReleaseCreationStrategyArrayOutput
}

type GetProjectsProjectReleaseCreationStrategyArray []GetProjectsProjectReleaseCreationStrategyInput

func (GetProjectsProjectReleaseCreationStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectReleaseCreationStrategy)(nil)).Elem()
}

func (i GetProjectsProjectReleaseCreationStrategyArray) ToGetProjectsProjectReleaseCreationStrategyArrayOutput() GetProjectsProjectReleaseCreationStrategyArrayOutput {
	return i.ToGetProjectsProjectReleaseCreationStrategyArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectReleaseCreationStrategyArray) ToGetProjectsProjectReleaseCreationStrategyArrayOutputWithContext(ctx context.Context) GetProjectsProjectReleaseCreationStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectReleaseCreationStrategyArrayOutput)
}

type GetProjectsProjectReleaseCreationStrategyOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectReleaseCreationStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectReleaseCreationStrategy)(nil)).Elem()
}

func (o GetProjectsProjectReleaseCreationStrategyOutput) ToGetProjectsProjectReleaseCreationStrategyOutput() GetProjectsProjectReleaseCreationStrategyOutput {
	return o
}

func (o GetProjectsProjectReleaseCreationStrategyOutput) ToGetProjectsProjectReleaseCreationStrategyOutputWithContext(ctx context.Context) GetProjectsProjectReleaseCreationStrategyOutput {
	return o
}

// The ID of the channel to use for release creation.
func (o GetProjectsProjectReleaseCreationStrategyOutput) ChannelId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectReleaseCreationStrategy) string { return v.ChannelId }).(pulumi.StringOutput)
}

// The ID of the step containing the package for release creation.
func (o GetProjectsProjectReleaseCreationStrategyOutput) ReleaseCreationPackageStepId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectReleaseCreationStrategy) string { return v.ReleaseCreationPackageStepId }).(pulumi.StringOutput)
}

// Details of the package used for release creation.
func (o GetProjectsProjectReleaseCreationStrategyOutput) ReleaseCreationPackages() GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput {
	return o.ApplyT(func(v GetProjectsProjectReleaseCreationStrategy) []GetProjectsProjectReleaseCreationStrategyReleaseCreationPackage {
		return v.ReleaseCreationPackages
	}).(GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput)
}

type GetProjectsProjectReleaseCreationStrategyArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectReleaseCreationStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectReleaseCreationStrategy)(nil)).Elem()
}

func (o GetProjectsProjectReleaseCreationStrategyArrayOutput) ToGetProjectsProjectReleaseCreationStrategyArrayOutput() GetProjectsProjectReleaseCreationStrategyArrayOutput {
	return o
}

func (o GetProjectsProjectReleaseCreationStrategyArrayOutput) ToGetProjectsProjectReleaseCreationStrategyArrayOutputWithContext(ctx context.Context) GetProjectsProjectReleaseCreationStrategyArrayOutput {
	return o
}

func (o GetProjectsProjectReleaseCreationStrategyArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectReleaseCreationStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProjectReleaseCreationStrategy {
		return vs[0].([]GetProjectsProjectReleaseCreationStrategy)[vs[1].(int)]
	}).(GetProjectsProjectReleaseCreationStrategyOutput)
}

type GetProjectsProjectReleaseCreationStrategyReleaseCreationPackage struct {
	// The deployment action for the release creation package.
	DeploymentAction string `pulumi:"deploymentAction"`
	// The package reference for the release creation package.
	PackageReference string `pulumi:"packageReference"`
}

// GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageInput is an input type that accepts GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArgs and GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageOutput values.
// You can construct a concrete instance of `GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageInput` via:
//
//	GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArgs{...}
type GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageInput interface {
	pulumi.Input

	ToGetProjectsProjectReleaseCreationStrategyReleaseCreationPackageOutput() GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageOutput
	ToGetProjectsProjectReleaseCreationStrategyReleaseCreationPackageOutputWithContext(context.Context) GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageOutput
}

type GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArgs struct {
	// The deployment action for the release creation package.
	DeploymentAction pulumi.StringInput `pulumi:"deploymentAction"`
	// The package reference for the release creation package.
	PackageReference pulumi.StringInput `pulumi:"packageReference"`
}

func (GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectReleaseCreationStrategyReleaseCreationPackage)(nil)).Elem()
}

func (i GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArgs) ToGetProjectsProjectReleaseCreationStrategyReleaseCreationPackageOutput() GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageOutput {
	return i.ToGetProjectsProjectReleaseCreationStrategyReleaseCreationPackageOutputWithContext(context.Background())
}

func (i GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArgs) ToGetProjectsProjectReleaseCreationStrategyReleaseCreationPackageOutputWithContext(ctx context.Context) GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageOutput)
}

// GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayInput is an input type that accepts GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArray and GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayInput` via:
//
//	GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArray{ GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArgs{...} }
type GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput() GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput
	ToGetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayOutputWithContext(context.Context) GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput
}

type GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArray []GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageInput

func (GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectReleaseCreationStrategyReleaseCreationPackage)(nil)).Elem()
}

func (i GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArray) ToGetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput() GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput {
	return i.ToGetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArray) ToGetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayOutputWithContext(ctx context.Context) GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput)
}

type GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectReleaseCreationStrategyReleaseCreationPackage)(nil)).Elem()
}

func (o GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageOutput) ToGetProjectsProjectReleaseCreationStrategyReleaseCreationPackageOutput() GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageOutput {
	return o
}

func (o GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageOutput) ToGetProjectsProjectReleaseCreationStrategyReleaseCreationPackageOutputWithContext(ctx context.Context) GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageOutput {
	return o
}

// The deployment action for the release creation package.
func (o GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageOutput) DeploymentAction() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectReleaseCreationStrategyReleaseCreationPackage) string {
		return v.DeploymentAction
	}).(pulumi.StringOutput)
}

// The package reference for the release creation package.
func (o GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageOutput) PackageReference() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectReleaseCreationStrategyReleaseCreationPackage) string {
		return v.PackageReference
	}).(pulumi.StringOutput)
}

type GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectReleaseCreationStrategyReleaseCreationPackage)(nil)).Elem()
}

func (o GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput) ToGetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput() GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput {
	return o
}

func (o GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput) ToGetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayOutputWithContext(ctx context.Context) GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput {
	return o
}

func (o GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProjectReleaseCreationStrategyReleaseCreationPackage {
		return vs[0].([]GetProjectsProjectReleaseCreationStrategyReleaseCreationPackage)[vs[1].(int)]
	}).(GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageOutput)
}

type GetProjectsProjectServicenowExtensionSetting struct {
	// The connection identifier for ServiceNow.
	ConnectionId string `pulumi:"connectionId"`
	// Whether the ServiceNow extension is enabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether state is automatically transitioned in ServiceNow.
	IsStateAutomaticallyTransitioned bool `pulumi:"isStateAutomaticallyTransitioned"`
	// The name of the standard change template in ServiceNow.
	StandardChangeTemplateName string `pulumi:"standardChangeTemplateName"`
}

// GetProjectsProjectServicenowExtensionSettingInput is an input type that accepts GetProjectsProjectServicenowExtensionSettingArgs and GetProjectsProjectServicenowExtensionSettingOutput values.
// You can construct a concrete instance of `GetProjectsProjectServicenowExtensionSettingInput` via:
//
//	GetProjectsProjectServicenowExtensionSettingArgs{...}
type GetProjectsProjectServicenowExtensionSettingInput interface {
	pulumi.Input

	ToGetProjectsProjectServicenowExtensionSettingOutput() GetProjectsProjectServicenowExtensionSettingOutput
	ToGetProjectsProjectServicenowExtensionSettingOutputWithContext(context.Context) GetProjectsProjectServicenowExtensionSettingOutput
}

type GetProjectsProjectServicenowExtensionSettingArgs struct {
	// The connection identifier for ServiceNow.
	ConnectionId pulumi.StringInput `pulumi:"connectionId"`
	// Whether the ServiceNow extension is enabled.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Whether state is automatically transitioned in ServiceNow.
	IsStateAutomaticallyTransitioned pulumi.BoolInput `pulumi:"isStateAutomaticallyTransitioned"`
	// The name of the standard change template in ServiceNow.
	StandardChangeTemplateName pulumi.StringInput `pulumi:"standardChangeTemplateName"`
}

func (GetProjectsProjectServicenowExtensionSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectServicenowExtensionSetting)(nil)).Elem()
}

func (i GetProjectsProjectServicenowExtensionSettingArgs) ToGetProjectsProjectServicenowExtensionSettingOutput() GetProjectsProjectServicenowExtensionSettingOutput {
	return i.ToGetProjectsProjectServicenowExtensionSettingOutputWithContext(context.Background())
}

func (i GetProjectsProjectServicenowExtensionSettingArgs) ToGetProjectsProjectServicenowExtensionSettingOutputWithContext(ctx context.Context) GetProjectsProjectServicenowExtensionSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectServicenowExtensionSettingOutput)
}

// GetProjectsProjectServicenowExtensionSettingArrayInput is an input type that accepts GetProjectsProjectServicenowExtensionSettingArray and GetProjectsProjectServicenowExtensionSettingArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectServicenowExtensionSettingArrayInput` via:
//
//	GetProjectsProjectServicenowExtensionSettingArray{ GetProjectsProjectServicenowExtensionSettingArgs{...} }
type GetProjectsProjectServicenowExtensionSettingArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectServicenowExtensionSettingArrayOutput() GetProjectsProjectServicenowExtensionSettingArrayOutput
	ToGetProjectsProjectServicenowExtensionSettingArrayOutputWithContext(context.Context) GetProjectsProjectServicenowExtensionSettingArrayOutput
}

type GetProjectsProjectServicenowExtensionSettingArray []GetProjectsProjectServicenowExtensionSettingInput

func (GetProjectsProjectServicenowExtensionSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectServicenowExtensionSetting)(nil)).Elem()
}

func (i GetProjectsProjectServicenowExtensionSettingArray) ToGetProjectsProjectServicenowExtensionSettingArrayOutput() GetProjectsProjectServicenowExtensionSettingArrayOutput {
	return i.ToGetProjectsProjectServicenowExtensionSettingArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectServicenowExtensionSettingArray) ToGetProjectsProjectServicenowExtensionSettingArrayOutputWithContext(ctx context.Context) GetProjectsProjectServicenowExtensionSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectServicenowExtensionSettingArrayOutput)
}

type GetProjectsProjectServicenowExtensionSettingOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectServicenowExtensionSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectServicenowExtensionSetting)(nil)).Elem()
}

func (o GetProjectsProjectServicenowExtensionSettingOutput) ToGetProjectsProjectServicenowExtensionSettingOutput() GetProjectsProjectServicenowExtensionSettingOutput {
	return o
}

func (o GetProjectsProjectServicenowExtensionSettingOutput) ToGetProjectsProjectServicenowExtensionSettingOutputWithContext(ctx context.Context) GetProjectsProjectServicenowExtensionSettingOutput {
	return o
}

// The connection identifier for ServiceNow.
func (o GetProjectsProjectServicenowExtensionSettingOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectServicenowExtensionSetting) string { return v.ConnectionId }).(pulumi.StringOutput)
}

// Whether the ServiceNow extension is enabled.
func (o GetProjectsProjectServicenowExtensionSettingOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProjectServicenowExtensionSetting) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Whether state is automatically transitioned in ServiceNow.
func (o GetProjectsProjectServicenowExtensionSettingOutput) IsStateAutomaticallyTransitioned() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProjectServicenowExtensionSetting) bool { return v.IsStateAutomaticallyTransitioned }).(pulumi.BoolOutput)
}

// The name of the standard change template in ServiceNow.
func (o GetProjectsProjectServicenowExtensionSettingOutput) StandardChangeTemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectServicenowExtensionSetting) string { return v.StandardChangeTemplateName }).(pulumi.StringOutput)
}

type GetProjectsProjectServicenowExtensionSettingArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectServicenowExtensionSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectServicenowExtensionSetting)(nil)).Elem()
}

func (o GetProjectsProjectServicenowExtensionSettingArrayOutput) ToGetProjectsProjectServicenowExtensionSettingArrayOutput() GetProjectsProjectServicenowExtensionSettingArrayOutput {
	return o
}

func (o GetProjectsProjectServicenowExtensionSettingArrayOutput) ToGetProjectsProjectServicenowExtensionSettingArrayOutputWithContext(ctx context.Context) GetProjectsProjectServicenowExtensionSettingArrayOutput {
	return o
}

func (o GetProjectsProjectServicenowExtensionSettingArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectServicenowExtensionSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProjectServicenowExtensionSetting {
		return vs[0].([]GetProjectsProjectServicenowExtensionSetting)[vs[1].(int)]
	}).(GetProjectsProjectServicenowExtensionSettingOutput)
}

type GetProjectsProjectTemplate struct {
	// The default value for the parameter.
	DefaultValue string `pulumi:"defaultValue"`
	// The display settings for the parameter.
	DisplaySettings map[string]string `pulumi:"displaySettings"`
	// The help text for the parameter.
	HelpText string `pulumi:"helpText"`
	// The ID of the template parameter.
	Id string `pulumi:"id"`
	// The label shown beside the parameter.
	Label string `pulumi:"label"`
	// The name of the variable set by the parameter.
	Name string `pulumi:"name"`
}

// GetProjectsProjectTemplateInput is an input type that accepts GetProjectsProjectTemplateArgs and GetProjectsProjectTemplateOutput values.
// You can construct a concrete instance of `GetProjectsProjectTemplateInput` via:
//
//	GetProjectsProjectTemplateArgs{...}
type GetProjectsProjectTemplateInput interface {
	pulumi.Input

	ToGetProjectsProjectTemplateOutput() GetProjectsProjectTemplateOutput
	ToGetProjectsProjectTemplateOutputWithContext(context.Context) GetProjectsProjectTemplateOutput
}

type GetProjectsProjectTemplateArgs struct {
	// The default value for the parameter.
	DefaultValue pulumi.StringInput `pulumi:"defaultValue"`
	// The display settings for the parameter.
	DisplaySettings pulumi.StringMapInput `pulumi:"displaySettings"`
	// The help text for the parameter.
	HelpText pulumi.StringInput `pulumi:"helpText"`
	// The ID of the template parameter.
	Id pulumi.StringInput `pulumi:"id"`
	// The label shown beside the parameter.
	Label pulumi.StringInput `pulumi:"label"`
	// The name of the variable set by the parameter.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetProjectsProjectTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectTemplate)(nil)).Elem()
}

func (i GetProjectsProjectTemplateArgs) ToGetProjectsProjectTemplateOutput() GetProjectsProjectTemplateOutput {
	return i.ToGetProjectsProjectTemplateOutputWithContext(context.Background())
}

func (i GetProjectsProjectTemplateArgs) ToGetProjectsProjectTemplateOutputWithContext(ctx context.Context) GetProjectsProjectTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectTemplateOutput)
}

// GetProjectsProjectTemplateArrayInput is an input type that accepts GetProjectsProjectTemplateArray and GetProjectsProjectTemplateArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectTemplateArrayInput` via:
//
//	GetProjectsProjectTemplateArray{ GetProjectsProjectTemplateArgs{...} }
type GetProjectsProjectTemplateArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectTemplateArrayOutput() GetProjectsProjectTemplateArrayOutput
	ToGetProjectsProjectTemplateArrayOutputWithContext(context.Context) GetProjectsProjectTemplateArrayOutput
}

type GetProjectsProjectTemplateArray []GetProjectsProjectTemplateInput

func (GetProjectsProjectTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectTemplate)(nil)).Elem()
}

func (i GetProjectsProjectTemplateArray) ToGetProjectsProjectTemplateArrayOutput() GetProjectsProjectTemplateArrayOutput {
	return i.ToGetProjectsProjectTemplateArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectTemplateArray) ToGetProjectsProjectTemplateArrayOutputWithContext(ctx context.Context) GetProjectsProjectTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectTemplateArrayOutput)
}

type GetProjectsProjectTemplateOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectTemplate)(nil)).Elem()
}

func (o GetProjectsProjectTemplateOutput) ToGetProjectsProjectTemplateOutput() GetProjectsProjectTemplateOutput {
	return o
}

func (o GetProjectsProjectTemplateOutput) ToGetProjectsProjectTemplateOutputWithContext(ctx context.Context) GetProjectsProjectTemplateOutput {
	return o
}

// The default value for the parameter.
func (o GetProjectsProjectTemplateOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectTemplate) string { return v.DefaultValue }).(pulumi.StringOutput)
}

// The display settings for the parameter.
func (o GetProjectsProjectTemplateOutput) DisplaySettings() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetProjectsProjectTemplate) map[string]string { return v.DisplaySettings }).(pulumi.StringMapOutput)
}

// The help text for the parameter.
func (o GetProjectsProjectTemplateOutput) HelpText() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectTemplate) string { return v.HelpText }).(pulumi.StringOutput)
}

// The ID of the template parameter.
func (o GetProjectsProjectTemplateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectTemplate) string { return v.Id }).(pulumi.StringOutput)
}

// The label shown beside the parameter.
func (o GetProjectsProjectTemplateOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectTemplate) string { return v.Label }).(pulumi.StringOutput)
}

// The name of the variable set by the parameter.
func (o GetProjectsProjectTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectTemplate) string { return v.Name }).(pulumi.StringOutput)
}

type GetProjectsProjectTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectTemplate)(nil)).Elem()
}

func (o GetProjectsProjectTemplateArrayOutput) ToGetProjectsProjectTemplateArrayOutput() GetProjectsProjectTemplateArrayOutput {
	return o
}

func (o GetProjectsProjectTemplateArrayOutput) ToGetProjectsProjectTemplateArrayOutputWithContext(ctx context.Context) GetProjectsProjectTemplateArrayOutput {
	return o
}

func (o GetProjectsProjectTemplateArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProjectTemplate {
		return vs[0].([]GetProjectsProjectTemplate)[vs[1].(int)]
	}).(GetProjectsProjectTemplateOutput)
}

type GetProjectsProjectVersioningStrategy struct {
	// The ID of the step containing the donor package.
	DonorPackageStepId string                                             `pulumi:"donorPackageStepId"`
	DonorPackages      []GetProjectsProjectVersioningStrategyDonorPackage `pulumi:"donorPackages"`
	// The template to use for version numbers.
	Template string `pulumi:"template"`
}

// GetProjectsProjectVersioningStrategyInput is an input type that accepts GetProjectsProjectVersioningStrategyArgs and GetProjectsProjectVersioningStrategyOutput values.
// You can construct a concrete instance of `GetProjectsProjectVersioningStrategyInput` via:
//
//	GetProjectsProjectVersioningStrategyArgs{...}
type GetProjectsProjectVersioningStrategyInput interface {
	pulumi.Input

	ToGetProjectsProjectVersioningStrategyOutput() GetProjectsProjectVersioningStrategyOutput
	ToGetProjectsProjectVersioningStrategyOutputWithContext(context.Context) GetProjectsProjectVersioningStrategyOutput
}

type GetProjectsProjectVersioningStrategyArgs struct {
	// The ID of the step containing the donor package.
	DonorPackageStepId pulumi.StringInput                                         `pulumi:"donorPackageStepId"`
	DonorPackages      GetProjectsProjectVersioningStrategyDonorPackageArrayInput `pulumi:"donorPackages"`
	// The template to use for version numbers.
	Template pulumi.StringInput `pulumi:"template"`
}

func (GetProjectsProjectVersioningStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectVersioningStrategy)(nil)).Elem()
}

func (i GetProjectsProjectVersioningStrategyArgs) ToGetProjectsProjectVersioningStrategyOutput() GetProjectsProjectVersioningStrategyOutput {
	return i.ToGetProjectsProjectVersioningStrategyOutputWithContext(context.Background())
}

func (i GetProjectsProjectVersioningStrategyArgs) ToGetProjectsProjectVersioningStrategyOutputWithContext(ctx context.Context) GetProjectsProjectVersioningStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectVersioningStrategyOutput)
}

// GetProjectsProjectVersioningStrategyArrayInput is an input type that accepts GetProjectsProjectVersioningStrategyArray and GetProjectsProjectVersioningStrategyArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectVersioningStrategyArrayInput` via:
//
//	GetProjectsProjectVersioningStrategyArray{ GetProjectsProjectVersioningStrategyArgs{...} }
type GetProjectsProjectVersioningStrategyArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectVersioningStrategyArrayOutput() GetProjectsProjectVersioningStrategyArrayOutput
	ToGetProjectsProjectVersioningStrategyArrayOutputWithContext(context.Context) GetProjectsProjectVersioningStrategyArrayOutput
}

type GetProjectsProjectVersioningStrategyArray []GetProjectsProjectVersioningStrategyInput

func (GetProjectsProjectVersioningStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectVersioningStrategy)(nil)).Elem()
}

func (i GetProjectsProjectVersioningStrategyArray) ToGetProjectsProjectVersioningStrategyArrayOutput() GetProjectsProjectVersioningStrategyArrayOutput {
	return i.ToGetProjectsProjectVersioningStrategyArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectVersioningStrategyArray) ToGetProjectsProjectVersioningStrategyArrayOutputWithContext(ctx context.Context) GetProjectsProjectVersioningStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectVersioningStrategyArrayOutput)
}

type GetProjectsProjectVersioningStrategyOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectVersioningStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectVersioningStrategy)(nil)).Elem()
}

func (o GetProjectsProjectVersioningStrategyOutput) ToGetProjectsProjectVersioningStrategyOutput() GetProjectsProjectVersioningStrategyOutput {
	return o
}

func (o GetProjectsProjectVersioningStrategyOutput) ToGetProjectsProjectVersioningStrategyOutputWithContext(ctx context.Context) GetProjectsProjectVersioningStrategyOutput {
	return o
}

// The ID of the step containing the donor package.
func (o GetProjectsProjectVersioningStrategyOutput) DonorPackageStepId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectVersioningStrategy) string { return v.DonorPackageStepId }).(pulumi.StringOutput)
}

func (o GetProjectsProjectVersioningStrategyOutput) DonorPackages() GetProjectsProjectVersioningStrategyDonorPackageArrayOutput {
	return o.ApplyT(func(v GetProjectsProjectVersioningStrategy) []GetProjectsProjectVersioningStrategyDonorPackage {
		return v.DonorPackages
	}).(GetProjectsProjectVersioningStrategyDonorPackageArrayOutput)
}

// The template to use for version numbers.
func (o GetProjectsProjectVersioningStrategyOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectVersioningStrategy) string { return v.Template }).(pulumi.StringOutput)
}

type GetProjectsProjectVersioningStrategyArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectVersioningStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectVersioningStrategy)(nil)).Elem()
}

func (o GetProjectsProjectVersioningStrategyArrayOutput) ToGetProjectsProjectVersioningStrategyArrayOutput() GetProjectsProjectVersioningStrategyArrayOutput {
	return o
}

func (o GetProjectsProjectVersioningStrategyArrayOutput) ToGetProjectsProjectVersioningStrategyArrayOutputWithContext(ctx context.Context) GetProjectsProjectVersioningStrategyArrayOutput {
	return o
}

func (o GetProjectsProjectVersioningStrategyArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectVersioningStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProjectVersioningStrategy {
		return vs[0].([]GetProjectsProjectVersioningStrategy)[vs[1].(int)]
	}).(GetProjectsProjectVersioningStrategyOutput)
}

type GetProjectsProjectVersioningStrategyDonorPackage struct {
	// The deployment action for the donor package.
	DeploymentAction string `pulumi:"deploymentAction"`
	// The package reference for the donor package.
	PackageReference string `pulumi:"packageReference"`
}

// GetProjectsProjectVersioningStrategyDonorPackageInput is an input type that accepts GetProjectsProjectVersioningStrategyDonorPackageArgs and GetProjectsProjectVersioningStrategyDonorPackageOutput values.
// You can construct a concrete instance of `GetProjectsProjectVersioningStrategyDonorPackageInput` via:
//
//	GetProjectsProjectVersioningStrategyDonorPackageArgs{...}
type GetProjectsProjectVersioningStrategyDonorPackageInput interface {
	pulumi.Input

	ToGetProjectsProjectVersioningStrategyDonorPackageOutput() GetProjectsProjectVersioningStrategyDonorPackageOutput
	ToGetProjectsProjectVersioningStrategyDonorPackageOutputWithContext(context.Context) GetProjectsProjectVersioningStrategyDonorPackageOutput
}

type GetProjectsProjectVersioningStrategyDonorPackageArgs struct {
	// The deployment action for the donor package.
	DeploymentAction pulumi.StringInput `pulumi:"deploymentAction"`
	// The package reference for the donor package.
	PackageReference pulumi.StringInput `pulumi:"packageReference"`
}

func (GetProjectsProjectVersioningStrategyDonorPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectVersioningStrategyDonorPackage)(nil)).Elem()
}

func (i GetProjectsProjectVersioningStrategyDonorPackageArgs) ToGetProjectsProjectVersioningStrategyDonorPackageOutput() GetProjectsProjectVersioningStrategyDonorPackageOutput {
	return i.ToGetProjectsProjectVersioningStrategyDonorPackageOutputWithContext(context.Background())
}

func (i GetProjectsProjectVersioningStrategyDonorPackageArgs) ToGetProjectsProjectVersioningStrategyDonorPackageOutputWithContext(ctx context.Context) GetProjectsProjectVersioningStrategyDonorPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectVersioningStrategyDonorPackageOutput)
}

// GetProjectsProjectVersioningStrategyDonorPackageArrayInput is an input type that accepts GetProjectsProjectVersioningStrategyDonorPackageArray and GetProjectsProjectVersioningStrategyDonorPackageArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectVersioningStrategyDonorPackageArrayInput` via:
//
//	GetProjectsProjectVersioningStrategyDonorPackageArray{ GetProjectsProjectVersioningStrategyDonorPackageArgs{...} }
type GetProjectsProjectVersioningStrategyDonorPackageArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectVersioningStrategyDonorPackageArrayOutput() GetProjectsProjectVersioningStrategyDonorPackageArrayOutput
	ToGetProjectsProjectVersioningStrategyDonorPackageArrayOutputWithContext(context.Context) GetProjectsProjectVersioningStrategyDonorPackageArrayOutput
}

type GetProjectsProjectVersioningStrategyDonorPackageArray []GetProjectsProjectVersioningStrategyDonorPackageInput

func (GetProjectsProjectVersioningStrategyDonorPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectVersioningStrategyDonorPackage)(nil)).Elem()
}

func (i GetProjectsProjectVersioningStrategyDonorPackageArray) ToGetProjectsProjectVersioningStrategyDonorPackageArrayOutput() GetProjectsProjectVersioningStrategyDonorPackageArrayOutput {
	return i.ToGetProjectsProjectVersioningStrategyDonorPackageArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectVersioningStrategyDonorPackageArray) ToGetProjectsProjectVersioningStrategyDonorPackageArrayOutputWithContext(ctx context.Context) GetProjectsProjectVersioningStrategyDonorPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectVersioningStrategyDonorPackageArrayOutput)
}

type GetProjectsProjectVersioningStrategyDonorPackageOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectVersioningStrategyDonorPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectVersioningStrategyDonorPackage)(nil)).Elem()
}

func (o GetProjectsProjectVersioningStrategyDonorPackageOutput) ToGetProjectsProjectVersioningStrategyDonorPackageOutput() GetProjectsProjectVersioningStrategyDonorPackageOutput {
	return o
}

func (o GetProjectsProjectVersioningStrategyDonorPackageOutput) ToGetProjectsProjectVersioningStrategyDonorPackageOutputWithContext(ctx context.Context) GetProjectsProjectVersioningStrategyDonorPackageOutput {
	return o
}

// The deployment action for the donor package.
func (o GetProjectsProjectVersioningStrategyDonorPackageOutput) DeploymentAction() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectVersioningStrategyDonorPackage) string { return v.DeploymentAction }).(pulumi.StringOutput)
}

// The package reference for the donor package.
func (o GetProjectsProjectVersioningStrategyDonorPackageOutput) PackageReference() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectVersioningStrategyDonorPackage) string { return v.PackageReference }).(pulumi.StringOutput)
}

type GetProjectsProjectVersioningStrategyDonorPackageArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectVersioningStrategyDonorPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectVersioningStrategyDonorPackage)(nil)).Elem()
}

func (o GetProjectsProjectVersioningStrategyDonorPackageArrayOutput) ToGetProjectsProjectVersioningStrategyDonorPackageArrayOutput() GetProjectsProjectVersioningStrategyDonorPackageArrayOutput {
	return o
}

func (o GetProjectsProjectVersioningStrategyDonorPackageArrayOutput) ToGetProjectsProjectVersioningStrategyDonorPackageArrayOutputWithContext(ctx context.Context) GetProjectsProjectVersioningStrategyDonorPackageArrayOutput {
	return o
}

func (o GetProjectsProjectVersioningStrategyDonorPackageArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectVersioningStrategyDonorPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProjectVersioningStrategyDonorPackage {
		return vs[0].([]GetProjectsProjectVersioningStrategyDonorPackage)[vs[1].(int)]
	}).(GetProjectsProjectVersioningStrategyDonorPackageOutput)
}

type GetScriptModulesScriptModule struct {
	// The description of this script module.
	Description string `pulumi:"description"`
	// The unique ID for this resource.
	Id string `pulumi:"id"`
	// The name of this resource.
	Name string `pulumi:"name"`
	// The script associated with this script module.
	Scripts []GetScriptModulesScriptModuleScript `pulumi:"scripts"`
	// The space ID associated with this Script Module.
	SpaceId string `pulumi:"spaceId"`
	// The variable set ID for this script module.
	VariableSetId string `pulumi:"variableSetId"`
}

// GetScriptModulesScriptModuleInput is an input type that accepts GetScriptModulesScriptModuleArgs and GetScriptModulesScriptModuleOutput values.
// You can construct a concrete instance of `GetScriptModulesScriptModuleInput` via:
//
//	GetScriptModulesScriptModuleArgs{...}
type GetScriptModulesScriptModuleInput interface {
	pulumi.Input

	ToGetScriptModulesScriptModuleOutput() GetScriptModulesScriptModuleOutput
	ToGetScriptModulesScriptModuleOutputWithContext(context.Context) GetScriptModulesScriptModuleOutput
}

type GetScriptModulesScriptModuleArgs struct {
	// The description of this script module.
	Description pulumi.StringInput `pulumi:"description"`
	// The unique ID for this resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of this resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The script associated with this script module.
	Scripts GetScriptModulesScriptModuleScriptArrayInput `pulumi:"scripts"`
	// The space ID associated with this Script Module.
	SpaceId pulumi.StringInput `pulumi:"spaceId"`
	// The variable set ID for this script module.
	VariableSetId pulumi.StringInput `pulumi:"variableSetId"`
}

func (GetScriptModulesScriptModuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptModulesScriptModule)(nil)).Elem()
}

func (i GetScriptModulesScriptModuleArgs) ToGetScriptModulesScriptModuleOutput() GetScriptModulesScriptModuleOutput {
	return i.ToGetScriptModulesScriptModuleOutputWithContext(context.Background())
}

func (i GetScriptModulesScriptModuleArgs) ToGetScriptModulesScriptModuleOutputWithContext(ctx context.Context) GetScriptModulesScriptModuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptModulesScriptModuleOutput)
}

// GetScriptModulesScriptModuleArrayInput is an input type that accepts GetScriptModulesScriptModuleArray and GetScriptModulesScriptModuleArrayOutput values.
// You can construct a concrete instance of `GetScriptModulesScriptModuleArrayInput` via:
//
//	GetScriptModulesScriptModuleArray{ GetScriptModulesScriptModuleArgs{...} }
type GetScriptModulesScriptModuleArrayInput interface {
	pulumi.Input

	ToGetScriptModulesScriptModuleArrayOutput() GetScriptModulesScriptModuleArrayOutput
	ToGetScriptModulesScriptModuleArrayOutputWithContext(context.Context) GetScriptModulesScriptModuleArrayOutput
}

type GetScriptModulesScriptModuleArray []GetScriptModulesScriptModuleInput

func (GetScriptModulesScriptModuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptModulesScriptModule)(nil)).Elem()
}

func (i GetScriptModulesScriptModuleArray) ToGetScriptModulesScriptModuleArrayOutput() GetScriptModulesScriptModuleArrayOutput {
	return i.ToGetScriptModulesScriptModuleArrayOutputWithContext(context.Background())
}

func (i GetScriptModulesScriptModuleArray) ToGetScriptModulesScriptModuleArrayOutputWithContext(ctx context.Context) GetScriptModulesScriptModuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptModulesScriptModuleArrayOutput)
}

type GetScriptModulesScriptModuleOutput struct{ *pulumi.OutputState }

func (GetScriptModulesScriptModuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptModulesScriptModule)(nil)).Elem()
}

func (o GetScriptModulesScriptModuleOutput) ToGetScriptModulesScriptModuleOutput() GetScriptModulesScriptModuleOutput {
	return o
}

func (o GetScriptModulesScriptModuleOutput) ToGetScriptModulesScriptModuleOutputWithContext(ctx context.Context) GetScriptModulesScriptModuleOutput {
	return o
}

// The description of this script module.
func (o GetScriptModulesScriptModuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptModulesScriptModule) string { return v.Description }).(pulumi.StringOutput)
}

// The unique ID for this resource.
func (o GetScriptModulesScriptModuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptModulesScriptModule) string { return v.Id }).(pulumi.StringOutput)
}

// The name of this resource.
func (o GetScriptModulesScriptModuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptModulesScriptModule) string { return v.Name }).(pulumi.StringOutput)
}

// The script associated with this script module.
func (o GetScriptModulesScriptModuleOutput) Scripts() GetScriptModulesScriptModuleScriptArrayOutput {
	return o.ApplyT(func(v GetScriptModulesScriptModule) []GetScriptModulesScriptModuleScript { return v.Scripts }).(GetScriptModulesScriptModuleScriptArrayOutput)
}

// The space ID associated with this Script Module.
func (o GetScriptModulesScriptModuleOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptModulesScriptModule) string { return v.SpaceId }).(pulumi.StringOutput)
}

// The variable set ID for this script module.
func (o GetScriptModulesScriptModuleOutput) VariableSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptModulesScriptModule) string { return v.VariableSetId }).(pulumi.StringOutput)
}

type GetScriptModulesScriptModuleArrayOutput struct{ *pulumi.OutputState }

func (GetScriptModulesScriptModuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptModulesScriptModule)(nil)).Elem()
}

func (o GetScriptModulesScriptModuleArrayOutput) ToGetScriptModulesScriptModuleArrayOutput() GetScriptModulesScriptModuleArrayOutput {
	return o
}

func (o GetScriptModulesScriptModuleArrayOutput) ToGetScriptModulesScriptModuleArrayOutputWithContext(ctx context.Context) GetScriptModulesScriptModuleArrayOutput {
	return o
}

func (o GetScriptModulesScriptModuleArrayOutput) Index(i pulumi.IntInput) GetScriptModulesScriptModuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetScriptModulesScriptModule {
		return vs[0].([]GetScriptModulesScriptModule)[vs[1].(int)]
	}).(GetScriptModulesScriptModuleOutput)
}

type GetScriptModulesScriptModuleScript struct {
	// The body of this script module.
	Body string `pulumi:"body"`
	// The syntax of the script. Valid types are `Bash`, `CSharp`, `FSharp`, `PowerShell`, or `Python`.
	Syntax string `pulumi:"syntax"`
}

// GetScriptModulesScriptModuleScriptInput is an input type that accepts GetScriptModulesScriptModuleScriptArgs and GetScriptModulesScriptModuleScriptOutput values.
// You can construct a concrete instance of `GetScriptModulesScriptModuleScriptInput` via:
//
//	GetScriptModulesScriptModuleScriptArgs{...}
type GetScriptModulesScriptModuleScriptInput interface {
	pulumi.Input

	ToGetScriptModulesScriptModuleScriptOutput() GetScriptModulesScriptModuleScriptOutput
	ToGetScriptModulesScriptModuleScriptOutputWithContext(context.Context) GetScriptModulesScriptModuleScriptOutput
}

type GetScriptModulesScriptModuleScriptArgs struct {
	// The body of this script module.
	Body pulumi.StringInput `pulumi:"body"`
	// The syntax of the script. Valid types are `Bash`, `CSharp`, `FSharp`, `PowerShell`, or `Python`.
	Syntax pulumi.StringInput `pulumi:"syntax"`
}

func (GetScriptModulesScriptModuleScriptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptModulesScriptModuleScript)(nil)).Elem()
}

func (i GetScriptModulesScriptModuleScriptArgs) ToGetScriptModulesScriptModuleScriptOutput() GetScriptModulesScriptModuleScriptOutput {
	return i.ToGetScriptModulesScriptModuleScriptOutputWithContext(context.Background())
}

func (i GetScriptModulesScriptModuleScriptArgs) ToGetScriptModulesScriptModuleScriptOutputWithContext(ctx context.Context) GetScriptModulesScriptModuleScriptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptModulesScriptModuleScriptOutput)
}

// GetScriptModulesScriptModuleScriptArrayInput is an input type that accepts GetScriptModulesScriptModuleScriptArray and GetScriptModulesScriptModuleScriptArrayOutput values.
// You can construct a concrete instance of `GetScriptModulesScriptModuleScriptArrayInput` via:
//
//	GetScriptModulesScriptModuleScriptArray{ GetScriptModulesScriptModuleScriptArgs{...} }
type GetScriptModulesScriptModuleScriptArrayInput interface {
	pulumi.Input

	ToGetScriptModulesScriptModuleScriptArrayOutput() GetScriptModulesScriptModuleScriptArrayOutput
	ToGetScriptModulesScriptModuleScriptArrayOutputWithContext(context.Context) GetScriptModulesScriptModuleScriptArrayOutput
}

type GetScriptModulesScriptModuleScriptArray []GetScriptModulesScriptModuleScriptInput

func (GetScriptModulesScriptModuleScriptArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptModulesScriptModuleScript)(nil)).Elem()
}

func (i GetScriptModulesScriptModuleScriptArray) ToGetScriptModulesScriptModuleScriptArrayOutput() GetScriptModulesScriptModuleScriptArrayOutput {
	return i.ToGetScriptModulesScriptModuleScriptArrayOutputWithContext(context.Background())
}

func (i GetScriptModulesScriptModuleScriptArray) ToGetScriptModulesScriptModuleScriptArrayOutputWithContext(ctx context.Context) GetScriptModulesScriptModuleScriptArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptModulesScriptModuleScriptArrayOutput)
}

type GetScriptModulesScriptModuleScriptOutput struct{ *pulumi.OutputState }

func (GetScriptModulesScriptModuleScriptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptModulesScriptModuleScript)(nil)).Elem()
}

func (o GetScriptModulesScriptModuleScriptOutput) ToGetScriptModulesScriptModuleScriptOutput() GetScriptModulesScriptModuleScriptOutput {
	return o
}

func (o GetScriptModulesScriptModuleScriptOutput) ToGetScriptModulesScriptModuleScriptOutputWithContext(ctx context.Context) GetScriptModulesScriptModuleScriptOutput {
	return o
}

// The body of this script module.
func (o GetScriptModulesScriptModuleScriptOutput) Body() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptModulesScriptModuleScript) string { return v.Body }).(pulumi.StringOutput)
}

// The syntax of the script. Valid types are `Bash`, `CSharp`, `FSharp`, `PowerShell`, or `Python`.
func (o GetScriptModulesScriptModuleScriptOutput) Syntax() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptModulesScriptModuleScript) string { return v.Syntax }).(pulumi.StringOutput)
}

type GetScriptModulesScriptModuleScriptArrayOutput struct{ *pulumi.OutputState }

func (GetScriptModulesScriptModuleScriptArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptModulesScriptModuleScript)(nil)).Elem()
}

func (o GetScriptModulesScriptModuleScriptArrayOutput) ToGetScriptModulesScriptModuleScriptArrayOutput() GetScriptModulesScriptModuleScriptArrayOutput {
	return o
}

func (o GetScriptModulesScriptModuleScriptArrayOutput) ToGetScriptModulesScriptModuleScriptArrayOutputWithContext(ctx context.Context) GetScriptModulesScriptModuleScriptArrayOutput {
	return o
}

func (o GetScriptModulesScriptModuleScriptArrayOutput) Index(i pulumi.IntInput) GetScriptModulesScriptModuleScriptOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetScriptModulesScriptModuleScript {
		return vs[0].([]GetScriptModulesScriptModuleScript)[vs[1].(int)]
	}).(GetScriptModulesScriptModuleScriptOutput)
}

type GetSpacesSpace struct {
	// The description of this space.
	Description string `pulumi:"description"`
	// The unique ID for this resource.
	Id string `pulumi:"id"`
	// Specifies if this space is the default space in Octopus.
	IsDefault bool `pulumi:"isDefault"`
	// Specifies the status of the task queue for this space.
	IsTaskQueueStopped bool `pulumi:"isTaskQueueStopped"`
	// The name of this resource, no more than 20 characters long
	Name string `pulumi:"name"`
	// The unique slug of this space
	Slug string `pulumi:"slug"`
	// A list of user IDs designated to be managers of this space.
	SpaceManagersTeamMembers []string `pulumi:"spaceManagersTeamMembers"`
	// A list of team IDs designated to be managers of this space.
	SpaceManagersTeams []string `pulumi:"spaceManagersTeams"`
}

// GetSpacesSpaceInput is an input type that accepts GetSpacesSpaceArgs and GetSpacesSpaceOutput values.
// You can construct a concrete instance of `GetSpacesSpaceInput` via:
//
//	GetSpacesSpaceArgs{...}
type GetSpacesSpaceInput interface {
	pulumi.Input

	ToGetSpacesSpaceOutput() GetSpacesSpaceOutput
	ToGetSpacesSpaceOutputWithContext(context.Context) GetSpacesSpaceOutput
}

type GetSpacesSpaceArgs struct {
	// The description of this space.
	Description pulumi.StringInput `pulumi:"description"`
	// The unique ID for this resource.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies if this space is the default space in Octopus.
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// Specifies the status of the task queue for this space.
	IsTaskQueueStopped pulumi.BoolInput `pulumi:"isTaskQueueStopped"`
	// The name of this resource, no more than 20 characters long
	Name pulumi.StringInput `pulumi:"name"`
	// The unique slug of this space
	Slug pulumi.StringInput `pulumi:"slug"`
	// A list of user IDs designated to be managers of this space.
	SpaceManagersTeamMembers pulumi.StringArrayInput `pulumi:"spaceManagersTeamMembers"`
	// A list of team IDs designated to be managers of this space.
	SpaceManagersTeams pulumi.StringArrayInput `pulumi:"spaceManagersTeams"`
}

func (GetSpacesSpaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSpacesSpace)(nil)).Elem()
}

func (i GetSpacesSpaceArgs) ToGetSpacesSpaceOutput() GetSpacesSpaceOutput {
	return i.ToGetSpacesSpaceOutputWithContext(context.Background())
}

func (i GetSpacesSpaceArgs) ToGetSpacesSpaceOutputWithContext(ctx context.Context) GetSpacesSpaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSpacesSpaceOutput)
}

// GetSpacesSpaceArrayInput is an input type that accepts GetSpacesSpaceArray and GetSpacesSpaceArrayOutput values.
// You can construct a concrete instance of `GetSpacesSpaceArrayInput` via:
//
//	GetSpacesSpaceArray{ GetSpacesSpaceArgs{...} }
type GetSpacesSpaceArrayInput interface {
	pulumi.Input

	ToGetSpacesSpaceArrayOutput() GetSpacesSpaceArrayOutput
	ToGetSpacesSpaceArrayOutputWithContext(context.Context) GetSpacesSpaceArrayOutput
}

type GetSpacesSpaceArray []GetSpacesSpaceInput

func (GetSpacesSpaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSpacesSpace)(nil)).Elem()
}

func (i GetSpacesSpaceArray) ToGetSpacesSpaceArrayOutput() GetSpacesSpaceArrayOutput {
	return i.ToGetSpacesSpaceArrayOutputWithContext(context.Background())
}

func (i GetSpacesSpaceArray) ToGetSpacesSpaceArrayOutputWithContext(ctx context.Context) GetSpacesSpaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSpacesSpaceArrayOutput)
}

type GetSpacesSpaceOutput struct{ *pulumi.OutputState }

func (GetSpacesSpaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSpacesSpace)(nil)).Elem()
}

func (o GetSpacesSpaceOutput) ToGetSpacesSpaceOutput() GetSpacesSpaceOutput {
	return o
}

func (o GetSpacesSpaceOutput) ToGetSpacesSpaceOutputWithContext(ctx context.Context) GetSpacesSpaceOutput {
	return o
}

// The description of this space.
func (o GetSpacesSpaceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSpacesSpace) string { return v.Description }).(pulumi.StringOutput)
}

// The unique ID for this resource.
func (o GetSpacesSpaceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSpacesSpace) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies if this space is the default space in Octopus.
func (o GetSpacesSpaceOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSpacesSpace) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// Specifies the status of the task queue for this space.
func (o GetSpacesSpaceOutput) IsTaskQueueStopped() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSpacesSpace) bool { return v.IsTaskQueueStopped }).(pulumi.BoolOutput)
}

// The name of this resource, no more than 20 characters long
func (o GetSpacesSpaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSpacesSpace) string { return v.Name }).(pulumi.StringOutput)
}

// The unique slug of this space
func (o GetSpacesSpaceOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetSpacesSpace) string { return v.Slug }).(pulumi.StringOutput)
}

// A list of user IDs designated to be managers of this space.
func (o GetSpacesSpaceOutput) SpaceManagersTeamMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSpacesSpace) []string { return v.SpaceManagersTeamMembers }).(pulumi.StringArrayOutput)
}

// A list of team IDs designated to be managers of this space.
func (o GetSpacesSpaceOutput) SpaceManagersTeams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSpacesSpace) []string { return v.SpaceManagersTeams }).(pulumi.StringArrayOutput)
}

type GetSpacesSpaceArrayOutput struct{ *pulumi.OutputState }

func (GetSpacesSpaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSpacesSpace)(nil)).Elem()
}

func (o GetSpacesSpaceArrayOutput) ToGetSpacesSpaceArrayOutput() GetSpacesSpaceArrayOutput {
	return o
}

func (o GetSpacesSpaceArrayOutput) ToGetSpacesSpaceArrayOutputWithContext(ctx context.Context) GetSpacesSpaceArrayOutput {
	return o
}

func (o GetSpacesSpaceArrayOutput) Index(i pulumi.IntInput) GetSpacesSpaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSpacesSpace {
		return vs[0].([]GetSpacesSpace)[vs[1].(int)]
	}).(GetSpacesSpaceOutput)
}

type GetTagSetsTagSet struct {
	// The description of this tag set.
	Description string `pulumi:"description"`
	// The unique ID for this resource.
	Id string `pulumi:"id"`
	// The name of this resource.
	Name string `pulumi:"name"`
	// The sort order associated with this resource.
	SortOrder int `pulumi:"sortOrder"`
	// The space ID associated with this resource.
	SpaceId string `pulumi:"spaceId"`
}

// GetTagSetsTagSetInput is an input type that accepts GetTagSetsTagSetArgs and GetTagSetsTagSetOutput values.
// You can construct a concrete instance of `GetTagSetsTagSetInput` via:
//
//	GetTagSetsTagSetArgs{...}
type GetTagSetsTagSetInput interface {
	pulumi.Input

	ToGetTagSetsTagSetOutput() GetTagSetsTagSetOutput
	ToGetTagSetsTagSetOutputWithContext(context.Context) GetTagSetsTagSetOutput
}

type GetTagSetsTagSetArgs struct {
	// The description of this tag set.
	Description pulumi.StringInput `pulumi:"description"`
	// The unique ID for this resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of this resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The sort order associated with this resource.
	SortOrder pulumi.IntInput `pulumi:"sortOrder"`
	// The space ID associated with this resource.
	SpaceId pulumi.StringInput `pulumi:"spaceId"`
}

func (GetTagSetsTagSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagSetsTagSet)(nil)).Elem()
}

func (i GetTagSetsTagSetArgs) ToGetTagSetsTagSetOutput() GetTagSetsTagSetOutput {
	return i.ToGetTagSetsTagSetOutputWithContext(context.Background())
}

func (i GetTagSetsTagSetArgs) ToGetTagSetsTagSetOutputWithContext(ctx context.Context) GetTagSetsTagSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagSetsTagSetOutput)
}

// GetTagSetsTagSetArrayInput is an input type that accepts GetTagSetsTagSetArray and GetTagSetsTagSetArrayOutput values.
// You can construct a concrete instance of `GetTagSetsTagSetArrayInput` via:
//
//	GetTagSetsTagSetArray{ GetTagSetsTagSetArgs{...} }
type GetTagSetsTagSetArrayInput interface {
	pulumi.Input

	ToGetTagSetsTagSetArrayOutput() GetTagSetsTagSetArrayOutput
	ToGetTagSetsTagSetArrayOutputWithContext(context.Context) GetTagSetsTagSetArrayOutput
}

type GetTagSetsTagSetArray []GetTagSetsTagSetInput

func (GetTagSetsTagSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagSetsTagSet)(nil)).Elem()
}

func (i GetTagSetsTagSetArray) ToGetTagSetsTagSetArrayOutput() GetTagSetsTagSetArrayOutput {
	return i.ToGetTagSetsTagSetArrayOutputWithContext(context.Background())
}

func (i GetTagSetsTagSetArray) ToGetTagSetsTagSetArrayOutputWithContext(ctx context.Context) GetTagSetsTagSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagSetsTagSetArrayOutput)
}

type GetTagSetsTagSetOutput struct{ *pulumi.OutputState }

func (GetTagSetsTagSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagSetsTagSet)(nil)).Elem()
}

func (o GetTagSetsTagSetOutput) ToGetTagSetsTagSetOutput() GetTagSetsTagSetOutput {
	return o
}

func (o GetTagSetsTagSetOutput) ToGetTagSetsTagSetOutputWithContext(ctx context.Context) GetTagSetsTagSetOutput {
	return o
}

// The description of this tag set.
func (o GetTagSetsTagSetOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagSetsTagSet) string { return v.Description }).(pulumi.StringOutput)
}

// The unique ID for this resource.
func (o GetTagSetsTagSetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagSetsTagSet) string { return v.Id }).(pulumi.StringOutput)
}

// The name of this resource.
func (o GetTagSetsTagSetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagSetsTagSet) string { return v.Name }).(pulumi.StringOutput)
}

// The sort order associated with this resource.
func (o GetTagSetsTagSetOutput) SortOrder() pulumi.IntOutput {
	return o.ApplyT(func(v GetTagSetsTagSet) int { return v.SortOrder }).(pulumi.IntOutput)
}

// The space ID associated with this resource.
func (o GetTagSetsTagSetOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagSetsTagSet) string { return v.SpaceId }).(pulumi.StringOutput)
}

type GetTagSetsTagSetArrayOutput struct{ *pulumi.OutputState }

func (GetTagSetsTagSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagSetsTagSet)(nil)).Elem()
}

func (o GetTagSetsTagSetArrayOutput) ToGetTagSetsTagSetArrayOutput() GetTagSetsTagSetArrayOutput {
	return o
}

func (o GetTagSetsTagSetArrayOutput) ToGetTagSetsTagSetArrayOutputWithContext(ctx context.Context) GetTagSetsTagSetArrayOutput {
	return o
}

func (o GetTagSetsTagSetArrayOutput) Index(i pulumi.IntInput) GetTagSetsTagSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTagSetsTagSet {
		return vs[0].([]GetTagSetsTagSet)[vs[1].(int)]
	}).(GetTagSetsTagSetOutput)
}

type GetTenantProjectsTenantProject struct {
	// The environment IDs associated with this tenant.
	EnvironmentIds []string `pulumi:"environmentIds"`
	// The unique ID for this resource.
	Id string `pulumi:"id"`
	// The project ID associated with this tenant.
	ProjectId string `pulumi:"projectId"`
	// The tenant ID associated with this tenant.
	TenantId string `pulumi:"tenantId"`
}

// GetTenantProjectsTenantProjectInput is an input type that accepts GetTenantProjectsTenantProjectArgs and GetTenantProjectsTenantProjectOutput values.
// You can construct a concrete instance of `GetTenantProjectsTenantProjectInput` via:
//
//	GetTenantProjectsTenantProjectArgs{...}
type GetTenantProjectsTenantProjectInput interface {
	pulumi.Input

	ToGetTenantProjectsTenantProjectOutput() GetTenantProjectsTenantProjectOutput
	ToGetTenantProjectsTenantProjectOutputWithContext(context.Context) GetTenantProjectsTenantProjectOutput
}

type GetTenantProjectsTenantProjectArgs struct {
	// The environment IDs associated with this tenant.
	EnvironmentIds pulumi.StringArrayInput `pulumi:"environmentIds"`
	// The unique ID for this resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The project ID associated with this tenant.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The tenant ID associated with this tenant.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (GetTenantProjectsTenantProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTenantProjectsTenantProject)(nil)).Elem()
}

func (i GetTenantProjectsTenantProjectArgs) ToGetTenantProjectsTenantProjectOutput() GetTenantProjectsTenantProjectOutput {
	return i.ToGetTenantProjectsTenantProjectOutputWithContext(context.Background())
}

func (i GetTenantProjectsTenantProjectArgs) ToGetTenantProjectsTenantProjectOutputWithContext(ctx context.Context) GetTenantProjectsTenantProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTenantProjectsTenantProjectOutput)
}

// GetTenantProjectsTenantProjectArrayInput is an input type that accepts GetTenantProjectsTenantProjectArray and GetTenantProjectsTenantProjectArrayOutput values.
// You can construct a concrete instance of `GetTenantProjectsTenantProjectArrayInput` via:
//
//	GetTenantProjectsTenantProjectArray{ GetTenantProjectsTenantProjectArgs{...} }
type GetTenantProjectsTenantProjectArrayInput interface {
	pulumi.Input

	ToGetTenantProjectsTenantProjectArrayOutput() GetTenantProjectsTenantProjectArrayOutput
	ToGetTenantProjectsTenantProjectArrayOutputWithContext(context.Context) GetTenantProjectsTenantProjectArrayOutput
}

type GetTenantProjectsTenantProjectArray []GetTenantProjectsTenantProjectInput

func (GetTenantProjectsTenantProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTenantProjectsTenantProject)(nil)).Elem()
}

func (i GetTenantProjectsTenantProjectArray) ToGetTenantProjectsTenantProjectArrayOutput() GetTenantProjectsTenantProjectArrayOutput {
	return i.ToGetTenantProjectsTenantProjectArrayOutputWithContext(context.Background())
}

func (i GetTenantProjectsTenantProjectArray) ToGetTenantProjectsTenantProjectArrayOutputWithContext(ctx context.Context) GetTenantProjectsTenantProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTenantProjectsTenantProjectArrayOutput)
}

type GetTenantProjectsTenantProjectOutput struct{ *pulumi.OutputState }

func (GetTenantProjectsTenantProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTenantProjectsTenantProject)(nil)).Elem()
}

func (o GetTenantProjectsTenantProjectOutput) ToGetTenantProjectsTenantProjectOutput() GetTenantProjectsTenantProjectOutput {
	return o
}

func (o GetTenantProjectsTenantProjectOutput) ToGetTenantProjectsTenantProjectOutputWithContext(ctx context.Context) GetTenantProjectsTenantProjectOutput {
	return o
}

// The environment IDs associated with this tenant.
func (o GetTenantProjectsTenantProjectOutput) EnvironmentIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTenantProjectsTenantProject) []string { return v.EnvironmentIds }).(pulumi.StringArrayOutput)
}

// The unique ID for this resource.
func (o GetTenantProjectsTenantProjectOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantProjectsTenantProject) string { return v.Id }).(pulumi.StringOutput)
}

// The project ID associated with this tenant.
func (o GetTenantProjectsTenantProjectOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantProjectsTenantProject) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The tenant ID associated with this tenant.
func (o GetTenantProjectsTenantProjectOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantProjectsTenantProject) string { return v.TenantId }).(pulumi.StringOutput)
}

type GetTenantProjectsTenantProjectArrayOutput struct{ *pulumi.OutputState }

func (GetTenantProjectsTenantProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTenantProjectsTenantProject)(nil)).Elem()
}

func (o GetTenantProjectsTenantProjectArrayOutput) ToGetTenantProjectsTenantProjectArrayOutput() GetTenantProjectsTenantProjectArrayOutput {
	return o
}

func (o GetTenantProjectsTenantProjectArrayOutput) ToGetTenantProjectsTenantProjectArrayOutputWithContext(ctx context.Context) GetTenantProjectsTenantProjectArrayOutput {
	return o
}

func (o GetTenantProjectsTenantProjectArrayOutput) Index(i pulumi.IntInput) GetTenantProjectsTenantProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTenantProjectsTenantProject {
		return vs[0].([]GetTenantProjectsTenantProject)[vs[1].(int)]
	}).(GetTenantProjectsTenantProjectOutput)
}

type GetTenantsTenant struct {
	// The ID of the tenant from which this tenant was cloned.
	ClonedFromTenantId string `pulumi:"clonedFromTenantId"`
	// The description of this tenants.
	Description string `pulumi:"description"`
	// The unique ID for this resource.
	Id string `pulumi:"id"`
	// The name of this resource.
	Name string `pulumi:"name"`
	// The space ID associated with this tenant.
	SpaceId string `pulumi:"spaceId"`
	// A list of tenant tags associated with this resource.
	TenantTags []string `pulumi:"tenantTags"`
}

// GetTenantsTenantInput is an input type that accepts GetTenantsTenantArgs and GetTenantsTenantOutput values.
// You can construct a concrete instance of `GetTenantsTenantInput` via:
//
//	GetTenantsTenantArgs{...}
type GetTenantsTenantInput interface {
	pulumi.Input

	ToGetTenantsTenantOutput() GetTenantsTenantOutput
	ToGetTenantsTenantOutputWithContext(context.Context) GetTenantsTenantOutput
}

type GetTenantsTenantArgs struct {
	// The ID of the tenant from which this tenant was cloned.
	ClonedFromTenantId pulumi.StringInput `pulumi:"clonedFromTenantId"`
	// The description of this tenants.
	Description pulumi.StringInput `pulumi:"description"`
	// The unique ID for this resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of this resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The space ID associated with this tenant.
	SpaceId pulumi.StringInput `pulumi:"spaceId"`
	// A list of tenant tags associated with this resource.
	TenantTags pulumi.StringArrayInput `pulumi:"tenantTags"`
}

func (GetTenantsTenantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTenantsTenant)(nil)).Elem()
}

func (i GetTenantsTenantArgs) ToGetTenantsTenantOutput() GetTenantsTenantOutput {
	return i.ToGetTenantsTenantOutputWithContext(context.Background())
}

func (i GetTenantsTenantArgs) ToGetTenantsTenantOutputWithContext(ctx context.Context) GetTenantsTenantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTenantsTenantOutput)
}

// GetTenantsTenantArrayInput is an input type that accepts GetTenantsTenantArray and GetTenantsTenantArrayOutput values.
// You can construct a concrete instance of `GetTenantsTenantArrayInput` via:
//
//	GetTenantsTenantArray{ GetTenantsTenantArgs{...} }
type GetTenantsTenantArrayInput interface {
	pulumi.Input

	ToGetTenantsTenantArrayOutput() GetTenantsTenantArrayOutput
	ToGetTenantsTenantArrayOutputWithContext(context.Context) GetTenantsTenantArrayOutput
}

type GetTenantsTenantArray []GetTenantsTenantInput

func (GetTenantsTenantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTenantsTenant)(nil)).Elem()
}

func (i GetTenantsTenantArray) ToGetTenantsTenantArrayOutput() GetTenantsTenantArrayOutput {
	return i.ToGetTenantsTenantArrayOutputWithContext(context.Background())
}

func (i GetTenantsTenantArray) ToGetTenantsTenantArrayOutputWithContext(ctx context.Context) GetTenantsTenantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTenantsTenantArrayOutput)
}

type GetTenantsTenantOutput struct{ *pulumi.OutputState }

func (GetTenantsTenantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTenantsTenant)(nil)).Elem()
}

func (o GetTenantsTenantOutput) ToGetTenantsTenantOutput() GetTenantsTenantOutput {
	return o
}

func (o GetTenantsTenantOutput) ToGetTenantsTenantOutputWithContext(ctx context.Context) GetTenantsTenantOutput {
	return o
}

// The ID of the tenant from which this tenant was cloned.
func (o GetTenantsTenantOutput) ClonedFromTenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsTenant) string { return v.ClonedFromTenantId }).(pulumi.StringOutput)
}

// The description of this tenants.
func (o GetTenantsTenantOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsTenant) string { return v.Description }).(pulumi.StringOutput)
}

// The unique ID for this resource.
func (o GetTenantsTenantOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsTenant) string { return v.Id }).(pulumi.StringOutput)
}

// The name of this resource.
func (o GetTenantsTenantOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsTenant) string { return v.Name }).(pulumi.StringOutput)
}

// The space ID associated with this tenant.
func (o GetTenantsTenantOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsTenant) string { return v.SpaceId }).(pulumi.StringOutput)
}

// A list of tenant tags associated with this resource.
func (o GetTenantsTenantOutput) TenantTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTenantsTenant) []string { return v.TenantTags }).(pulumi.StringArrayOutput)
}

type GetTenantsTenantArrayOutput struct{ *pulumi.OutputState }

func (GetTenantsTenantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTenantsTenant)(nil)).Elem()
}

func (o GetTenantsTenantArrayOutput) ToGetTenantsTenantArrayOutput() GetTenantsTenantArrayOutput {
	return o
}

func (o GetTenantsTenantArrayOutput) ToGetTenantsTenantArrayOutputWithContext(ctx context.Context) GetTenantsTenantArrayOutput {
	return o
}

func (o GetTenantsTenantArrayOutput) Index(i pulumi.IntInput) GetTenantsTenantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTenantsTenant {
		return vs[0].([]GetTenantsTenant)[vs[1].(int)]
	}).(GetTenantsTenantOutput)
}

type GetVariablesPrompt struct {
	// The description of this variable prompt option.
	Description     string                             `pulumi:"description"`
	DisplaySettings []GetVariablesPromptDisplaySetting `pulumi:"displaySettings"`
	IsRequired      bool                               `pulumi:"isRequired"`
	Label           string                             `pulumi:"label"`
}

// GetVariablesPromptInput is an input type that accepts GetVariablesPromptArgs and GetVariablesPromptOutput values.
// You can construct a concrete instance of `GetVariablesPromptInput` via:
//
//	GetVariablesPromptArgs{...}
type GetVariablesPromptInput interface {
	pulumi.Input

	ToGetVariablesPromptOutput() GetVariablesPromptOutput
	ToGetVariablesPromptOutputWithContext(context.Context) GetVariablesPromptOutput
}

type GetVariablesPromptArgs struct {
	// The description of this variable prompt option.
	Description     pulumi.StringInput                         `pulumi:"description"`
	DisplaySettings GetVariablesPromptDisplaySettingArrayInput `pulumi:"displaySettings"`
	IsRequired      pulumi.BoolInput                           `pulumi:"isRequired"`
	Label           pulumi.StringInput                         `pulumi:"label"`
}

func (GetVariablesPromptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVariablesPrompt)(nil)).Elem()
}

func (i GetVariablesPromptArgs) ToGetVariablesPromptOutput() GetVariablesPromptOutput {
	return i.ToGetVariablesPromptOutputWithContext(context.Background())
}

func (i GetVariablesPromptArgs) ToGetVariablesPromptOutputWithContext(ctx context.Context) GetVariablesPromptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVariablesPromptOutput)
}

// GetVariablesPromptArrayInput is an input type that accepts GetVariablesPromptArray and GetVariablesPromptArrayOutput values.
// You can construct a concrete instance of `GetVariablesPromptArrayInput` via:
//
//	GetVariablesPromptArray{ GetVariablesPromptArgs{...} }
type GetVariablesPromptArrayInput interface {
	pulumi.Input

	ToGetVariablesPromptArrayOutput() GetVariablesPromptArrayOutput
	ToGetVariablesPromptArrayOutputWithContext(context.Context) GetVariablesPromptArrayOutput
}

type GetVariablesPromptArray []GetVariablesPromptInput

func (GetVariablesPromptArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVariablesPrompt)(nil)).Elem()
}

func (i GetVariablesPromptArray) ToGetVariablesPromptArrayOutput() GetVariablesPromptArrayOutput {
	return i.ToGetVariablesPromptArrayOutputWithContext(context.Background())
}

func (i GetVariablesPromptArray) ToGetVariablesPromptArrayOutputWithContext(ctx context.Context) GetVariablesPromptArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVariablesPromptArrayOutput)
}

type GetVariablesPromptOutput struct{ *pulumi.OutputState }

func (GetVariablesPromptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVariablesPrompt)(nil)).Elem()
}

func (o GetVariablesPromptOutput) ToGetVariablesPromptOutput() GetVariablesPromptOutput {
	return o
}

func (o GetVariablesPromptOutput) ToGetVariablesPromptOutputWithContext(ctx context.Context) GetVariablesPromptOutput {
	return o
}

// The description of this variable prompt option.
func (o GetVariablesPromptOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetVariablesPrompt) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetVariablesPromptOutput) DisplaySettings() GetVariablesPromptDisplaySettingArrayOutput {
	return o.ApplyT(func(v GetVariablesPrompt) []GetVariablesPromptDisplaySetting { return v.DisplaySettings }).(GetVariablesPromptDisplaySettingArrayOutput)
}

func (o GetVariablesPromptOutput) IsRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVariablesPrompt) bool { return v.IsRequired }).(pulumi.BoolOutput)
}

func (o GetVariablesPromptOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetVariablesPrompt) string { return v.Label }).(pulumi.StringOutput)
}

type GetVariablesPromptArrayOutput struct{ *pulumi.OutputState }

func (GetVariablesPromptArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVariablesPrompt)(nil)).Elem()
}

func (o GetVariablesPromptArrayOutput) ToGetVariablesPromptArrayOutput() GetVariablesPromptArrayOutput {
	return o
}

func (o GetVariablesPromptArrayOutput) ToGetVariablesPromptArrayOutputWithContext(ctx context.Context) GetVariablesPromptArrayOutput {
	return o
}

func (o GetVariablesPromptArrayOutput) Index(i pulumi.IntInput) GetVariablesPromptOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVariablesPrompt {
		return vs[0].([]GetVariablesPrompt)[vs[1].(int)]
	}).(GetVariablesPromptOutput)
}

type GetVariablesPromptDisplaySetting struct {
	// The type of control for rendering this prompted variable. Valid types are `SingleLineText`, `MultiLineText`, `Checkbox`, `Select`.
	ControlType string `pulumi:"controlType"`
	// If the `controlType` is `Select`, then this value defines an option.
	SelectOptions []GetVariablesPromptDisplaySettingSelectOption `pulumi:"selectOptions"`
}

// GetVariablesPromptDisplaySettingInput is an input type that accepts GetVariablesPromptDisplaySettingArgs and GetVariablesPromptDisplaySettingOutput values.
// You can construct a concrete instance of `GetVariablesPromptDisplaySettingInput` via:
//
//	GetVariablesPromptDisplaySettingArgs{...}
type GetVariablesPromptDisplaySettingInput interface {
	pulumi.Input

	ToGetVariablesPromptDisplaySettingOutput() GetVariablesPromptDisplaySettingOutput
	ToGetVariablesPromptDisplaySettingOutputWithContext(context.Context) GetVariablesPromptDisplaySettingOutput
}

type GetVariablesPromptDisplaySettingArgs struct {
	// The type of control for rendering this prompted variable. Valid types are `SingleLineText`, `MultiLineText`, `Checkbox`, `Select`.
	ControlType pulumi.StringInput `pulumi:"controlType"`
	// If the `controlType` is `Select`, then this value defines an option.
	SelectOptions GetVariablesPromptDisplaySettingSelectOptionArrayInput `pulumi:"selectOptions"`
}

func (GetVariablesPromptDisplaySettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVariablesPromptDisplaySetting)(nil)).Elem()
}

func (i GetVariablesPromptDisplaySettingArgs) ToGetVariablesPromptDisplaySettingOutput() GetVariablesPromptDisplaySettingOutput {
	return i.ToGetVariablesPromptDisplaySettingOutputWithContext(context.Background())
}

func (i GetVariablesPromptDisplaySettingArgs) ToGetVariablesPromptDisplaySettingOutputWithContext(ctx context.Context) GetVariablesPromptDisplaySettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVariablesPromptDisplaySettingOutput)
}

// GetVariablesPromptDisplaySettingArrayInput is an input type that accepts GetVariablesPromptDisplaySettingArray and GetVariablesPromptDisplaySettingArrayOutput values.
// You can construct a concrete instance of `GetVariablesPromptDisplaySettingArrayInput` via:
//
//	GetVariablesPromptDisplaySettingArray{ GetVariablesPromptDisplaySettingArgs{...} }
type GetVariablesPromptDisplaySettingArrayInput interface {
	pulumi.Input

	ToGetVariablesPromptDisplaySettingArrayOutput() GetVariablesPromptDisplaySettingArrayOutput
	ToGetVariablesPromptDisplaySettingArrayOutputWithContext(context.Context) GetVariablesPromptDisplaySettingArrayOutput
}

type GetVariablesPromptDisplaySettingArray []GetVariablesPromptDisplaySettingInput

func (GetVariablesPromptDisplaySettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVariablesPromptDisplaySetting)(nil)).Elem()
}

func (i GetVariablesPromptDisplaySettingArray) ToGetVariablesPromptDisplaySettingArrayOutput() GetVariablesPromptDisplaySettingArrayOutput {
	return i.ToGetVariablesPromptDisplaySettingArrayOutputWithContext(context.Background())
}

func (i GetVariablesPromptDisplaySettingArray) ToGetVariablesPromptDisplaySettingArrayOutputWithContext(ctx context.Context) GetVariablesPromptDisplaySettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVariablesPromptDisplaySettingArrayOutput)
}

type GetVariablesPromptDisplaySettingOutput struct{ *pulumi.OutputState }

func (GetVariablesPromptDisplaySettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVariablesPromptDisplaySetting)(nil)).Elem()
}

func (o GetVariablesPromptDisplaySettingOutput) ToGetVariablesPromptDisplaySettingOutput() GetVariablesPromptDisplaySettingOutput {
	return o
}

func (o GetVariablesPromptDisplaySettingOutput) ToGetVariablesPromptDisplaySettingOutputWithContext(ctx context.Context) GetVariablesPromptDisplaySettingOutput {
	return o
}

// The type of control for rendering this prompted variable. Valid types are `SingleLineText`, `MultiLineText`, `Checkbox`, `Select`.
func (o GetVariablesPromptDisplaySettingOutput) ControlType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVariablesPromptDisplaySetting) string { return v.ControlType }).(pulumi.StringOutput)
}

// If the `controlType` is `Select`, then this value defines an option.
func (o GetVariablesPromptDisplaySettingOutput) SelectOptions() GetVariablesPromptDisplaySettingSelectOptionArrayOutput {
	return o.ApplyT(func(v GetVariablesPromptDisplaySetting) []GetVariablesPromptDisplaySettingSelectOption {
		return v.SelectOptions
	}).(GetVariablesPromptDisplaySettingSelectOptionArrayOutput)
}

type GetVariablesPromptDisplaySettingArrayOutput struct{ *pulumi.OutputState }

func (GetVariablesPromptDisplaySettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVariablesPromptDisplaySetting)(nil)).Elem()
}

func (o GetVariablesPromptDisplaySettingArrayOutput) ToGetVariablesPromptDisplaySettingArrayOutput() GetVariablesPromptDisplaySettingArrayOutput {
	return o
}

func (o GetVariablesPromptDisplaySettingArrayOutput) ToGetVariablesPromptDisplaySettingArrayOutputWithContext(ctx context.Context) GetVariablesPromptDisplaySettingArrayOutput {
	return o
}

func (o GetVariablesPromptDisplaySettingArrayOutput) Index(i pulumi.IntInput) GetVariablesPromptDisplaySettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVariablesPromptDisplaySetting {
		return vs[0].([]GetVariablesPromptDisplaySetting)[vs[1].(int)]
	}).(GetVariablesPromptDisplaySettingOutput)
}

type GetVariablesPromptDisplaySettingSelectOption struct {
	// The display name for the select value
	DisplayName string `pulumi:"displayName"`
	// The select value
	Value string `pulumi:"value"`
}

// GetVariablesPromptDisplaySettingSelectOptionInput is an input type that accepts GetVariablesPromptDisplaySettingSelectOptionArgs and GetVariablesPromptDisplaySettingSelectOptionOutput values.
// You can construct a concrete instance of `GetVariablesPromptDisplaySettingSelectOptionInput` via:
//
//	GetVariablesPromptDisplaySettingSelectOptionArgs{...}
type GetVariablesPromptDisplaySettingSelectOptionInput interface {
	pulumi.Input

	ToGetVariablesPromptDisplaySettingSelectOptionOutput() GetVariablesPromptDisplaySettingSelectOptionOutput
	ToGetVariablesPromptDisplaySettingSelectOptionOutputWithContext(context.Context) GetVariablesPromptDisplaySettingSelectOptionOutput
}

type GetVariablesPromptDisplaySettingSelectOptionArgs struct {
	// The display name for the select value
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The select value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVariablesPromptDisplaySettingSelectOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVariablesPromptDisplaySettingSelectOption)(nil)).Elem()
}

func (i GetVariablesPromptDisplaySettingSelectOptionArgs) ToGetVariablesPromptDisplaySettingSelectOptionOutput() GetVariablesPromptDisplaySettingSelectOptionOutput {
	return i.ToGetVariablesPromptDisplaySettingSelectOptionOutputWithContext(context.Background())
}

func (i GetVariablesPromptDisplaySettingSelectOptionArgs) ToGetVariablesPromptDisplaySettingSelectOptionOutputWithContext(ctx context.Context) GetVariablesPromptDisplaySettingSelectOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVariablesPromptDisplaySettingSelectOptionOutput)
}

// GetVariablesPromptDisplaySettingSelectOptionArrayInput is an input type that accepts GetVariablesPromptDisplaySettingSelectOptionArray and GetVariablesPromptDisplaySettingSelectOptionArrayOutput values.
// You can construct a concrete instance of `GetVariablesPromptDisplaySettingSelectOptionArrayInput` via:
//
//	GetVariablesPromptDisplaySettingSelectOptionArray{ GetVariablesPromptDisplaySettingSelectOptionArgs{...} }
type GetVariablesPromptDisplaySettingSelectOptionArrayInput interface {
	pulumi.Input

	ToGetVariablesPromptDisplaySettingSelectOptionArrayOutput() GetVariablesPromptDisplaySettingSelectOptionArrayOutput
	ToGetVariablesPromptDisplaySettingSelectOptionArrayOutputWithContext(context.Context) GetVariablesPromptDisplaySettingSelectOptionArrayOutput
}

type GetVariablesPromptDisplaySettingSelectOptionArray []GetVariablesPromptDisplaySettingSelectOptionInput

func (GetVariablesPromptDisplaySettingSelectOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVariablesPromptDisplaySettingSelectOption)(nil)).Elem()
}

func (i GetVariablesPromptDisplaySettingSelectOptionArray) ToGetVariablesPromptDisplaySettingSelectOptionArrayOutput() GetVariablesPromptDisplaySettingSelectOptionArrayOutput {
	return i.ToGetVariablesPromptDisplaySettingSelectOptionArrayOutputWithContext(context.Background())
}

func (i GetVariablesPromptDisplaySettingSelectOptionArray) ToGetVariablesPromptDisplaySettingSelectOptionArrayOutputWithContext(ctx context.Context) GetVariablesPromptDisplaySettingSelectOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVariablesPromptDisplaySettingSelectOptionArrayOutput)
}

type GetVariablesPromptDisplaySettingSelectOptionOutput struct{ *pulumi.OutputState }

func (GetVariablesPromptDisplaySettingSelectOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVariablesPromptDisplaySettingSelectOption)(nil)).Elem()
}

func (o GetVariablesPromptDisplaySettingSelectOptionOutput) ToGetVariablesPromptDisplaySettingSelectOptionOutput() GetVariablesPromptDisplaySettingSelectOptionOutput {
	return o
}

func (o GetVariablesPromptDisplaySettingSelectOptionOutput) ToGetVariablesPromptDisplaySettingSelectOptionOutputWithContext(ctx context.Context) GetVariablesPromptDisplaySettingSelectOptionOutput {
	return o
}

// The display name for the select value
func (o GetVariablesPromptDisplaySettingSelectOptionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVariablesPromptDisplaySettingSelectOption) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The select value
func (o GetVariablesPromptDisplaySettingSelectOptionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVariablesPromptDisplaySettingSelectOption) string { return v.Value }).(pulumi.StringOutput)
}

type GetVariablesPromptDisplaySettingSelectOptionArrayOutput struct{ *pulumi.OutputState }

func (GetVariablesPromptDisplaySettingSelectOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVariablesPromptDisplaySettingSelectOption)(nil)).Elem()
}

func (o GetVariablesPromptDisplaySettingSelectOptionArrayOutput) ToGetVariablesPromptDisplaySettingSelectOptionArrayOutput() GetVariablesPromptDisplaySettingSelectOptionArrayOutput {
	return o
}

func (o GetVariablesPromptDisplaySettingSelectOptionArrayOutput) ToGetVariablesPromptDisplaySettingSelectOptionArrayOutputWithContext(ctx context.Context) GetVariablesPromptDisplaySettingSelectOptionArrayOutput {
	return o
}

func (o GetVariablesPromptDisplaySettingSelectOptionArrayOutput) Index(i pulumi.IntInput) GetVariablesPromptDisplaySettingSelectOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVariablesPromptDisplaySettingSelectOption {
		return vs[0].([]GetVariablesPromptDisplaySettingSelectOption)[vs[1].(int)]
	}).(GetVariablesPromptDisplaySettingSelectOptionOutput)
}

type GetVariablesScope struct {
	// A list of actions that are scoped to this variable value.
	Actions []string `pulumi:"actions"`
	// A list of channels that are scoped to this variable value.
	Channels []string `pulumi:"channels"`
	// A list of environments that are scoped to this variable value.
	Environments []string `pulumi:"environments"`
	// A list of machines that are scoped to this variable value.
	Machines []string `pulumi:"machines"`
	// A list of processes that are scoped to this variable value.
	Processes []string `pulumi:"processes"`
	// A list of roles that are scoped to this variable value.
	Roles []string `pulumi:"roles"`
	// A list of tenant tags that are scoped to this variable value.
	TenantTags []string `pulumi:"tenantTags"`
}

// GetVariablesScopeInput is an input type that accepts GetVariablesScopeArgs and GetVariablesScopeOutput values.
// You can construct a concrete instance of `GetVariablesScopeInput` via:
//
//	GetVariablesScopeArgs{...}
type GetVariablesScopeInput interface {
	pulumi.Input

	ToGetVariablesScopeOutput() GetVariablesScopeOutput
	ToGetVariablesScopeOutputWithContext(context.Context) GetVariablesScopeOutput
}

type GetVariablesScopeArgs struct {
	// A list of actions that are scoped to this variable value.
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// A list of channels that are scoped to this variable value.
	Channels pulumi.StringArrayInput `pulumi:"channels"`
	// A list of environments that are scoped to this variable value.
	Environments pulumi.StringArrayInput `pulumi:"environments"`
	// A list of machines that are scoped to this variable value.
	Machines pulumi.StringArrayInput `pulumi:"machines"`
	// A list of processes that are scoped to this variable value.
	Processes pulumi.StringArrayInput `pulumi:"processes"`
	// A list of roles that are scoped to this variable value.
	Roles pulumi.StringArrayInput `pulumi:"roles"`
	// A list of tenant tags that are scoped to this variable value.
	TenantTags pulumi.StringArrayInput `pulumi:"tenantTags"`
}

func (GetVariablesScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVariablesScope)(nil)).Elem()
}

func (i GetVariablesScopeArgs) ToGetVariablesScopeOutput() GetVariablesScopeOutput {
	return i.ToGetVariablesScopeOutputWithContext(context.Background())
}

func (i GetVariablesScopeArgs) ToGetVariablesScopeOutputWithContext(ctx context.Context) GetVariablesScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVariablesScopeOutput)
}

// GetVariablesScopeArrayInput is an input type that accepts GetVariablesScopeArray and GetVariablesScopeArrayOutput values.
// You can construct a concrete instance of `GetVariablesScopeArrayInput` via:
//
//	GetVariablesScopeArray{ GetVariablesScopeArgs{...} }
type GetVariablesScopeArrayInput interface {
	pulumi.Input

	ToGetVariablesScopeArrayOutput() GetVariablesScopeArrayOutput
	ToGetVariablesScopeArrayOutputWithContext(context.Context) GetVariablesScopeArrayOutput
}

type GetVariablesScopeArray []GetVariablesScopeInput

func (GetVariablesScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVariablesScope)(nil)).Elem()
}

func (i GetVariablesScopeArray) ToGetVariablesScopeArrayOutput() GetVariablesScopeArrayOutput {
	return i.ToGetVariablesScopeArrayOutputWithContext(context.Background())
}

func (i GetVariablesScopeArray) ToGetVariablesScopeArrayOutputWithContext(ctx context.Context) GetVariablesScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVariablesScopeArrayOutput)
}

type GetVariablesScopeOutput struct{ *pulumi.OutputState }

func (GetVariablesScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVariablesScope)(nil)).Elem()
}

func (o GetVariablesScopeOutput) ToGetVariablesScopeOutput() GetVariablesScopeOutput {
	return o
}

func (o GetVariablesScopeOutput) ToGetVariablesScopeOutputWithContext(ctx context.Context) GetVariablesScopeOutput {
	return o
}

// A list of actions that are scoped to this variable value.
func (o GetVariablesScopeOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVariablesScope) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// A list of channels that are scoped to this variable value.
func (o GetVariablesScopeOutput) Channels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVariablesScope) []string { return v.Channels }).(pulumi.StringArrayOutput)
}

// A list of environments that are scoped to this variable value.
func (o GetVariablesScopeOutput) Environments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVariablesScope) []string { return v.Environments }).(pulumi.StringArrayOutput)
}

// A list of machines that are scoped to this variable value.
func (o GetVariablesScopeOutput) Machines() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVariablesScope) []string { return v.Machines }).(pulumi.StringArrayOutput)
}

// A list of processes that are scoped to this variable value.
func (o GetVariablesScopeOutput) Processes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVariablesScope) []string { return v.Processes }).(pulumi.StringArrayOutput)
}

// A list of roles that are scoped to this variable value.
func (o GetVariablesScopeOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVariablesScope) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

// A list of tenant tags that are scoped to this variable value.
func (o GetVariablesScopeOutput) TenantTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVariablesScope) []string { return v.TenantTags }).(pulumi.StringArrayOutput)
}

type GetVariablesScopeArrayOutput struct{ *pulumi.OutputState }

func (GetVariablesScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVariablesScope)(nil)).Elem()
}

func (o GetVariablesScopeArrayOutput) ToGetVariablesScopeArrayOutput() GetVariablesScopeArrayOutput {
	return o
}

func (o GetVariablesScopeArrayOutput) ToGetVariablesScopeArrayOutputWithContext(ctx context.Context) GetVariablesScopeArrayOutput {
	return o
}

func (o GetVariablesScopeArrayOutput) Index(i pulumi.IntInput) GetVariablesScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVariablesScope {
		return vs[0].([]GetVariablesScope)[vs[1].(int)]
	}).(GetVariablesScopeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentJiraExtensionSettingInput)(nil)).Elem(), EnvironmentJiraExtensionSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentJiraExtensionSettingArrayInput)(nil)).Elem(), EnvironmentJiraExtensionSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentJiraServiceManagementExtensionSettingInput)(nil)).Elem(), EnvironmentJiraServiceManagementExtensionSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentJiraServiceManagementExtensionSettingArrayInput)(nil)).Elem(), EnvironmentJiraServiceManagementExtensionSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentServicenowExtensionSettingInput)(nil)).Elem(), EnvironmentServicenowExtensionSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentServicenowExtensionSettingArrayInput)(nil)).Elem(), EnvironmentServicenowExtensionSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LibraryVariableSetTemplateInput)(nil)).Elem(), LibraryVariableSetTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LibraryVariableSetTemplateArrayInput)(nil)).Elem(), LibraryVariableSetTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePhaseInput)(nil)).Elem(), LifecyclePhaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePhaseArrayInput)(nil)).Elem(), LifecyclePhaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePhaseReleaseRetentionPolicyInput)(nil)).Elem(), LifecyclePhaseReleaseRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePhaseReleaseRetentionPolicyArrayInput)(nil)).Elem(), LifecyclePhaseReleaseRetentionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePhaseTentacleRetentionPolicyInput)(nil)).Elem(), LifecyclePhaseTentacleRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePhaseTentacleRetentionPolicyArrayInput)(nil)).Elem(), LifecyclePhaseTentacleRetentionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecycleReleaseRetentionPolicyInput)(nil)).Elem(), LifecycleReleaseRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecycleReleaseRetentionPolicyArrayInput)(nil)).Elem(), LifecycleReleaseRetentionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecycleTentacleRetentionPolicyInput)(nil)).Elem(), LifecycleTentacleRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecycleTentacleRetentionPolicyArrayInput)(nil)).Elem(), LifecycleTentacleRetentionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAutoDeployReleaseOverrideInput)(nil)).Elem(), ProjectAutoDeployReleaseOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAutoDeployReleaseOverrideArrayInput)(nil)).Elem(), ProjectAutoDeployReleaseOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConnectivityPolicyInput)(nil)).Elem(), ProjectConnectivityPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectConnectivityPolicyArrayInput)(nil)).Elem(), ProjectConnectivityPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectGitAnonymousPersistenceSettingInput)(nil)).Elem(), ProjectGitAnonymousPersistenceSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectGitAnonymousPersistenceSettingArrayInput)(nil)).Elem(), ProjectGitAnonymousPersistenceSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectGitLibraryPersistenceSettingInput)(nil)).Elem(), ProjectGitLibraryPersistenceSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectGitLibraryPersistenceSettingArrayInput)(nil)).Elem(), ProjectGitLibraryPersistenceSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectGitUsernamePasswordPersistenceSettingInput)(nil)).Elem(), ProjectGitUsernamePasswordPersistenceSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectGitUsernamePasswordPersistenceSettingArrayInput)(nil)).Elem(), ProjectGitUsernamePasswordPersistenceSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectJiraServiceManagementExtensionSettingInput)(nil)).Elem(), ProjectJiraServiceManagementExtensionSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectJiraServiceManagementExtensionSettingArrayInput)(nil)).Elem(), ProjectJiraServiceManagementExtensionSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectReleaseCreationStrategyInput)(nil)).Elem(), ProjectReleaseCreationStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectReleaseCreationStrategyArrayInput)(nil)).Elem(), ProjectReleaseCreationStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectReleaseCreationStrategyReleaseCreationPackageInput)(nil)).Elem(), ProjectReleaseCreationStrategyReleaseCreationPackageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectReleaseCreationStrategyReleaseCreationPackageArrayInput)(nil)).Elem(), ProjectReleaseCreationStrategyReleaseCreationPackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectServicenowExtensionSettingInput)(nil)).Elem(), ProjectServicenowExtensionSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectServicenowExtensionSettingArrayInput)(nil)).Elem(), ProjectServicenowExtensionSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTemplateInput)(nil)).Elem(), ProjectTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTemplateArrayInput)(nil)).Elem(), ProjectTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectVersioningStrategyInput)(nil)).Elem(), ProjectVersioningStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectVersioningStrategyArrayInput)(nil)).Elem(), ProjectVersioningStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectVersioningStrategyDonorPackageInput)(nil)).Elem(), ProjectVersioningStrategyDonorPackageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectVersioningStrategyDonorPackageArrayInput)(nil)).Elem(), ProjectVersioningStrategyDonorPackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RunbookConnectivityPolicyInput)(nil)).Elem(), RunbookConnectivityPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RunbookConnectivityPolicyPtrInput)(nil)).Elem(), RunbookConnectivityPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RunbookRetentionPolicyInput)(nil)).Elem(), RunbookRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RunbookRetentionPolicyPtrInput)(nil)).Elem(), RunbookRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScriptModuleScriptInput)(nil)).Elem(), ScriptModuleScriptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScriptModuleScriptPtrInput)(nil)).Elem(), ScriptModuleScriptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VariablePromptInput)(nil)).Elem(), VariablePromptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VariablePromptPtrInput)(nil)).Elem(), VariablePromptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VariablePromptDisplaySettingsInput)(nil)).Elem(), VariablePromptDisplaySettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VariablePromptDisplaySettingsPtrInput)(nil)).Elem(), VariablePromptDisplaySettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VariablePromptDisplaySettingsSelectOptionInput)(nil)).Elem(), VariablePromptDisplaySettingsSelectOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VariablePromptDisplaySettingsSelectOptionArrayInput)(nil)).Elem(), VariablePromptDisplaySettingsSelectOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VariableScopeInput)(nil)).Elem(), VariableScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VariableScopePtrInput)(nil)).Elem(), VariableScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentsEnvironmentInput)(nil)).Elem(), GetEnvironmentsEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentsEnvironmentArrayInput)(nil)).Elem(), GetEnvironmentsEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentsEnvironmentJiraExtensionSettingInput)(nil)).Elem(), GetEnvironmentsEnvironmentJiraExtensionSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentsEnvironmentJiraExtensionSettingArrayInput)(nil)).Elem(), GetEnvironmentsEnvironmentJiraExtensionSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingInput)(nil)).Elem(), GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayInput)(nil)).Elem(), GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentsEnvironmentServicenowExtensionSettingInput)(nil)).Elem(), GetEnvironmentsEnvironmentServicenowExtensionSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentsEnvironmentServicenowExtensionSettingArrayInput)(nil)).Elem(), GetEnvironmentsEnvironmentServicenowExtensionSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFeedsFeedInput)(nil)).Elem(), GetFeedsFeedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFeedsFeedArrayInput)(nil)).Elem(), GetFeedsFeedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitCredentialsGitCredentialInput)(nil)).Elem(), GetGitCredentialsGitCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitCredentialsGitCredentialArrayInput)(nil)).Elem(), GetGitCredentialsGitCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLibraryVariableSetsLibraryVariableSetInput)(nil)).Elem(), GetLibraryVariableSetsLibraryVariableSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLibraryVariableSetsLibraryVariableSetArrayInput)(nil)).Elem(), GetLibraryVariableSetsLibraryVariableSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLibraryVariableSetsLibraryVariableSetTemplateInput)(nil)).Elem(), GetLibraryVariableSetsLibraryVariableSetTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLibraryVariableSetsLibraryVariableSetTemplateArrayInput)(nil)).Elem(), GetLibraryVariableSetsLibraryVariableSetTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecyclesLifecycleInput)(nil)).Elem(), GetLifecyclesLifecycleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecyclesLifecycleArrayInput)(nil)).Elem(), GetLifecyclesLifecycleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecyclesLifecyclePhaseInput)(nil)).Elem(), GetLifecyclesLifecyclePhaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecyclesLifecyclePhaseArrayInput)(nil)).Elem(), GetLifecyclesLifecyclePhaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecyclesLifecyclePhaseReleaseRetentionPolicyInput)(nil)).Elem(), GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayInput)(nil)).Elem(), GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecyclesLifecyclePhaseTentacleRetentionPolicyInput)(nil)).Elem(), GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayInput)(nil)).Elem(), GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecyclesLifecycleReleaseRetentionPolicyInput)(nil)).Elem(), GetLifecyclesLifecycleReleaseRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecyclesLifecycleReleaseRetentionPolicyArrayInput)(nil)).Elem(), GetLifecyclesLifecycleReleaseRetentionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecyclesLifecycleTentacleRetentionPolicyInput)(nil)).Elem(), GetLifecyclesLifecycleTentacleRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecyclesLifecycleTentacleRetentionPolicyArrayInput)(nil)).Elem(), GetLifecyclesLifecycleTentacleRetentionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectGroupsProjectGroupInput)(nil)).Elem(), GetProjectGroupsProjectGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectGroupsProjectGroupArrayInput)(nil)).Elem(), GetProjectGroupsProjectGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectInput)(nil)).Elem(), GetProjectsProjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectArrayInput)(nil)).Elem(), GetProjectsProjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectAutoDeployReleaseOverrideInput)(nil)).Elem(), GetProjectsProjectAutoDeployReleaseOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectAutoDeployReleaseOverrideArrayInput)(nil)).Elem(), GetProjectsProjectAutoDeployReleaseOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectConnectivityPolicyInput)(nil)).Elem(), GetProjectsProjectConnectivityPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectConnectivityPolicyArrayInput)(nil)).Elem(), GetProjectsProjectConnectivityPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectGitAnonymousPersistenceSettingInput)(nil)).Elem(), GetProjectsProjectGitAnonymousPersistenceSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectGitAnonymousPersistenceSettingArrayInput)(nil)).Elem(), GetProjectsProjectGitAnonymousPersistenceSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectGitLibraryPersistenceSettingInput)(nil)).Elem(), GetProjectsProjectGitLibraryPersistenceSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectGitLibraryPersistenceSettingArrayInput)(nil)).Elem(), GetProjectsProjectGitLibraryPersistenceSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectGitUsernamePasswordPersistenceSettingInput)(nil)).Elem(), GetProjectsProjectGitUsernamePasswordPersistenceSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectGitUsernamePasswordPersistenceSettingArrayInput)(nil)).Elem(), GetProjectsProjectGitUsernamePasswordPersistenceSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectJiraServiceManagementExtensionSettingInput)(nil)).Elem(), GetProjectsProjectJiraServiceManagementExtensionSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectJiraServiceManagementExtensionSettingArrayInput)(nil)).Elem(), GetProjectsProjectJiraServiceManagementExtensionSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectReleaseCreationStrategyInput)(nil)).Elem(), GetProjectsProjectReleaseCreationStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectReleaseCreationStrategyArrayInput)(nil)).Elem(), GetProjectsProjectReleaseCreationStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageInput)(nil)).Elem(), GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayInput)(nil)).Elem(), GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectServicenowExtensionSettingInput)(nil)).Elem(), GetProjectsProjectServicenowExtensionSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectServicenowExtensionSettingArrayInput)(nil)).Elem(), GetProjectsProjectServicenowExtensionSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectTemplateInput)(nil)).Elem(), GetProjectsProjectTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectTemplateArrayInput)(nil)).Elem(), GetProjectsProjectTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectVersioningStrategyInput)(nil)).Elem(), GetProjectsProjectVersioningStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectVersioningStrategyArrayInput)(nil)).Elem(), GetProjectsProjectVersioningStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectVersioningStrategyDonorPackageInput)(nil)).Elem(), GetProjectsProjectVersioningStrategyDonorPackageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectVersioningStrategyDonorPackageArrayInput)(nil)).Elem(), GetProjectsProjectVersioningStrategyDonorPackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScriptModulesScriptModuleInput)(nil)).Elem(), GetScriptModulesScriptModuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScriptModulesScriptModuleArrayInput)(nil)).Elem(), GetScriptModulesScriptModuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScriptModulesScriptModuleScriptInput)(nil)).Elem(), GetScriptModulesScriptModuleScriptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScriptModulesScriptModuleScriptArrayInput)(nil)).Elem(), GetScriptModulesScriptModuleScriptArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSpacesSpaceInput)(nil)).Elem(), GetSpacesSpaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSpacesSpaceArrayInput)(nil)).Elem(), GetSpacesSpaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagSetsTagSetInput)(nil)).Elem(), GetTagSetsTagSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagSetsTagSetArrayInput)(nil)).Elem(), GetTagSetsTagSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTenantProjectsTenantProjectInput)(nil)).Elem(), GetTenantProjectsTenantProjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTenantProjectsTenantProjectArrayInput)(nil)).Elem(), GetTenantProjectsTenantProjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTenantsTenantInput)(nil)).Elem(), GetTenantsTenantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTenantsTenantArrayInput)(nil)).Elem(), GetTenantsTenantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVariablesPromptInput)(nil)).Elem(), GetVariablesPromptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVariablesPromptArrayInput)(nil)).Elem(), GetVariablesPromptArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVariablesPromptDisplaySettingInput)(nil)).Elem(), GetVariablesPromptDisplaySettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVariablesPromptDisplaySettingArrayInput)(nil)).Elem(), GetVariablesPromptDisplaySettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVariablesPromptDisplaySettingSelectOptionInput)(nil)).Elem(), GetVariablesPromptDisplaySettingSelectOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVariablesPromptDisplaySettingSelectOptionArrayInput)(nil)).Elem(), GetVariablesPromptDisplaySettingSelectOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVariablesScopeInput)(nil)).Elem(), GetVariablesScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVariablesScopeArrayInput)(nil)).Elem(), GetVariablesScopeArray{})
	pulumi.RegisterOutputType(EnvironmentJiraExtensionSettingOutput{})
	pulumi.RegisterOutputType(EnvironmentJiraExtensionSettingArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentJiraServiceManagementExtensionSettingOutput{})
	pulumi.RegisterOutputType(EnvironmentJiraServiceManagementExtensionSettingArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentServicenowExtensionSettingOutput{})
	pulumi.RegisterOutputType(EnvironmentServicenowExtensionSettingArrayOutput{})
	pulumi.RegisterOutputType(LibraryVariableSetTemplateOutput{})
	pulumi.RegisterOutputType(LibraryVariableSetTemplateArrayOutput{})
	pulumi.RegisterOutputType(LifecyclePhaseOutput{})
	pulumi.RegisterOutputType(LifecyclePhaseArrayOutput{})
	pulumi.RegisterOutputType(LifecyclePhaseReleaseRetentionPolicyOutput{})
	pulumi.RegisterOutputType(LifecyclePhaseReleaseRetentionPolicyArrayOutput{})
	pulumi.RegisterOutputType(LifecyclePhaseTentacleRetentionPolicyOutput{})
	pulumi.RegisterOutputType(LifecyclePhaseTentacleRetentionPolicyArrayOutput{})
	pulumi.RegisterOutputType(LifecycleReleaseRetentionPolicyOutput{})
	pulumi.RegisterOutputType(LifecycleReleaseRetentionPolicyArrayOutput{})
	pulumi.RegisterOutputType(LifecycleTentacleRetentionPolicyOutput{})
	pulumi.RegisterOutputType(LifecycleTentacleRetentionPolicyArrayOutput{})
	pulumi.RegisterOutputType(ProjectAutoDeployReleaseOverrideOutput{})
	pulumi.RegisterOutputType(ProjectAutoDeployReleaseOverrideArrayOutput{})
	pulumi.RegisterOutputType(ProjectConnectivityPolicyOutput{})
	pulumi.RegisterOutputType(ProjectConnectivityPolicyArrayOutput{})
	pulumi.RegisterOutputType(ProjectGitAnonymousPersistenceSettingOutput{})
	pulumi.RegisterOutputType(ProjectGitAnonymousPersistenceSettingArrayOutput{})
	pulumi.RegisterOutputType(ProjectGitLibraryPersistenceSettingOutput{})
	pulumi.RegisterOutputType(ProjectGitLibraryPersistenceSettingArrayOutput{})
	pulumi.RegisterOutputType(ProjectGitUsernamePasswordPersistenceSettingOutput{})
	pulumi.RegisterOutputType(ProjectGitUsernamePasswordPersistenceSettingArrayOutput{})
	pulumi.RegisterOutputType(ProjectJiraServiceManagementExtensionSettingOutput{})
	pulumi.RegisterOutputType(ProjectJiraServiceManagementExtensionSettingArrayOutput{})
	pulumi.RegisterOutputType(ProjectReleaseCreationStrategyOutput{})
	pulumi.RegisterOutputType(ProjectReleaseCreationStrategyArrayOutput{})
	pulumi.RegisterOutputType(ProjectReleaseCreationStrategyReleaseCreationPackageOutput{})
	pulumi.RegisterOutputType(ProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput{})
	pulumi.RegisterOutputType(ProjectServicenowExtensionSettingOutput{})
	pulumi.RegisterOutputType(ProjectServicenowExtensionSettingArrayOutput{})
	pulumi.RegisterOutputType(ProjectTemplateOutput{})
	pulumi.RegisterOutputType(ProjectTemplateArrayOutput{})
	pulumi.RegisterOutputType(ProjectVersioningStrategyOutput{})
	pulumi.RegisterOutputType(ProjectVersioningStrategyArrayOutput{})
	pulumi.RegisterOutputType(ProjectVersioningStrategyDonorPackageOutput{})
	pulumi.RegisterOutputType(ProjectVersioningStrategyDonorPackageArrayOutput{})
	pulumi.RegisterOutputType(RunbookConnectivityPolicyOutput{})
	pulumi.RegisterOutputType(RunbookConnectivityPolicyPtrOutput{})
	pulumi.RegisterOutputType(RunbookRetentionPolicyOutput{})
	pulumi.RegisterOutputType(RunbookRetentionPolicyPtrOutput{})
	pulumi.RegisterOutputType(ScriptModuleScriptOutput{})
	pulumi.RegisterOutputType(ScriptModuleScriptPtrOutput{})
	pulumi.RegisterOutputType(VariablePromptOutput{})
	pulumi.RegisterOutputType(VariablePromptPtrOutput{})
	pulumi.RegisterOutputType(VariablePromptDisplaySettingsOutput{})
	pulumi.RegisterOutputType(VariablePromptDisplaySettingsPtrOutput{})
	pulumi.RegisterOutputType(VariablePromptDisplaySettingsSelectOptionOutput{})
	pulumi.RegisterOutputType(VariablePromptDisplaySettingsSelectOptionArrayOutput{})
	pulumi.RegisterOutputType(VariableScopeOutput{})
	pulumi.RegisterOutputType(VariableScopePtrOutput{})
	pulumi.RegisterOutputType(GetEnvironmentsEnvironmentOutput{})
	pulumi.RegisterOutputType(GetEnvironmentsEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentsEnvironmentJiraExtensionSettingOutput{})
	pulumi.RegisterOutputType(GetEnvironmentsEnvironmentJiraExtensionSettingArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingOutput{})
	pulumi.RegisterOutputType(GetEnvironmentsEnvironmentJiraServiceManagementExtensionSettingArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentsEnvironmentServicenowExtensionSettingOutput{})
	pulumi.RegisterOutputType(GetEnvironmentsEnvironmentServicenowExtensionSettingArrayOutput{})
	pulumi.RegisterOutputType(GetFeedsFeedOutput{})
	pulumi.RegisterOutputType(GetFeedsFeedArrayOutput{})
	pulumi.RegisterOutputType(GetGitCredentialsGitCredentialOutput{})
	pulumi.RegisterOutputType(GetGitCredentialsGitCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetLibraryVariableSetsLibraryVariableSetOutput{})
	pulumi.RegisterOutputType(GetLibraryVariableSetsLibraryVariableSetArrayOutput{})
	pulumi.RegisterOutputType(GetLibraryVariableSetsLibraryVariableSetTemplateOutput{})
	pulumi.RegisterOutputType(GetLibraryVariableSetsLibraryVariableSetTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetLifecyclesLifecycleOutput{})
	pulumi.RegisterOutputType(GetLifecyclesLifecycleArrayOutput{})
	pulumi.RegisterOutputType(GetLifecyclesLifecyclePhaseOutput{})
	pulumi.RegisterOutputType(GetLifecyclesLifecyclePhaseArrayOutput{})
	pulumi.RegisterOutputType(GetLifecyclesLifecyclePhaseReleaseRetentionPolicyOutput{})
	pulumi.RegisterOutputType(GetLifecyclesLifecyclePhaseReleaseRetentionPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetLifecyclesLifecyclePhaseTentacleRetentionPolicyOutput{})
	pulumi.RegisterOutputType(GetLifecyclesLifecyclePhaseTentacleRetentionPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetLifecyclesLifecycleReleaseRetentionPolicyOutput{})
	pulumi.RegisterOutputType(GetLifecyclesLifecycleReleaseRetentionPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetLifecyclesLifecycleTentacleRetentionPolicyOutput{})
	pulumi.RegisterOutputType(GetLifecyclesLifecycleTentacleRetentionPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetProjectGroupsProjectGroupOutput{})
	pulumi.RegisterOutputType(GetProjectGroupsProjectGroupArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectAutoDeployReleaseOverrideOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectAutoDeployReleaseOverrideArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectConnectivityPolicyOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectConnectivityPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectGitAnonymousPersistenceSettingOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectGitAnonymousPersistenceSettingArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectGitLibraryPersistenceSettingOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectGitLibraryPersistenceSettingArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectGitUsernamePasswordPersistenceSettingOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectGitUsernamePasswordPersistenceSettingArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectJiraServiceManagementExtensionSettingOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectJiraServiceManagementExtensionSettingArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectReleaseCreationStrategyOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectReleaseCreationStrategyArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectReleaseCreationStrategyReleaseCreationPackageArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectServicenowExtensionSettingOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectServicenowExtensionSettingArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectTemplateOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectVersioningStrategyOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectVersioningStrategyArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectVersioningStrategyDonorPackageOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectVersioningStrategyDonorPackageArrayOutput{})
	pulumi.RegisterOutputType(GetScriptModulesScriptModuleOutput{})
	pulumi.RegisterOutputType(GetScriptModulesScriptModuleArrayOutput{})
	pulumi.RegisterOutputType(GetScriptModulesScriptModuleScriptOutput{})
	pulumi.RegisterOutputType(GetScriptModulesScriptModuleScriptArrayOutput{})
	pulumi.RegisterOutputType(GetSpacesSpaceOutput{})
	pulumi.RegisterOutputType(GetSpacesSpaceArrayOutput{})
	pulumi.RegisterOutputType(GetTagSetsTagSetOutput{})
	pulumi.RegisterOutputType(GetTagSetsTagSetArrayOutput{})
	pulumi.RegisterOutputType(GetTenantProjectsTenantProjectOutput{})
	pulumi.RegisterOutputType(GetTenantProjectsTenantProjectArrayOutput{})
	pulumi.RegisterOutputType(GetTenantsTenantOutput{})
	pulumi.RegisterOutputType(GetTenantsTenantArrayOutput{})
	pulumi.RegisterOutputType(GetVariablesPromptOutput{})
	pulumi.RegisterOutputType(GetVariablesPromptArrayOutput{})
	pulumi.RegisterOutputType(GetVariablesPromptDisplaySettingOutput{})
	pulumi.RegisterOutputType(GetVariablesPromptDisplaySettingArrayOutput{})
	pulumi.RegisterOutputType(GetVariablesPromptDisplaySettingSelectOptionOutput{})
	pulumi.RegisterOutputType(GetVariablesPromptDisplaySettingSelectOptionArrayOutput{})
	pulumi.RegisterOutputType(GetVariablesScopeOutput{})
	pulumi.RegisterOutputType(GetVariablesScopeArrayOutput{})
}
