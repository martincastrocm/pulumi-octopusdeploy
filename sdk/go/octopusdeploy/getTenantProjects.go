// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package octopusdeploy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about existing tenants.
func GetTenantProjects(ctx *pulumi.Context, args *GetTenantProjectsArgs, opts ...pulumi.InvokeOption) (*GetTenantProjectsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTenantProjectsResult
	err := ctx.Invoke("octopusdeploy:index/getTenantProjects:getTenantProjects", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTenantProjects.
type GetTenantProjectsArgs struct {
	// A filter to search by a list of IDs.
	EnvironmentIds []string `pulumi:"environmentIds"`
	// A filter to search by a list of IDs.
	ProjectIds []string `pulumi:"projectIds"`
	// The space ID associated with this tenant projects.
	SpaceId *string `pulumi:"spaceId"`
	// A filter to search by a list of IDs.
	TenantIds []string `pulumi:"tenantIds"`
}

// A collection of values returned by getTenantProjects.
type GetTenantProjectsResult struct {
	// A filter to search by a list of IDs.
	EnvironmentIds []string `pulumi:"environmentIds"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A filter to search by a list of IDs.
	ProjectIds []string `pulumi:"projectIds"`
	// The space ID associated with this tenant projects.
	SpaceId string `pulumi:"spaceId"`
	// A filter to search by a list of IDs.
	TenantIds []string `pulumi:"tenantIds"`
	// A list of related tenants, projects and environments that match the filter(s).
	TenantProjects []GetTenantProjectsTenantProject `pulumi:"tenantProjects"`
}

func GetTenantProjectsOutput(ctx *pulumi.Context, args GetTenantProjectsOutputArgs, opts ...pulumi.InvokeOption) GetTenantProjectsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTenantProjectsResultOutput, error) {
			args := v.(GetTenantProjectsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetTenantProjectsResult
			secret, err := ctx.InvokePackageRaw("octopusdeploy:index/getTenantProjects:getTenantProjects", args, &rv, "", opts...)
			if err != nil {
				return GetTenantProjectsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetTenantProjectsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetTenantProjectsResultOutput), nil
			}
			return output, nil
		}).(GetTenantProjectsResultOutput)
}

// A collection of arguments for invoking getTenantProjects.
type GetTenantProjectsOutputArgs struct {
	// A filter to search by a list of IDs.
	EnvironmentIds pulumi.StringArrayInput `pulumi:"environmentIds"`
	// A filter to search by a list of IDs.
	ProjectIds pulumi.StringArrayInput `pulumi:"projectIds"`
	// The space ID associated with this tenant projects.
	SpaceId pulumi.StringPtrInput `pulumi:"spaceId"`
	// A filter to search by a list of IDs.
	TenantIds pulumi.StringArrayInput `pulumi:"tenantIds"`
}

func (GetTenantProjectsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTenantProjectsArgs)(nil)).Elem()
}

// A collection of values returned by getTenantProjects.
type GetTenantProjectsResultOutput struct{ *pulumi.OutputState }

func (GetTenantProjectsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTenantProjectsResult)(nil)).Elem()
}

func (o GetTenantProjectsResultOutput) ToGetTenantProjectsResultOutput() GetTenantProjectsResultOutput {
	return o
}

func (o GetTenantProjectsResultOutput) ToGetTenantProjectsResultOutputWithContext(ctx context.Context) GetTenantProjectsResultOutput {
	return o
}

// A filter to search by a list of IDs.
func (o GetTenantProjectsResultOutput) EnvironmentIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTenantProjectsResult) []string { return v.EnvironmentIds }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetTenantProjectsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantProjectsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A filter to search by a list of IDs.
func (o GetTenantProjectsResultOutput) ProjectIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTenantProjectsResult) []string { return v.ProjectIds }).(pulumi.StringArrayOutput)
}

// The space ID associated with this tenant projects.
func (o GetTenantProjectsResultOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantProjectsResult) string { return v.SpaceId }).(pulumi.StringOutput)
}

// A filter to search by a list of IDs.
func (o GetTenantProjectsResultOutput) TenantIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTenantProjectsResult) []string { return v.TenantIds }).(pulumi.StringArrayOutput)
}

// A list of related tenants, projects and environments that match the filter(s).
func (o GetTenantProjectsResultOutput) TenantProjects() GetTenantProjectsTenantProjectArrayOutput {
	return o.ApplyT(func(v GetTenantProjectsResult) []GetTenantProjectsTenantProject { return v.TenantProjects }).(GetTenantProjectsTenantProjectArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTenantProjectsResultOutput{})
}
