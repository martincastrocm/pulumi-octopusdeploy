// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package octopusdeploy

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource manages variables in Octopus Deploy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// create an Amazon web services account variable
//			_, err := octopusdeploy.NewVariable(ctx, "amazonWebServicesAccountVariable", &octopusdeploy.VariableArgs{
//				OwnerId: pulumi.String("Projects-123"),
//				Type:    pulumi.String("AmazonWebServicesAccount"),
//				Value:   pulumi.String("Accounts-123"),
//			})
//			if err != nil {
//				return err
//			}
//			// create an Azure service principal account variable
//			_, err = octopusdeploy.NewVariable(ctx, "azureServicePrincipalAccountVariable", &octopusdeploy.VariableArgs{
//				OwnerId: pulumi.String("Projects-123"),
//				Type:    pulumi.String("AzureAccount"),
//				Value:   pulumi.String("Accounts-123"),
//			})
//			if err != nil {
//				return err
//			}
//			// create a Google Cloud account variable
//			_, err = octopusdeploy.NewVariable(ctx, "googleCloudAccountVariable", &octopusdeploy.VariableArgs{
//				OwnerId: pulumi.String("Projects-123"),
//				Type:    pulumi.String("GoogleCloudAccount"),
//				Value:   pulumi.String("Accounts-123"),
//			})
//			if err != nil {
//				return err
//			}
//			// Create a UsernamePassword account variable
//			_, err = octopusdeploy.NewVariable(ctx, "usernamepasswordAccountVariable", &octopusdeploy.VariableArgs{
//				OwnerId: pulumi.String("Projects-123"),
//				Type:    pulumi.String("UsernamePasswordAccount"),
//				Value:   pulumi.Any(octopusdeploy_username_password_account.Account_user_pass.Id),
//			})
//			if err != nil {
//				return err
//			}
//			// create a Certificate variable
//			_, err = octopusdeploy.NewVariable(ctx, "certificateVariable", &octopusdeploy.VariableArgs{
//				OwnerId: pulumi.String("Projects-123"),
//				Type:    pulumi.String("Certificate"),
//				Value:   pulumi.String("Certificates-123"),
//			})
//			if err != nil {
//				return err
//			}
//			// create a Sensitive variable
//			_, err = octopusdeploy.NewVariable(ctx, "sensitiveVariable", &octopusdeploy.VariableArgs{
//				OwnerId:        pulumi.String("Projects-123"),
//				Type:           pulumi.String("Sensitive"),
//				IsSensitive:    pulumi.Bool(true),
//				SensitiveValue: pulumi.String("YourSecrets"),
//			})
//			if err != nil {
//				return err
//			}
//			// create a String variable
//			_, err = octopusdeploy.NewVariable(ctx, "stringVariable", &octopusdeploy.VariableArgs{
//				OwnerId: pulumi.String("Projects-123"),
//				Type:    pulumi.String("String"),
//				Value:   pulumi.String("PlainText"),
//			})
//			if err != nil {
//				return err
//			}
//			// create a WorkerPool variable
//			_, err = octopusdeploy.NewVariable(ctx, "workerpoolVariable", &octopusdeploy.VariableArgs{
//				OwnerId: pulumi.String("Projects-123"),
//				Type:    pulumi.String("WorkerPool"),
//				Value:   pulumi.String("WorkerPools-123"),
//			})
//			if err != nil {
//				return err
//			}
//			// create a prompted variable
//			_, err = octopusdeploy.NewVariable(ctx, "promptedVariable", &octopusdeploy.VariableArgs{
//				OwnerId: pulumi.String("Projects-123"),
//				Type:    pulumi.String("String"),
//				Prompt: &octopusdeploy.VariablePromptArgs{
//					Description: pulumi.String("Variable Description"),
//					IsRequired:  pulumi.Bool(true),
//					Label:       pulumi.String("Variable Label"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import octopusdeploy:index/variable:Variable [options] octopusdeploy_variable.<name> <variable-id>
// ```
type Variable struct {
	pulumi.CustomResourceState

	// The description of this variable.
	Description pulumi.StringOutput `pulumi:"description"`
	// Indicates whether or not this variable is considered editable.
	IsEditable pulumi.BoolOutput `pulumi:"isEditable"`
	// Indicates whether or not this resource is considered sensitive and should be kept secret.
	IsSensitive pulumi.BoolOutput `pulumi:"isSensitive"`
	// The name of this resource.
	Name    pulumi.StringOutput    `pulumi:"name"`
	OwnerId pulumi.StringPtrOutput `pulumi:"ownerId"`
	// Deprecated: This attribute is deprecated; please use ownerId instead.
	ProjectId      pulumi.StringPtrOutput  `pulumi:"projectId"`
	Prompt         VariablePromptPtrOutput `pulumi:"prompt"`
	Scope          VariableScopePtrOutput  `pulumi:"scope"`
	SensitiveValue pulumi.StringPtrOutput  `pulumi:"sensitiveValue"`
	// The space ID associated with this variable.
	SpaceId pulumi.StringOutput `pulumi:"spaceId"`
	// The type of variable represented by this resource. Valid types are `AmazonWebServicesAccount`, `AzureAccount`, `GoogleCloudAccount`, `UsernamePasswordAccount`, `Certificate`, `Sensitive`, `String`, `WorkerPool`.
	Type  pulumi.StringOutput    `pulumi:"type"`
	Value pulumi.StringPtrOutput `pulumi:"value"`
}

// NewVariable registers a new resource with the given unique name, arguments, and options.
func NewVariable(ctx *pulumi.Context,
	name string, args *VariableArgs, opts ...pulumi.ResourceOption) (*Variable, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	if args.SensitiveValue != nil {
		args.SensitiveValue = pulumi.ToSecret(args.SensitiveValue).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"sensitiveValue",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Variable
	err := ctx.RegisterResource("octopusdeploy:index/variable:Variable", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVariable gets an existing Variable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVariable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VariableState, opts ...pulumi.ResourceOption) (*Variable, error) {
	var resource Variable
	err := ctx.ReadResource("octopusdeploy:index/variable:Variable", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Variable resources.
type variableState struct {
	// The description of this variable.
	Description *string `pulumi:"description"`
	// Indicates whether or not this variable is considered editable.
	IsEditable *bool `pulumi:"isEditable"`
	// Indicates whether or not this resource is considered sensitive and should be kept secret.
	IsSensitive *bool `pulumi:"isSensitive"`
	// The name of this resource.
	Name    *string `pulumi:"name"`
	OwnerId *string `pulumi:"ownerId"`
	// Deprecated: This attribute is deprecated; please use ownerId instead.
	ProjectId      *string         `pulumi:"projectId"`
	Prompt         *VariablePrompt `pulumi:"prompt"`
	Scope          *VariableScope  `pulumi:"scope"`
	SensitiveValue *string         `pulumi:"sensitiveValue"`
	// The space ID associated with this variable.
	SpaceId *string `pulumi:"spaceId"`
	// The type of variable represented by this resource. Valid types are `AmazonWebServicesAccount`, `AzureAccount`, `GoogleCloudAccount`, `UsernamePasswordAccount`, `Certificate`, `Sensitive`, `String`, `WorkerPool`.
	Type  *string `pulumi:"type"`
	Value *string `pulumi:"value"`
}

type VariableState struct {
	// The description of this variable.
	Description pulumi.StringPtrInput
	// Indicates whether or not this variable is considered editable.
	IsEditable pulumi.BoolPtrInput
	// Indicates whether or not this resource is considered sensitive and should be kept secret.
	IsSensitive pulumi.BoolPtrInput
	// The name of this resource.
	Name    pulumi.StringPtrInput
	OwnerId pulumi.StringPtrInput
	// Deprecated: This attribute is deprecated; please use ownerId instead.
	ProjectId      pulumi.StringPtrInput
	Prompt         VariablePromptPtrInput
	Scope          VariableScopePtrInput
	SensitiveValue pulumi.StringPtrInput
	// The space ID associated with this variable.
	SpaceId pulumi.StringPtrInput
	// The type of variable represented by this resource. Valid types are `AmazonWebServicesAccount`, `AzureAccount`, `GoogleCloudAccount`, `UsernamePasswordAccount`, `Certificate`, `Sensitive`, `String`, `WorkerPool`.
	Type  pulumi.StringPtrInput
	Value pulumi.StringPtrInput
}

func (VariableState) ElementType() reflect.Type {
	return reflect.TypeOf((*variableState)(nil)).Elem()
}

type variableArgs struct {
	// The description of this variable.
	Description *string `pulumi:"description"`
	// Indicates whether or not this variable is considered editable.
	IsEditable *bool `pulumi:"isEditable"`
	// Indicates whether or not this resource is considered sensitive and should be kept secret.
	IsSensitive *bool `pulumi:"isSensitive"`
	// The name of this resource.
	Name    *string `pulumi:"name"`
	OwnerId *string `pulumi:"ownerId"`
	// Deprecated: This attribute is deprecated; please use ownerId instead.
	ProjectId      *string         `pulumi:"projectId"`
	Prompt         *VariablePrompt `pulumi:"prompt"`
	Scope          *VariableScope  `pulumi:"scope"`
	SensitiveValue *string         `pulumi:"sensitiveValue"`
	// The space ID associated with this variable.
	SpaceId *string `pulumi:"spaceId"`
	// The type of variable represented by this resource. Valid types are `AmazonWebServicesAccount`, `AzureAccount`, `GoogleCloudAccount`, `UsernamePasswordAccount`, `Certificate`, `Sensitive`, `String`, `WorkerPool`.
	Type  string  `pulumi:"type"`
	Value *string `pulumi:"value"`
}

// The set of arguments for constructing a Variable resource.
type VariableArgs struct {
	// The description of this variable.
	Description pulumi.StringPtrInput
	// Indicates whether or not this variable is considered editable.
	IsEditable pulumi.BoolPtrInput
	// Indicates whether or not this resource is considered sensitive and should be kept secret.
	IsSensitive pulumi.BoolPtrInput
	// The name of this resource.
	Name    pulumi.StringPtrInput
	OwnerId pulumi.StringPtrInput
	// Deprecated: This attribute is deprecated; please use ownerId instead.
	ProjectId      pulumi.StringPtrInput
	Prompt         VariablePromptPtrInput
	Scope          VariableScopePtrInput
	SensitiveValue pulumi.StringPtrInput
	// The space ID associated with this variable.
	SpaceId pulumi.StringPtrInput
	// The type of variable represented by this resource. Valid types are `AmazonWebServicesAccount`, `AzureAccount`, `GoogleCloudAccount`, `UsernamePasswordAccount`, `Certificate`, `Sensitive`, `String`, `WorkerPool`.
	Type  pulumi.StringInput
	Value pulumi.StringPtrInput
}

func (VariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*variableArgs)(nil)).Elem()
}

type VariableInput interface {
	pulumi.Input

	ToVariableOutput() VariableOutput
	ToVariableOutputWithContext(ctx context.Context) VariableOutput
}

func (*Variable) ElementType() reflect.Type {
	return reflect.TypeOf((**Variable)(nil)).Elem()
}

func (i *Variable) ToVariableOutput() VariableOutput {
	return i.ToVariableOutputWithContext(context.Background())
}

func (i *Variable) ToVariableOutputWithContext(ctx context.Context) VariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VariableOutput)
}

// VariableArrayInput is an input type that accepts VariableArray and VariableArrayOutput values.
// You can construct a concrete instance of `VariableArrayInput` via:
//
//	VariableArray{ VariableArgs{...} }
type VariableArrayInput interface {
	pulumi.Input

	ToVariableArrayOutput() VariableArrayOutput
	ToVariableArrayOutputWithContext(context.Context) VariableArrayOutput
}

type VariableArray []VariableInput

func (VariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Variable)(nil)).Elem()
}

func (i VariableArray) ToVariableArrayOutput() VariableArrayOutput {
	return i.ToVariableArrayOutputWithContext(context.Background())
}

func (i VariableArray) ToVariableArrayOutputWithContext(ctx context.Context) VariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VariableArrayOutput)
}

// VariableMapInput is an input type that accepts VariableMap and VariableMapOutput values.
// You can construct a concrete instance of `VariableMapInput` via:
//
//	VariableMap{ "key": VariableArgs{...} }
type VariableMapInput interface {
	pulumi.Input

	ToVariableMapOutput() VariableMapOutput
	ToVariableMapOutputWithContext(context.Context) VariableMapOutput
}

type VariableMap map[string]VariableInput

func (VariableMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Variable)(nil)).Elem()
}

func (i VariableMap) ToVariableMapOutput() VariableMapOutput {
	return i.ToVariableMapOutputWithContext(context.Background())
}

func (i VariableMap) ToVariableMapOutputWithContext(ctx context.Context) VariableMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VariableMapOutput)
}

type VariableOutput struct{ *pulumi.OutputState }

func (VariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Variable)(nil)).Elem()
}

func (o VariableOutput) ToVariableOutput() VariableOutput {
	return o
}

func (o VariableOutput) ToVariableOutputWithContext(ctx context.Context) VariableOutput {
	return o
}

// The description of this variable.
func (o VariableOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Variable) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Indicates whether or not this variable is considered editable.
func (o VariableOutput) IsEditable() pulumi.BoolOutput {
	return o.ApplyT(func(v *Variable) pulumi.BoolOutput { return v.IsEditable }).(pulumi.BoolOutput)
}

// Indicates whether or not this resource is considered sensitive and should be kept secret.
func (o VariableOutput) IsSensitive() pulumi.BoolOutput {
	return o.ApplyT(func(v *Variable) pulumi.BoolOutput { return v.IsSensitive }).(pulumi.BoolOutput)
}

// The name of this resource.
func (o VariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Variable) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o VariableOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Variable) pulumi.StringPtrOutput { return v.OwnerId }).(pulumi.StringPtrOutput)
}

// Deprecated: This attribute is deprecated; please use ownerId instead.
func (o VariableOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Variable) pulumi.StringPtrOutput { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o VariableOutput) Prompt() VariablePromptPtrOutput {
	return o.ApplyT(func(v *Variable) VariablePromptPtrOutput { return v.Prompt }).(VariablePromptPtrOutput)
}

func (o VariableOutput) Scope() VariableScopePtrOutput {
	return o.ApplyT(func(v *Variable) VariableScopePtrOutput { return v.Scope }).(VariableScopePtrOutput)
}

func (o VariableOutput) SensitiveValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Variable) pulumi.StringPtrOutput { return v.SensitiveValue }).(pulumi.StringPtrOutput)
}

// The space ID associated with this variable.
func (o VariableOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Variable) pulumi.StringOutput { return v.SpaceId }).(pulumi.StringOutput)
}

// The type of variable represented by this resource. Valid types are `AmazonWebServicesAccount`, `AzureAccount`, `GoogleCloudAccount`, `UsernamePasswordAccount`, `Certificate`, `Sensitive`, `String`, `WorkerPool`.
func (o VariableOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Variable) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o VariableOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Variable) pulumi.StringPtrOutput { return v.Value }).(pulumi.StringPtrOutput)
}

type VariableArrayOutput struct{ *pulumi.OutputState }

func (VariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Variable)(nil)).Elem()
}

func (o VariableArrayOutput) ToVariableArrayOutput() VariableArrayOutput {
	return o
}

func (o VariableArrayOutput) ToVariableArrayOutputWithContext(ctx context.Context) VariableArrayOutput {
	return o
}

func (o VariableArrayOutput) Index(i pulumi.IntInput) VariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Variable {
		return vs[0].([]*Variable)[vs[1].(int)]
	}).(VariableOutput)
}

type VariableMapOutput struct{ *pulumi.OutputState }

func (VariableMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Variable)(nil)).Elem()
}

func (o VariableMapOutput) ToVariableMapOutput() VariableMapOutput {
	return o
}

func (o VariableMapOutput) ToVariableMapOutputWithContext(ctx context.Context) VariableMapOutput {
	return o
}

func (o VariableMapOutput) MapIndex(k pulumi.StringInput) VariableOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Variable {
		return vs[0].(map[string]*Variable)[vs[1].(string)]
	}).(VariableOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VariableInput)(nil)).Elem(), &Variable{})
	pulumi.RegisterInputType(reflect.TypeOf((*VariableArrayInput)(nil)).Elem(), VariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VariableMapInput)(nil)).Elem(), VariableMap{})
	pulumi.RegisterOutputType(VariableOutput{})
	pulumi.RegisterOutputType(VariableArrayOutput{})
	pulumi.RegisterOutputType(VariableMapOutput{})
}
