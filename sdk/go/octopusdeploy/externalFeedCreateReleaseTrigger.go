// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package octopusdeploy

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource manages External feed triggers (release creation type) in Octopus Deploy.
//
// ## Import
//
// ```sh
// $ pulumi import octopusdeploy:index/externalFeedCreateReleaseTrigger:ExternalFeedCreateReleaseTrigger [options] octopusdeploy_external_feed_create_release_trigger.<name> <trigger-id>
// ```
type ExternalFeedCreateReleaseTrigger struct {
	pulumi.CustomResourceState

	// The ID of the channel in which the release will be created if the action type is CreateRelease.
	ChannelId pulumi.StringOutput `pulumi:"channelId"`
	// Disables the trigger from being run when set.
	IsDisabled pulumi.BoolPtrOutput `pulumi:"isDisabled"`
	// The name of this resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// List of referenced packages that will cause the trigger to fire. New versions of any of the packages you select will trigger release creation.
	Packages ExternalFeedCreateReleaseTriggerPackageArrayOutput `pulumi:"packages"`
	// List of deployment actions for which the primary packages will cause the trigger to fire. New versions of any of the packages you select will trigger release creation.
	PrimaryPackages ExternalFeedCreateReleaseTriggerPrimaryPackageArrayOutput `pulumi:"primaryPackages"`
	// The ID of the project to attach the trigger.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The space ID associated with the project to attach the trigger.
	SpaceId pulumi.StringPtrOutput `pulumi:"spaceId"`
}

// NewExternalFeedCreateReleaseTrigger registers a new resource with the given unique name, arguments, and options.
func NewExternalFeedCreateReleaseTrigger(ctx *pulumi.Context,
	name string, args *ExternalFeedCreateReleaseTriggerArgs, opts ...pulumi.ResourceOption) (*ExternalFeedCreateReleaseTrigger, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ChannelId == nil {
		return nil, errors.New("invalid value for required argument 'ChannelId'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExternalFeedCreateReleaseTrigger
	err := ctx.RegisterResource("octopusdeploy:index/externalFeedCreateReleaseTrigger:ExternalFeedCreateReleaseTrigger", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExternalFeedCreateReleaseTrigger gets an existing ExternalFeedCreateReleaseTrigger resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExternalFeedCreateReleaseTrigger(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExternalFeedCreateReleaseTriggerState, opts ...pulumi.ResourceOption) (*ExternalFeedCreateReleaseTrigger, error) {
	var resource ExternalFeedCreateReleaseTrigger
	err := ctx.ReadResource("octopusdeploy:index/externalFeedCreateReleaseTrigger:ExternalFeedCreateReleaseTrigger", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExternalFeedCreateReleaseTrigger resources.
type externalFeedCreateReleaseTriggerState struct {
	// The ID of the channel in which the release will be created if the action type is CreateRelease.
	ChannelId *string `pulumi:"channelId"`
	// Disables the trigger from being run when set.
	IsDisabled *bool `pulumi:"isDisabled"`
	// The name of this resource.
	Name *string `pulumi:"name"`
	// List of referenced packages that will cause the trigger to fire. New versions of any of the packages you select will trigger release creation.
	Packages []ExternalFeedCreateReleaseTriggerPackage `pulumi:"packages"`
	// List of deployment actions for which the primary packages will cause the trigger to fire. New versions of any of the packages you select will trigger release creation.
	PrimaryPackages []ExternalFeedCreateReleaseTriggerPrimaryPackage `pulumi:"primaryPackages"`
	// The ID of the project to attach the trigger.
	ProjectId *string `pulumi:"projectId"`
	// The space ID associated with the project to attach the trigger.
	SpaceId *string `pulumi:"spaceId"`
}

type ExternalFeedCreateReleaseTriggerState struct {
	// The ID of the channel in which the release will be created if the action type is CreateRelease.
	ChannelId pulumi.StringPtrInput
	// Disables the trigger from being run when set.
	IsDisabled pulumi.BoolPtrInput
	// The name of this resource.
	Name pulumi.StringPtrInput
	// List of referenced packages that will cause the trigger to fire. New versions of any of the packages you select will trigger release creation.
	Packages ExternalFeedCreateReleaseTriggerPackageArrayInput
	// List of deployment actions for which the primary packages will cause the trigger to fire. New versions of any of the packages you select will trigger release creation.
	PrimaryPackages ExternalFeedCreateReleaseTriggerPrimaryPackageArrayInput
	// The ID of the project to attach the trigger.
	ProjectId pulumi.StringPtrInput
	// The space ID associated with the project to attach the trigger.
	SpaceId pulumi.StringPtrInput
}

func (ExternalFeedCreateReleaseTriggerState) ElementType() reflect.Type {
	return reflect.TypeOf((*externalFeedCreateReleaseTriggerState)(nil)).Elem()
}

type externalFeedCreateReleaseTriggerArgs struct {
	// The ID of the channel in which the release will be created if the action type is CreateRelease.
	ChannelId string `pulumi:"channelId"`
	// Disables the trigger from being run when set.
	IsDisabled *bool `pulumi:"isDisabled"`
	// The name of this resource.
	Name *string `pulumi:"name"`
	// List of referenced packages that will cause the trigger to fire. New versions of any of the packages you select will trigger release creation.
	Packages []ExternalFeedCreateReleaseTriggerPackage `pulumi:"packages"`
	// List of deployment actions for which the primary packages will cause the trigger to fire. New versions of any of the packages you select will trigger release creation.
	PrimaryPackages []ExternalFeedCreateReleaseTriggerPrimaryPackage `pulumi:"primaryPackages"`
	// The ID of the project to attach the trigger.
	ProjectId string `pulumi:"projectId"`
	// The space ID associated with the project to attach the trigger.
	SpaceId *string `pulumi:"spaceId"`
}

// The set of arguments for constructing a ExternalFeedCreateReleaseTrigger resource.
type ExternalFeedCreateReleaseTriggerArgs struct {
	// The ID of the channel in which the release will be created if the action type is CreateRelease.
	ChannelId pulumi.StringInput
	// Disables the trigger from being run when set.
	IsDisabled pulumi.BoolPtrInput
	// The name of this resource.
	Name pulumi.StringPtrInput
	// List of referenced packages that will cause the trigger to fire. New versions of any of the packages you select will trigger release creation.
	Packages ExternalFeedCreateReleaseTriggerPackageArrayInput
	// List of deployment actions for which the primary packages will cause the trigger to fire. New versions of any of the packages you select will trigger release creation.
	PrimaryPackages ExternalFeedCreateReleaseTriggerPrimaryPackageArrayInput
	// The ID of the project to attach the trigger.
	ProjectId pulumi.StringInput
	// The space ID associated with the project to attach the trigger.
	SpaceId pulumi.StringPtrInput
}

func (ExternalFeedCreateReleaseTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*externalFeedCreateReleaseTriggerArgs)(nil)).Elem()
}

type ExternalFeedCreateReleaseTriggerInput interface {
	pulumi.Input

	ToExternalFeedCreateReleaseTriggerOutput() ExternalFeedCreateReleaseTriggerOutput
	ToExternalFeedCreateReleaseTriggerOutputWithContext(ctx context.Context) ExternalFeedCreateReleaseTriggerOutput
}

func (*ExternalFeedCreateReleaseTrigger) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalFeedCreateReleaseTrigger)(nil)).Elem()
}

func (i *ExternalFeedCreateReleaseTrigger) ToExternalFeedCreateReleaseTriggerOutput() ExternalFeedCreateReleaseTriggerOutput {
	return i.ToExternalFeedCreateReleaseTriggerOutputWithContext(context.Background())
}

func (i *ExternalFeedCreateReleaseTrigger) ToExternalFeedCreateReleaseTriggerOutputWithContext(ctx context.Context) ExternalFeedCreateReleaseTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalFeedCreateReleaseTriggerOutput)
}

// ExternalFeedCreateReleaseTriggerArrayInput is an input type that accepts ExternalFeedCreateReleaseTriggerArray and ExternalFeedCreateReleaseTriggerArrayOutput values.
// You can construct a concrete instance of `ExternalFeedCreateReleaseTriggerArrayInput` via:
//
//	ExternalFeedCreateReleaseTriggerArray{ ExternalFeedCreateReleaseTriggerArgs{...} }
type ExternalFeedCreateReleaseTriggerArrayInput interface {
	pulumi.Input

	ToExternalFeedCreateReleaseTriggerArrayOutput() ExternalFeedCreateReleaseTriggerArrayOutput
	ToExternalFeedCreateReleaseTriggerArrayOutputWithContext(context.Context) ExternalFeedCreateReleaseTriggerArrayOutput
}

type ExternalFeedCreateReleaseTriggerArray []ExternalFeedCreateReleaseTriggerInput

func (ExternalFeedCreateReleaseTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalFeedCreateReleaseTrigger)(nil)).Elem()
}

func (i ExternalFeedCreateReleaseTriggerArray) ToExternalFeedCreateReleaseTriggerArrayOutput() ExternalFeedCreateReleaseTriggerArrayOutput {
	return i.ToExternalFeedCreateReleaseTriggerArrayOutputWithContext(context.Background())
}

func (i ExternalFeedCreateReleaseTriggerArray) ToExternalFeedCreateReleaseTriggerArrayOutputWithContext(ctx context.Context) ExternalFeedCreateReleaseTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalFeedCreateReleaseTriggerArrayOutput)
}

// ExternalFeedCreateReleaseTriggerMapInput is an input type that accepts ExternalFeedCreateReleaseTriggerMap and ExternalFeedCreateReleaseTriggerMapOutput values.
// You can construct a concrete instance of `ExternalFeedCreateReleaseTriggerMapInput` via:
//
//	ExternalFeedCreateReleaseTriggerMap{ "key": ExternalFeedCreateReleaseTriggerArgs{...} }
type ExternalFeedCreateReleaseTriggerMapInput interface {
	pulumi.Input

	ToExternalFeedCreateReleaseTriggerMapOutput() ExternalFeedCreateReleaseTriggerMapOutput
	ToExternalFeedCreateReleaseTriggerMapOutputWithContext(context.Context) ExternalFeedCreateReleaseTriggerMapOutput
}

type ExternalFeedCreateReleaseTriggerMap map[string]ExternalFeedCreateReleaseTriggerInput

func (ExternalFeedCreateReleaseTriggerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalFeedCreateReleaseTrigger)(nil)).Elem()
}

func (i ExternalFeedCreateReleaseTriggerMap) ToExternalFeedCreateReleaseTriggerMapOutput() ExternalFeedCreateReleaseTriggerMapOutput {
	return i.ToExternalFeedCreateReleaseTriggerMapOutputWithContext(context.Background())
}

func (i ExternalFeedCreateReleaseTriggerMap) ToExternalFeedCreateReleaseTriggerMapOutputWithContext(ctx context.Context) ExternalFeedCreateReleaseTriggerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalFeedCreateReleaseTriggerMapOutput)
}

type ExternalFeedCreateReleaseTriggerOutput struct{ *pulumi.OutputState }

func (ExternalFeedCreateReleaseTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalFeedCreateReleaseTrigger)(nil)).Elem()
}

func (o ExternalFeedCreateReleaseTriggerOutput) ToExternalFeedCreateReleaseTriggerOutput() ExternalFeedCreateReleaseTriggerOutput {
	return o
}

func (o ExternalFeedCreateReleaseTriggerOutput) ToExternalFeedCreateReleaseTriggerOutputWithContext(ctx context.Context) ExternalFeedCreateReleaseTriggerOutput {
	return o
}

// The ID of the channel in which the release will be created if the action type is CreateRelease.
func (o ExternalFeedCreateReleaseTriggerOutput) ChannelId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalFeedCreateReleaseTrigger) pulumi.StringOutput { return v.ChannelId }).(pulumi.StringOutput)
}

// Disables the trigger from being run when set.
func (o ExternalFeedCreateReleaseTriggerOutput) IsDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExternalFeedCreateReleaseTrigger) pulumi.BoolPtrOutput { return v.IsDisabled }).(pulumi.BoolPtrOutput)
}

// The name of this resource.
func (o ExternalFeedCreateReleaseTriggerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalFeedCreateReleaseTrigger) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// List of referenced packages that will cause the trigger to fire. New versions of any of the packages you select will trigger release creation.
func (o ExternalFeedCreateReleaseTriggerOutput) Packages() ExternalFeedCreateReleaseTriggerPackageArrayOutput {
	return o.ApplyT(func(v *ExternalFeedCreateReleaseTrigger) ExternalFeedCreateReleaseTriggerPackageArrayOutput {
		return v.Packages
	}).(ExternalFeedCreateReleaseTriggerPackageArrayOutput)
}

// List of deployment actions for which the primary packages will cause the trigger to fire. New versions of any of the packages you select will trigger release creation.
func (o ExternalFeedCreateReleaseTriggerOutput) PrimaryPackages() ExternalFeedCreateReleaseTriggerPrimaryPackageArrayOutput {
	return o.ApplyT(func(v *ExternalFeedCreateReleaseTrigger) ExternalFeedCreateReleaseTriggerPrimaryPackageArrayOutput {
		return v.PrimaryPackages
	}).(ExternalFeedCreateReleaseTriggerPrimaryPackageArrayOutput)
}

// The ID of the project to attach the trigger.
func (o ExternalFeedCreateReleaseTriggerOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalFeedCreateReleaseTrigger) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The space ID associated with the project to attach the trigger.
func (o ExternalFeedCreateReleaseTriggerOutput) SpaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalFeedCreateReleaseTrigger) pulumi.StringPtrOutput { return v.SpaceId }).(pulumi.StringPtrOutput)
}

type ExternalFeedCreateReleaseTriggerArrayOutput struct{ *pulumi.OutputState }

func (ExternalFeedCreateReleaseTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalFeedCreateReleaseTrigger)(nil)).Elem()
}

func (o ExternalFeedCreateReleaseTriggerArrayOutput) ToExternalFeedCreateReleaseTriggerArrayOutput() ExternalFeedCreateReleaseTriggerArrayOutput {
	return o
}

func (o ExternalFeedCreateReleaseTriggerArrayOutput) ToExternalFeedCreateReleaseTriggerArrayOutputWithContext(ctx context.Context) ExternalFeedCreateReleaseTriggerArrayOutput {
	return o
}

func (o ExternalFeedCreateReleaseTriggerArrayOutput) Index(i pulumi.IntInput) ExternalFeedCreateReleaseTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExternalFeedCreateReleaseTrigger {
		return vs[0].([]*ExternalFeedCreateReleaseTrigger)[vs[1].(int)]
	}).(ExternalFeedCreateReleaseTriggerOutput)
}

type ExternalFeedCreateReleaseTriggerMapOutput struct{ *pulumi.OutputState }

func (ExternalFeedCreateReleaseTriggerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalFeedCreateReleaseTrigger)(nil)).Elem()
}

func (o ExternalFeedCreateReleaseTriggerMapOutput) ToExternalFeedCreateReleaseTriggerMapOutput() ExternalFeedCreateReleaseTriggerMapOutput {
	return o
}

func (o ExternalFeedCreateReleaseTriggerMapOutput) ToExternalFeedCreateReleaseTriggerMapOutputWithContext(ctx context.Context) ExternalFeedCreateReleaseTriggerMapOutput {
	return o
}

func (o ExternalFeedCreateReleaseTriggerMapOutput) MapIndex(k pulumi.StringInput) ExternalFeedCreateReleaseTriggerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExternalFeedCreateReleaseTrigger {
		return vs[0].(map[string]*ExternalFeedCreateReleaseTrigger)[vs[1].(string)]
	}).(ExternalFeedCreateReleaseTriggerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalFeedCreateReleaseTriggerInput)(nil)).Elem(), &ExternalFeedCreateReleaseTrigger{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalFeedCreateReleaseTriggerArrayInput)(nil)).Elem(), ExternalFeedCreateReleaseTriggerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalFeedCreateReleaseTriggerMapInput)(nil)).Elem(), ExternalFeedCreateReleaseTriggerMap{})
	pulumi.RegisterOutputType(ExternalFeedCreateReleaseTriggerOutput{})
	pulumi.RegisterOutputType(ExternalFeedCreateReleaseTriggerArrayOutput{})
	pulumi.RegisterOutputType(ExternalFeedCreateReleaseTriggerMapOutput{})
}
