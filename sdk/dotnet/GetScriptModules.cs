// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Octopusdeploy
{
    public static class GetScriptModules
    {
        /// <summary>
        /// Provides information about existing script modules.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Octopusdeploy = Pulumi.Octopusdeploy;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Octopusdeploy.GetScriptModules.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "LibraryVariableSets-123",
        ///             "LibraryVariableSets-321",
        ///         },
        ///         PartialName = "Defau",
        ///         Skip = 5,
        ///         Take = 100,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetScriptModulesResult> InvokeAsync(GetScriptModulesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetScriptModulesResult>("octopusdeploy:index/getScriptModules:getScriptModules", args ?? new GetScriptModulesArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about existing script modules.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Octopusdeploy = Pulumi.Octopusdeploy;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Octopusdeploy.GetScriptModules.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "LibraryVariableSets-123",
        ///             "LibraryVariableSets-321",
        ///         },
        ///         PartialName = "Defau",
        ///         Skip = 5,
        ///         Take = 100,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetScriptModulesResult> Invoke(GetScriptModulesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetScriptModulesResult>("octopusdeploy:index/getScriptModules:getScriptModules", args ?? new GetScriptModulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetScriptModulesArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A filter to search by a list of IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A filter to search by a partial name.
        /// </summary>
        [Input("partialName")]
        public string? PartialName { get; set; }

        /// <summary>
        /// A filter to specify the number of items to skip in the response.
        /// </summary>
        [Input("skip")]
        public int? Skip { get; set; }

        /// <summary>
        /// The space ID associated with this script module.
        /// </summary>
        [Input("spaceId")]
        public string? SpaceId { get; set; }

        /// <summary>
        /// A filter to specify the number of items to take (or return) in the response.
        /// </summary>
        [Input("take")]
        public int? Take { get; set; }

        public GetScriptModulesArgs()
        {
        }
        public static new GetScriptModulesArgs Empty => new GetScriptModulesArgs();
    }

    public sealed class GetScriptModulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A filter to search by a list of IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A filter to search by a partial name.
        /// </summary>
        [Input("partialName")]
        public Input<string>? PartialName { get; set; }

        /// <summary>
        /// A filter to specify the number of items to skip in the response.
        /// </summary>
        [Input("skip")]
        public Input<int>? Skip { get; set; }

        /// <summary>
        /// The space ID associated with this script module.
        /// </summary>
        [Input("spaceId")]
        public Input<string>? SpaceId { get; set; }

        /// <summary>
        /// A filter to specify the number of items to take (or return) in the response.
        /// </summary>
        [Input("take")]
        public Input<int>? Take { get; set; }

        public GetScriptModulesInvokeArgs()
        {
        }
        public static new GetScriptModulesInvokeArgs Empty => new GetScriptModulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetScriptModulesResult
    {
        /// <summary>
        /// The unique ID for this resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A filter to search by a list of IDs.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// A filter to search by a partial name.
        /// </summary>
        public readonly string? PartialName;
        public readonly ImmutableArray<Outputs.GetScriptModulesScriptModuleResult> ScriptModules;
        /// <summary>
        /// A filter to specify the number of items to skip in the response.
        /// </summary>
        public readonly int? Skip;
        /// <summary>
        /// The space ID associated with this script module.
        /// </summary>
        public readonly string SpaceId;
        /// <summary>
        /// A filter to specify the number of items to take (or return) in the response.
        /// </summary>
        public readonly int? Take;

        [OutputConstructor]
        private GetScriptModulesResult(
            string id,

            ImmutableArray<string> ids,

            string? partialName,

            ImmutableArray<Outputs.GetScriptModulesScriptModuleResult> scriptModules,

            int? skip,

            string spaceId,

            int? take)
        {
            Id = id;
            Ids = ids;
            PartialName = partialName;
            ScriptModules = scriptModules;
            Skip = skip;
            SpaceId = spaceId;
            Take = take;
        }
    }
}
