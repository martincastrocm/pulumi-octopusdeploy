// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Octopusdeploy
{
    /// <summary>
    /// This resource manages Kubernetes agent workers in Octopus Deploy.
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import octopusdeploy:index/kubernetesAgentWorker:KubernetesAgentWorker [options] octopusdeploy_kubernetes_agent_worker.&lt;name&gt; &lt;machine-id&gt;
    /// ```
    /// </summary>
    [OctopusdeployResourceType("octopusdeploy:index/kubernetesAgentWorker:KubernetesAgentWorker")]
    public partial class KubernetesAgentWorker : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Name of the Helm release that the agent belongs to.
        /// </summary>
        [Output("agentHelmReleaseName")]
        public Output<string> AgentHelmReleaseName { get; private set; } = null!;

        /// <summary>
        /// Name of the Kubernetes namespace where the agent is installed.
        /// </summary>
        [Output("agentKubernetesNamespace")]
        public Output<string> AgentKubernetesNamespace { get; private set; } = null!;

        /// <summary>
        /// Current Tentacle version of the agent
        /// </summary>
        [Output("agentTentacleVersion")]
        public Output<string> AgentTentacleVersion { get; private set; } = null!;

        /// <summary>
        /// Current upgrade availability status of the agent. One of 'NoUpgrades', 'UpgradeAvailable', 'UpgradeSuggested', 'UpgradeRequired'
        /// </summary>
        [Output("agentUpgradeStatus")]
        public Output<string> AgentUpgradeStatus { get; private set; } = null!;

        /// <summary>
        /// Current Helm chart version of the agent.
        /// </summary>
        [Output("agentVersion")]
        public Output<string> AgentVersion { get; private set; } = null!;

        /// <summary>
        /// The communication mode used by the Kubernetes agent to communicate with Octopus Server. Currently, the only supported value is 'Polling'.
        /// </summary>
        [Output("communicationMode")]
        public Output<string?> CommunicationMode { get; private set; } = null!;

        /// <summary>
        /// Whether the Kubernetes agent is disabled. If the agent is disabled, it will not be included in any deployments.
        /// </summary>
        [Output("isDisabled")]
        public Output<bool?> IsDisabled { get; private set; } = null!;

        /// <summary>
        /// Optional ID of the machine policy that the Kubernetes agent will use. If not provided the default machine policy will be used.
        /// </summary>
        [Output("machinePolicyId")]
        public Output<string> MachinePolicyId { get; private set; } = null!;

        /// <summary>
        /// The name of this resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The space ID associated with this resource.
        /// </summary>
        [Output("spaceId")]
        public Output<string> SpaceId { get; private set; } = null!;

        /// <summary>
        /// The thumbprint of the Kubernetes agent's certificate used by server to verify the identity of the agent. This is the same thumbprint that was used when installing the agent.
        /// </summary>
        [Output("thumbprint")]
        public Output<string> Thumbprint { get; private set; } = null!;

        /// <summary>
        /// If enabled the Kubernetes agent will not automatically upgrade and will stay on the currently installed version, even if the associated machine policy is configured to automatically upgrade.
        /// </summary>
        [Output("upgradeLocked")]
        public Output<bool?> UpgradeLocked { get; private set; } = null!;

        /// <summary>
        /// The URI of the Kubernetes agent's used by the server to queue messages. This is the same subscription uri that was used when installing the agent.
        /// </summary>
        [Output("uri")]
        public Output<string> Uri { get; private set; } = null!;

        /// <summary>
        /// A list of worker pool Ids specifying the pools in which this worker belongs
        /// </summary>
        [Output("workerPoolIds")]
        public Output<ImmutableArray<string>> WorkerPoolIds { get; private set; } = null!;


        /// <summary>
        /// Create a KubernetesAgentWorker resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KubernetesAgentWorker(string name, KubernetesAgentWorkerArgs args, CustomResourceOptions? options = null)
            : base("octopusdeploy:index/kubernetesAgentWorker:KubernetesAgentWorker", name, args ?? new KubernetesAgentWorkerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private KubernetesAgentWorker(string name, Input<string> id, KubernetesAgentWorkerState? state = null, CustomResourceOptions? options = null)
            : base("octopusdeploy:index/kubernetesAgentWorker:KubernetesAgentWorker", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/OctopusDeploy/terraform-provider-octopusdeploy/releases",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KubernetesAgentWorker resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KubernetesAgentWorker Get(string name, Input<string> id, KubernetesAgentWorkerState? state = null, CustomResourceOptions? options = null)
        {
            return new KubernetesAgentWorker(name, id, state, options);
        }
    }

    public sealed class KubernetesAgentWorkerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The communication mode used by the Kubernetes agent to communicate with Octopus Server. Currently, the only supported value is 'Polling'.
        /// </summary>
        [Input("communicationMode")]
        public Input<string>? CommunicationMode { get; set; }

        /// <summary>
        /// Whether the Kubernetes agent is disabled. If the agent is disabled, it will not be included in any deployments.
        /// </summary>
        [Input("isDisabled")]
        public Input<bool>? IsDisabled { get; set; }

        /// <summary>
        /// Optional ID of the machine policy that the Kubernetes agent will use. If not provided the default machine policy will be used.
        /// </summary>
        [Input("machinePolicyId")]
        public Input<string>? MachinePolicyId { get; set; }

        /// <summary>
        /// The name of this resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The space ID associated with this resource.
        /// </summary>
        [Input("spaceId")]
        public Input<string>? SpaceId { get; set; }

        /// <summary>
        /// The thumbprint of the Kubernetes agent's certificate used by server to verify the identity of the agent. This is the same thumbprint that was used when installing the agent.
        /// </summary>
        [Input("thumbprint", required: true)]
        public Input<string> Thumbprint { get; set; } = null!;

        /// <summary>
        /// If enabled the Kubernetes agent will not automatically upgrade and will stay on the currently installed version, even if the associated machine policy is configured to automatically upgrade.
        /// </summary>
        [Input("upgradeLocked")]
        public Input<bool>? UpgradeLocked { get; set; }

        /// <summary>
        /// The URI of the Kubernetes agent's used by the server to queue messages. This is the same subscription uri that was used when installing the agent.
        /// </summary>
        [Input("uri", required: true)]
        public Input<string> Uri { get; set; } = null!;

        [Input("workerPoolIds", required: true)]
        private InputList<string>? _workerPoolIds;

        /// <summary>
        /// A list of worker pool Ids specifying the pools in which this worker belongs
        /// </summary>
        public InputList<string> WorkerPoolIds
        {
            get => _workerPoolIds ?? (_workerPoolIds = new InputList<string>());
            set => _workerPoolIds = value;
        }

        public KubernetesAgentWorkerArgs()
        {
        }
        public static new KubernetesAgentWorkerArgs Empty => new KubernetesAgentWorkerArgs();
    }

    public sealed class KubernetesAgentWorkerState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the Helm release that the agent belongs to.
        /// </summary>
        [Input("agentHelmReleaseName")]
        public Input<string>? AgentHelmReleaseName { get; set; }

        /// <summary>
        /// Name of the Kubernetes namespace where the agent is installed.
        /// </summary>
        [Input("agentKubernetesNamespace")]
        public Input<string>? AgentKubernetesNamespace { get; set; }

        /// <summary>
        /// Current Tentacle version of the agent
        /// </summary>
        [Input("agentTentacleVersion")]
        public Input<string>? AgentTentacleVersion { get; set; }

        /// <summary>
        /// Current upgrade availability status of the agent. One of 'NoUpgrades', 'UpgradeAvailable', 'UpgradeSuggested', 'UpgradeRequired'
        /// </summary>
        [Input("agentUpgradeStatus")]
        public Input<string>? AgentUpgradeStatus { get; set; }

        /// <summary>
        /// Current Helm chart version of the agent.
        /// </summary>
        [Input("agentVersion")]
        public Input<string>? AgentVersion { get; set; }

        /// <summary>
        /// The communication mode used by the Kubernetes agent to communicate with Octopus Server. Currently, the only supported value is 'Polling'.
        /// </summary>
        [Input("communicationMode")]
        public Input<string>? CommunicationMode { get; set; }

        /// <summary>
        /// Whether the Kubernetes agent is disabled. If the agent is disabled, it will not be included in any deployments.
        /// </summary>
        [Input("isDisabled")]
        public Input<bool>? IsDisabled { get; set; }

        /// <summary>
        /// Optional ID of the machine policy that the Kubernetes agent will use. If not provided the default machine policy will be used.
        /// </summary>
        [Input("machinePolicyId")]
        public Input<string>? MachinePolicyId { get; set; }

        /// <summary>
        /// The name of this resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The space ID associated with this resource.
        /// </summary>
        [Input("spaceId")]
        public Input<string>? SpaceId { get; set; }

        /// <summary>
        /// The thumbprint of the Kubernetes agent's certificate used by server to verify the identity of the agent. This is the same thumbprint that was used when installing the agent.
        /// </summary>
        [Input("thumbprint")]
        public Input<string>? Thumbprint { get; set; }

        /// <summary>
        /// If enabled the Kubernetes agent will not automatically upgrade and will stay on the currently installed version, even if the associated machine policy is configured to automatically upgrade.
        /// </summary>
        [Input("upgradeLocked")]
        public Input<bool>? UpgradeLocked { get; set; }

        /// <summary>
        /// The URI of the Kubernetes agent's used by the server to queue messages. This is the same subscription uri that was used when installing the agent.
        /// </summary>
        [Input("uri")]
        public Input<string>? Uri { get; set; }

        [Input("workerPoolIds")]
        private InputList<string>? _workerPoolIds;

        /// <summary>
        /// A list of worker pool Ids specifying the pools in which this worker belongs
        /// </summary>
        public InputList<string> WorkerPoolIds
        {
            get => _workerPoolIds ?? (_workerPoolIds = new InputList<string>());
            set => _workerPoolIds = value;
        }

        public KubernetesAgentWorkerState()
        {
        }
        public static new KubernetesAgentWorkerState Empty => new KubernetesAgentWorkerState();
    }
}
