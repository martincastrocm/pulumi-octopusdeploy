// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Octopusdeploy
{
    /// <summary>
    /// Generates a X.509 self-signed certificate for use with a Octopus Deploy Tentacle.
    /// 
    /// ## Octopus certificates
    /// 
    /// The X.509 certificates generated are self-signed, 2048-bit private keys and intended for use [only between Octopus Server and Tentacle](https://octopus.com/docs/security/octopus-tentacle-communication#Octopus-Tentaclecommunication-Octopuscertificates) communications. There is an insightful discussion of [why Octopus uses self-signed certificates](https://octopus.com/blog/why-self-signed-certificates) by default.
    /// 
    /// Instead of generating a new certificate through this resource you can use an existing certificate and simply reference the appropriate thumbprint when registering the target.
    /// 
    /// ### State Persistence
    /// This resource that is generated will be stored in the state file and cannot be retrieved later from the external Octopus Server or Tentacle.
    /// </summary>
    [OctopusdeployResourceType("octopusdeploy:index/tentacleCertificate:TentacleCertificate")]
    public partial class TentacleCertificate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The base64 encoded pfx certificate.
        /// </summary>
        [Output("base64")]
        public Output<string> Base64 { get; private set; } = null!;

        /// <summary>
        /// Optional map of dependencies that when modified will trigger a re-creation of this resource.
        /// </summary>
        [Output("dependencies")]
        public Output<ImmutableDictionary<string, string>?> Dependencies { get; private set; } = null!;

        /// <summary>
        /// The SHA1 sum of the certificate represented in hexadecimal.
        /// </summary>
        [Output("thumbprint")]
        public Output<string> Thumbprint { get; private set; } = null!;


        /// <summary>
        /// Create a TentacleCertificate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TentacleCertificate(string name, TentacleCertificateArgs? args = null, CustomResourceOptions? options = null)
            : base("octopusdeploy:index/tentacleCertificate:TentacleCertificate", name, args ?? new TentacleCertificateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TentacleCertificate(string name, Input<string> id, TentacleCertificateState? state = null, CustomResourceOptions? options = null)
            : base("octopusdeploy:index/tentacleCertificate:TentacleCertificate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/OctopusDeploy/terraform-provider-octopusdeploy/releases",
                AdditionalSecretOutputs =
                {
                    "base64",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TentacleCertificate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TentacleCertificate Get(string name, Input<string> id, TentacleCertificateState? state = null, CustomResourceOptions? options = null)
        {
            return new TentacleCertificate(name, id, state, options);
        }
    }

    public sealed class TentacleCertificateArgs : global::Pulumi.ResourceArgs
    {
        [Input("dependencies")]
        private InputMap<string>? _dependencies;

        /// <summary>
        /// Optional map of dependencies that when modified will trigger a re-creation of this resource.
        /// </summary>
        public InputMap<string> Dependencies
        {
            get => _dependencies ?? (_dependencies = new InputMap<string>());
            set => _dependencies = value;
        }

        public TentacleCertificateArgs()
        {
        }
        public static new TentacleCertificateArgs Empty => new TentacleCertificateArgs();
    }

    public sealed class TentacleCertificateState : global::Pulumi.ResourceArgs
    {
        [Input("base64")]
        private Input<string>? _base64;

        /// <summary>
        /// The base64 encoded pfx certificate.
        /// </summary>
        public Input<string>? Base64
        {
            get => _base64;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _base64 = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("dependencies")]
        private InputMap<string>? _dependencies;

        /// <summary>
        /// Optional map of dependencies that when modified will trigger a re-creation of this resource.
        /// </summary>
        public InputMap<string> Dependencies
        {
            get => _dependencies ?? (_dependencies = new InputMap<string>());
            set => _dependencies = value;
        }

        /// <summary>
        /// The SHA1 sum of the certificate represented in hexadecimal.
        /// </summary>
        [Input("thumbprint")]
        public Input<string>? Thumbprint { get; set; }

        public TentacleCertificateState()
        {
        }
        public static new TentacleCertificateState Empty => new TentacleCertificateState();
    }
}
