// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Octopusdeploy.Outputs
{

    [OutputType]
    public sealed class RunbookProcessStepRunScriptAction
    {
        /// <summary>
        /// Represents the template that is associated with this action.
        /// </summary>
        public readonly Outputs.RunbookProcessStepRunScriptActionActionTemplate? ActionTemplate;
        public readonly bool? CanBeUsedForProjectVersioning;
        /// <summary>
        /// The channels associated with this deployment action.
        /// </summary>
        public readonly ImmutableArray<string> Channels;
        /// <summary>
        /// The condition associated with this deployment action.
        /// </summary>
        public readonly string? Condition;
        /// <summary>
        /// The deployment action container associated with this deployment action.
        /// </summary>
        public readonly ImmutableArray<Outputs.RunbookProcessStepRunScriptActionContainer> Containers;
        /// <summary>
        /// The environments within which this deployment action will run.
        /// </summary>
        public readonly ImmutableArray<string> Environments;
        /// <summary>
        /// The environments that this step will be skipped in
        /// </summary>
        public readonly ImmutableArray<string> ExcludedEnvironments;
        /// <summary>
        /// A list of enabled features for this action.
        /// </summary>
        public readonly ImmutableArray<string> Features;
        /// <summary>
        /// Configuration for resource sourcing from a git repository.
        /// </summary>
        public readonly Outputs.RunbookProcessStepRunScriptActionGitDependency? GitDependency;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Indicates the disabled status of this deployment action.
        /// </summary>
        public readonly bool? IsDisabled;
        /// <summary>
        /// Indicates the required status of this deployment action.
        /// </summary>
        public readonly bool? IsRequired;
        /// <summary>
        /// The name of this resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The notes associated with this deployment action.
        /// </summary>
        public readonly string? Notes;
        /// <summary>
        /// The package assocated with this action.
        /// </summary>
        public readonly ImmutableArray<Outputs.RunbookProcessStepRunScriptActionPackage> Packages;
        /// <summary>
        /// The package assocated with this action.
        /// </summary>
        public readonly Outputs.RunbookProcessStepRunScriptActionPrimaryPackage? PrimaryPackage;
        /// <summary>
        /// A list of properties associated with this package.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Properties;
        /// <summary>
        /// Whether this step runs on a worker or on the target
        /// </summary>
        public readonly bool? RunOnServer;
        public readonly string? ScriptBody;
        /// <summary>
        /// The script file name in the package
        /// </summary>
        public readonly string? ScriptFileName;
        /// <summary>
        /// Parameters expected by the script. Use platform specific calling convention. e.g. -Path #{VariableStoringPath} for PowerShell or -- #{VariableStoringPath} for ScriptCS
        /// </summary>
        public readonly string? ScriptParameters;
        public readonly string? ScriptSource;
        public readonly string? ScriptSyntax;
        /// <summary>
        /// The human-readable unique identifier for this resource.
        /// </summary>
        public readonly string? Slug;
        public readonly int? SortOrder;
        /// <summary>
        /// A list of tenant tags associated with this resource.
        /// </summary>
        public readonly ImmutableArray<string> TenantTags;
        /// <summary>
        /// A newline-separated list of file names to transform, relative to the package contents. Extended wildcard syntax is supported.
        /// </summary>
        public readonly string? VariableSubstitutionInFiles;
        /// <summary>
        /// The worker pool associated with this deployment action.
        /// </summary>
        public readonly string? WorkerPoolId;
        /// <summary>
        /// The worker pool variable associated with this deployment action.
        /// </summary>
        public readonly string? WorkerPoolVariable;

        [OutputConstructor]
        private RunbookProcessStepRunScriptAction(
            Outputs.RunbookProcessStepRunScriptActionActionTemplate? actionTemplate,

            bool? canBeUsedForProjectVersioning,

            ImmutableArray<string> channels,

            string? condition,

            ImmutableArray<Outputs.RunbookProcessStepRunScriptActionContainer> containers,

            ImmutableArray<string> environments,

            ImmutableArray<string> excludedEnvironments,

            ImmutableArray<string> features,

            Outputs.RunbookProcessStepRunScriptActionGitDependency? gitDependency,

            string? id,

            bool? isDisabled,

            bool? isRequired,

            string name,

            string? notes,

            ImmutableArray<Outputs.RunbookProcessStepRunScriptActionPackage> packages,

            Outputs.RunbookProcessStepRunScriptActionPrimaryPackage? primaryPackage,

            ImmutableDictionary<string, string>? properties,

            bool? runOnServer,

            string? scriptBody,

            string? scriptFileName,

            string? scriptParameters,

            string? scriptSource,

            string? scriptSyntax,

            string? slug,

            int? sortOrder,

            ImmutableArray<string> tenantTags,

            string? variableSubstitutionInFiles,

            string? workerPoolId,

            string? workerPoolVariable)
        {
            ActionTemplate = actionTemplate;
            CanBeUsedForProjectVersioning = canBeUsedForProjectVersioning;
            Channels = channels;
            Condition = condition;
            Containers = containers;
            Environments = environments;
            ExcludedEnvironments = excludedEnvironments;
            Features = features;
            GitDependency = gitDependency;
            Id = id;
            IsDisabled = isDisabled;
            IsRequired = isRequired;
            Name = name;
            Notes = notes;
            Packages = packages;
            PrimaryPackage = primaryPackage;
            Properties = properties;
            RunOnServer = runOnServer;
            ScriptBody = scriptBody;
            ScriptFileName = scriptFileName;
            ScriptParameters = scriptParameters;
            ScriptSource = scriptSource;
            ScriptSyntax = scriptSyntax;
            Slug = slug;
            SortOrder = sortOrder;
            TenantTags = tenantTags;
            VariableSubstitutionInFiles = variableSubstitutionInFiles;
            WorkerPoolId = workerPoolId;
            WorkerPoolVariable = workerPoolVariable;
        }
    }
}
