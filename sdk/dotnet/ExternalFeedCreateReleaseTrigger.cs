// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Octopusdeploy
{
    /// <summary>
    /// This resource manages External feed triggers (release creation type) in Octopus Deploy.
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import octopusdeploy:index/externalFeedCreateReleaseTrigger:ExternalFeedCreateReleaseTrigger [options] octopusdeploy_external_feed_create_release_trigger.&lt;name&gt; &lt;trigger-id&gt;
    /// ```
    /// </summary>
    [OctopusdeployResourceType("octopusdeploy:index/externalFeedCreateReleaseTrigger:ExternalFeedCreateReleaseTrigger")]
    public partial class ExternalFeedCreateReleaseTrigger : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the channel in which the release will be created if the action type is CreateRelease.
        /// </summary>
        [Output("channelId")]
        public Output<string> ChannelId { get; private set; } = null!;

        /// <summary>
        /// Disables the trigger from being run when set.
        /// </summary>
        [Output("isDisabled")]
        public Output<bool?> IsDisabled { get; private set; } = null!;

        /// <summary>
        /// The name of this resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// List of referenced packages that will cause the trigger to fire. New versions of any of the packages you select will trigger release creation.
        /// </summary>
        [Output("packages")]
        public Output<ImmutableArray<Outputs.ExternalFeedCreateReleaseTriggerPackage>> Packages { get; private set; } = null!;

        /// <summary>
        /// List of deployment actions for which the primary packages will cause the trigger to fire. New versions of any of the packages you select will trigger release creation.
        /// </summary>
        [Output("primaryPackages")]
        public Output<ImmutableArray<Outputs.ExternalFeedCreateReleaseTriggerPrimaryPackage>> PrimaryPackages { get; private set; } = null!;

        /// <summary>
        /// The ID of the project to attach the trigger.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The space ID associated with the project to attach the trigger.
        /// </summary>
        [Output("spaceId")]
        public Output<string?> SpaceId { get; private set; } = null!;


        /// <summary>
        /// Create a ExternalFeedCreateReleaseTrigger resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ExternalFeedCreateReleaseTrigger(string name, ExternalFeedCreateReleaseTriggerArgs args, CustomResourceOptions? options = null)
            : base("octopusdeploy:index/externalFeedCreateReleaseTrigger:ExternalFeedCreateReleaseTrigger", name, args ?? new ExternalFeedCreateReleaseTriggerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ExternalFeedCreateReleaseTrigger(string name, Input<string> id, ExternalFeedCreateReleaseTriggerState? state = null, CustomResourceOptions? options = null)
            : base("octopusdeploy:index/externalFeedCreateReleaseTrigger:ExternalFeedCreateReleaseTrigger", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/OctopusDeploy/terraform-provider-octopusdeploy/releases",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ExternalFeedCreateReleaseTrigger resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ExternalFeedCreateReleaseTrigger Get(string name, Input<string> id, ExternalFeedCreateReleaseTriggerState? state = null, CustomResourceOptions? options = null)
        {
            return new ExternalFeedCreateReleaseTrigger(name, id, state, options);
        }
    }

    public sealed class ExternalFeedCreateReleaseTriggerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the channel in which the release will be created if the action type is CreateRelease.
        /// </summary>
        [Input("channelId", required: true)]
        public Input<string> ChannelId { get; set; } = null!;

        /// <summary>
        /// Disables the trigger from being run when set.
        /// </summary>
        [Input("isDisabled")]
        public Input<bool>? IsDisabled { get; set; }

        /// <summary>
        /// The name of this resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("packages")]
        private InputList<Inputs.ExternalFeedCreateReleaseTriggerPackageArgs>? _packages;

        /// <summary>
        /// List of referenced packages that will cause the trigger to fire. New versions of any of the packages you select will trigger release creation.
        /// </summary>
        public InputList<Inputs.ExternalFeedCreateReleaseTriggerPackageArgs> Packages
        {
            get => _packages ?? (_packages = new InputList<Inputs.ExternalFeedCreateReleaseTriggerPackageArgs>());
            set => _packages = value;
        }

        [Input("primaryPackages")]
        private InputList<Inputs.ExternalFeedCreateReleaseTriggerPrimaryPackageArgs>? _primaryPackages;

        /// <summary>
        /// List of deployment actions for which the primary packages will cause the trigger to fire. New versions of any of the packages you select will trigger release creation.
        /// </summary>
        public InputList<Inputs.ExternalFeedCreateReleaseTriggerPrimaryPackageArgs> PrimaryPackages
        {
            get => _primaryPackages ?? (_primaryPackages = new InputList<Inputs.ExternalFeedCreateReleaseTriggerPrimaryPackageArgs>());
            set => _primaryPackages = value;
        }

        /// <summary>
        /// The ID of the project to attach the trigger.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// The space ID associated with the project to attach the trigger.
        /// </summary>
        [Input("spaceId")]
        public Input<string>? SpaceId { get; set; }

        public ExternalFeedCreateReleaseTriggerArgs()
        {
        }
        public static new ExternalFeedCreateReleaseTriggerArgs Empty => new ExternalFeedCreateReleaseTriggerArgs();
    }

    public sealed class ExternalFeedCreateReleaseTriggerState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the channel in which the release will be created if the action type is CreateRelease.
        /// </summary>
        [Input("channelId")]
        public Input<string>? ChannelId { get; set; }

        /// <summary>
        /// Disables the trigger from being run when set.
        /// </summary>
        [Input("isDisabled")]
        public Input<bool>? IsDisabled { get; set; }

        /// <summary>
        /// The name of this resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("packages")]
        private InputList<Inputs.ExternalFeedCreateReleaseTriggerPackageGetArgs>? _packages;

        /// <summary>
        /// List of referenced packages that will cause the trigger to fire. New versions of any of the packages you select will trigger release creation.
        /// </summary>
        public InputList<Inputs.ExternalFeedCreateReleaseTriggerPackageGetArgs> Packages
        {
            get => _packages ?? (_packages = new InputList<Inputs.ExternalFeedCreateReleaseTriggerPackageGetArgs>());
            set => _packages = value;
        }

        [Input("primaryPackages")]
        private InputList<Inputs.ExternalFeedCreateReleaseTriggerPrimaryPackageGetArgs>? _primaryPackages;

        /// <summary>
        /// List of deployment actions for which the primary packages will cause the trigger to fire. New versions of any of the packages you select will trigger release creation.
        /// </summary>
        public InputList<Inputs.ExternalFeedCreateReleaseTriggerPrimaryPackageGetArgs> PrimaryPackages
        {
            get => _primaryPackages ?? (_primaryPackages = new InputList<Inputs.ExternalFeedCreateReleaseTriggerPrimaryPackageGetArgs>());
            set => _primaryPackages = value;
        }

        /// <summary>
        /// The ID of the project to attach the trigger.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The space ID associated with the project to attach the trigger.
        /// </summary>
        [Input("spaceId")]
        public Input<string>? SpaceId { get; set; }

        public ExternalFeedCreateReleaseTriggerState()
        {
        }
        public static new ExternalFeedCreateReleaseTriggerState Empty => new ExternalFeedCreateReleaseTriggerState();
    }
}
