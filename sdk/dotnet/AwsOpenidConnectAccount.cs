// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Octopusdeploy
{
    /// <summary>
    /// This resource manages AWS OIDC accounts in Octopus Deploy.
    /// </summary>
    [OctopusdeployResourceType("octopusdeploy:index/awsOpenidConnectAccount:AwsOpenidConnectAccount")]
    public partial class AwsOpenidConnectAccount : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Keys to include in an account test. Valid options are: `space`, `account`, `type`
        /// </summary>
        [Output("accountTestSubjectKeys")]
        public Output<ImmutableArray<string>> AccountTestSubjectKeys { get; private set; } = null!;

        /// <summary>
        /// A user-friendly description of this AWS OIDC account.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// A list of environment IDs associated with this resource.
        /// </summary>
        [Output("environments")]
        public Output<ImmutableArray<string>> Environments { get; private set; } = null!;

        /// <summary>
        /// Keys to include in a deployment or runbook. Valid options are `space`, `environment`, `project`, `tenant`, `runbook`, `account`, `type`
        /// </summary>
        [Output("executionSubjectKeys")]
        public Output<ImmutableArray<string>> ExecutionSubjectKeys { get; private set; } = null!;

        /// <summary>
        /// Keys to include in a health check. Valid options are `space`, `account`, `target`, `type`
        /// </summary>
        [Output("healthSubjectKeys")]
        public Output<ImmutableArray<string>> HealthSubjectKeys { get; private set; } = null!;

        /// <summary>
        /// The name of this AWS OIDC account.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the role that the caller is assuming.
        /// </summary>
        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        /// <summary>
        /// The duration, in seconds, of the role session.
        /// </summary>
        [Output("sessionDuration")]
        public Output<int?> SessionDuration { get; private set; } = null!;

        /// <summary>
        /// The space ID associated with this resource.
        /// </summary>
        [Output("spaceId")]
        public Output<string> SpaceId { get; private set; } = null!;

        /// <summary>
        /// A list of tenant tags associated with this resource.
        /// </summary>
        [Output("tenantTags")]
        public Output<ImmutableArray<string>> TenantTags { get; private set; } = null!;

        /// <summary>
        /// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
        /// </summary>
        [Output("tenantedDeploymentParticipation")]
        public Output<string> TenantedDeploymentParticipation { get; private set; } = null!;

        /// <summary>
        /// A list of tenant IDs associated with this resource.
        /// </summary>
        [Output("tenants")]
        public Output<ImmutableArray<string>> Tenants { get; private set; } = null!;


        /// <summary>
        /// Create a AwsOpenidConnectAccount resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AwsOpenidConnectAccount(string name, AwsOpenidConnectAccountArgs args, CustomResourceOptions? options = null)
            : base("octopusdeploy:index/awsOpenidConnectAccount:AwsOpenidConnectAccount", name, args ?? new AwsOpenidConnectAccountArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AwsOpenidConnectAccount(string name, Input<string> id, AwsOpenidConnectAccountState? state = null, CustomResourceOptions? options = null)
            : base("octopusdeploy:index/awsOpenidConnectAccount:AwsOpenidConnectAccount", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/OctopusDeploy/terraform-provider-octopusdeploy/releases",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AwsOpenidConnectAccount resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AwsOpenidConnectAccount Get(string name, Input<string> id, AwsOpenidConnectAccountState? state = null, CustomResourceOptions? options = null)
        {
            return new AwsOpenidConnectAccount(name, id, state, options);
        }
    }

    public sealed class AwsOpenidConnectAccountArgs : global::Pulumi.ResourceArgs
    {
        [Input("accountTestSubjectKeys")]
        private InputList<string>? _accountTestSubjectKeys;

        /// <summary>
        /// Keys to include in an account test. Valid options are: `space`, `account`, `type`
        /// </summary>
        public InputList<string> AccountTestSubjectKeys
        {
            get => _accountTestSubjectKeys ?? (_accountTestSubjectKeys = new InputList<string>());
            set => _accountTestSubjectKeys = value;
        }

        /// <summary>
        /// A user-friendly description of this AWS OIDC account.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("environments")]
        private InputList<string>? _environments;

        /// <summary>
        /// A list of environment IDs associated with this resource.
        /// </summary>
        public InputList<string> Environments
        {
            get => _environments ?? (_environments = new InputList<string>());
            set => _environments = value;
        }

        [Input("executionSubjectKeys")]
        private InputList<string>? _executionSubjectKeys;

        /// <summary>
        /// Keys to include in a deployment or runbook. Valid options are `space`, `environment`, `project`, `tenant`, `runbook`, `account`, `type`
        /// </summary>
        public InputList<string> ExecutionSubjectKeys
        {
            get => _executionSubjectKeys ?? (_executionSubjectKeys = new InputList<string>());
            set => _executionSubjectKeys = value;
        }

        [Input("healthSubjectKeys")]
        private InputList<string>? _healthSubjectKeys;

        /// <summary>
        /// Keys to include in a health check. Valid options are `space`, `account`, `target`, `type`
        /// </summary>
        public InputList<string> HealthSubjectKeys
        {
            get => _healthSubjectKeys ?? (_healthSubjectKeys = new InputList<string>());
            set => _healthSubjectKeys = value;
        }

        /// <summary>
        /// The name of this AWS OIDC account.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the role that the caller is assuming.
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        /// <summary>
        /// The duration, in seconds, of the role session.
        /// </summary>
        [Input("sessionDuration")]
        public Input<int>? SessionDuration { get; set; }

        /// <summary>
        /// The space ID associated with this resource.
        /// </summary>
        [Input("spaceId")]
        public Input<string>? SpaceId { get; set; }

        [Input("tenantTags")]
        private InputList<string>? _tenantTags;

        /// <summary>
        /// A list of tenant tags associated with this resource.
        /// </summary>
        public InputList<string> TenantTags
        {
            get => _tenantTags ?? (_tenantTags = new InputList<string>());
            set => _tenantTags = value;
        }

        /// <summary>
        /// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
        /// </summary>
        [Input("tenantedDeploymentParticipation")]
        public Input<string>? TenantedDeploymentParticipation { get; set; }

        [Input("tenants")]
        private InputList<string>? _tenants;

        /// <summary>
        /// A list of tenant IDs associated with this resource.
        /// </summary>
        public InputList<string> Tenants
        {
            get => _tenants ?? (_tenants = new InputList<string>());
            set => _tenants = value;
        }

        public AwsOpenidConnectAccountArgs()
        {
        }
        public static new AwsOpenidConnectAccountArgs Empty => new AwsOpenidConnectAccountArgs();
    }

    public sealed class AwsOpenidConnectAccountState : global::Pulumi.ResourceArgs
    {
        [Input("accountTestSubjectKeys")]
        private InputList<string>? _accountTestSubjectKeys;

        /// <summary>
        /// Keys to include in an account test. Valid options are: `space`, `account`, `type`
        /// </summary>
        public InputList<string> AccountTestSubjectKeys
        {
            get => _accountTestSubjectKeys ?? (_accountTestSubjectKeys = new InputList<string>());
            set => _accountTestSubjectKeys = value;
        }

        /// <summary>
        /// A user-friendly description of this AWS OIDC account.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("environments")]
        private InputList<string>? _environments;

        /// <summary>
        /// A list of environment IDs associated with this resource.
        /// </summary>
        public InputList<string> Environments
        {
            get => _environments ?? (_environments = new InputList<string>());
            set => _environments = value;
        }

        [Input("executionSubjectKeys")]
        private InputList<string>? _executionSubjectKeys;

        /// <summary>
        /// Keys to include in a deployment or runbook. Valid options are `space`, `environment`, `project`, `tenant`, `runbook`, `account`, `type`
        /// </summary>
        public InputList<string> ExecutionSubjectKeys
        {
            get => _executionSubjectKeys ?? (_executionSubjectKeys = new InputList<string>());
            set => _executionSubjectKeys = value;
        }

        [Input("healthSubjectKeys")]
        private InputList<string>? _healthSubjectKeys;

        /// <summary>
        /// Keys to include in a health check. Valid options are `space`, `account`, `target`, `type`
        /// </summary>
        public InputList<string> HealthSubjectKeys
        {
            get => _healthSubjectKeys ?? (_healthSubjectKeys = new InputList<string>());
            set => _healthSubjectKeys = value;
        }

        /// <summary>
        /// The name of this AWS OIDC account.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the role that the caller is assuming.
        /// </summary>
        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        /// <summary>
        /// The duration, in seconds, of the role session.
        /// </summary>
        [Input("sessionDuration")]
        public Input<int>? SessionDuration { get; set; }

        /// <summary>
        /// The space ID associated with this resource.
        /// </summary>
        [Input("spaceId")]
        public Input<string>? SpaceId { get; set; }

        [Input("tenantTags")]
        private InputList<string>? _tenantTags;

        /// <summary>
        /// A list of tenant tags associated with this resource.
        /// </summary>
        public InputList<string> TenantTags
        {
            get => _tenantTags ?? (_tenantTags = new InputList<string>());
            set => _tenantTags = value;
        }

        /// <summary>
        /// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
        /// </summary>
        [Input("tenantedDeploymentParticipation")]
        public Input<string>? TenantedDeploymentParticipation { get; set; }

        [Input("tenants")]
        private InputList<string>? _tenants;

        /// <summary>
        /// A list of tenant IDs associated with this resource.
        /// </summary>
        public InputList<string> Tenants
        {
            get => _tenants ?? (_tenants = new InputList<string>());
            set => _tenants = value;
        }

        public AwsOpenidConnectAccountState()
        {
        }
        public static new AwsOpenidConnectAccountState Empty => new AwsOpenidConnectAccountState();
    }
}
