// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides information about existing variables.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as octopusdeploy from "@pulumi/octopusdeploy";
 *
 * const example = octopusdeploy.getVariables({});
 * ```
 */
export function getVariables(args: GetVariablesArgs, opts?: pulumi.InvokeOptions): Promise<GetVariablesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("octopusdeploy:index/getVariables:getVariables", {
        "name": args.name,
        "ownerId": args.ownerId,
        "scopes": args.scopes,
        "spaceId": args.spaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVariables.
 */
export interface GetVariablesArgs {
    /**
     * The name of variable to find.
     */
    name: string;
    /**
     * Owner ID for the variable to find.
     */
    ownerId: string;
    /**
     * As variable names can appear more than once under different scopes, a VariableScope must also be provided
     */
    scopes: inputs.GetVariablesScope[];
    /**
     * The space ID associated with this variable.
     */
    spaceId?: string;
}

/**
 * A collection of values returned by getVariables.
 */
export interface GetVariablesResult {
    /**
     * The description of this variable.
     */
    readonly description: string;
    /**
     * The identifier of the variable to find.
     */
    readonly id: string;
    /**
     * Indicates whether or not this variable is considered editable.
     */
    readonly isEditable: boolean;
    /**
     * Indicates whether or not this resource is considered sensitive and should be kept secret.
     */
    readonly isSensitive: boolean;
    /**
     * The name of variable to find.
     */
    readonly name: string;
    /**
     * Owner ID for the variable to find.
     */
    readonly ownerId: string;
    readonly prompts: outputs.GetVariablesPrompt[];
    /**
     * As variable names can appear more than once under different scopes, a VariableScope must also be provided
     */
    readonly scopes: outputs.GetVariablesScope[];
    readonly sensitiveValue: string;
    /**
     * The space ID associated with this variable.
     */
    readonly spaceId: string;
    /**
     * The type of variable represented by this resource. Valid types are `AmazonWebServicesAccount`, `AzureAccount`, `GoogleCloudAccount`, `UsernamePasswordAccount`, `Certificate`, `Sensitive`, `String`, `WorkerPool`.
     */
    readonly type: string;
    readonly value: string;
}
/**
 * Provides information about existing variables.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as octopusdeploy from "@pulumi/octopusdeploy";
 *
 * const example = octopusdeploy.getVariables({});
 * ```
 */
export function getVariablesOutput(args: GetVariablesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVariablesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("octopusdeploy:index/getVariables:getVariables", {
        "name": args.name,
        "ownerId": args.ownerId,
        "scopes": args.scopes,
        "spaceId": args.spaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVariables.
 */
export interface GetVariablesOutputArgs {
    /**
     * The name of variable to find.
     */
    name: pulumi.Input<string>;
    /**
     * Owner ID for the variable to find.
     */
    ownerId: pulumi.Input<string>;
    /**
     * As variable names can appear more than once under different scopes, a VariableScope must also be provided
     */
    scopes: pulumi.Input<pulumi.Input<inputs.GetVariablesScopeArgs>[]>;
    /**
     * The space ID associated with this variable.
     */
    spaceId?: pulumi.Input<string>;
}
