// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides information about existing tenants.
 */
export function getTenantProjects(args?: GetTenantProjectsArgs, opts?: pulumi.InvokeOptions): Promise<GetTenantProjectsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("octopusdeploy:index/getTenantProjects:getTenantProjects", {
        "environmentIds": args.environmentIds,
        "projectIds": args.projectIds,
        "spaceId": args.spaceId,
        "tenantIds": args.tenantIds,
    }, opts);
}

/**
 * A collection of arguments for invoking getTenantProjects.
 */
export interface GetTenantProjectsArgs {
    /**
     * A filter to search by a list of IDs.
     */
    environmentIds?: string[];
    /**
     * A filter to search by a list of IDs.
     */
    projectIds?: string[];
    /**
     * The space ID associated with this tenant projects.
     */
    spaceId?: string;
    /**
     * A filter to search by a list of IDs.
     */
    tenantIds?: string[];
}

/**
 * A collection of values returned by getTenantProjects.
 */
export interface GetTenantProjectsResult {
    /**
     * A filter to search by a list of IDs.
     */
    readonly environmentIds?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A filter to search by a list of IDs.
     */
    readonly projectIds?: string[];
    /**
     * The space ID associated with this tenant projects.
     */
    readonly spaceId: string;
    /**
     * A filter to search by a list of IDs.
     */
    readonly tenantIds?: string[];
    /**
     * A list of related tenants, projects and environments that match the filter(s).
     */
    readonly tenantProjects: outputs.GetTenantProjectsTenantProject[];
}
/**
 * Provides information about existing tenants.
 */
export function getTenantProjectsOutput(args?: GetTenantProjectsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTenantProjectsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("octopusdeploy:index/getTenantProjects:getTenantProjects", {
        "environmentIds": args.environmentIds,
        "projectIds": args.projectIds,
        "spaceId": args.spaceId,
        "tenantIds": args.tenantIds,
    }, opts);
}

/**
 * A collection of arguments for invoking getTenantProjects.
 */
export interface GetTenantProjectsOutputArgs {
    /**
     * A filter to search by a list of IDs.
     */
    environmentIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A filter to search by a list of IDs.
     */
    projectIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The space ID associated with this tenant projects.
     */
    spaceId?: pulumi.Input<string>;
    /**
     * A filter to search by a list of IDs.
     */
    tenantIds?: pulumi.Input<pulumi.Input<string>[]>;
}
