// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides information about existing script modules.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as octopusdeploy from "@pulumi/octopusdeploy";
 *
 * const example = octopusdeploy.getScriptModules({
 *     ids: [
 *         "LibraryVariableSets-123",
 *         "LibraryVariableSets-321",
 *     ],
 *     partialName: "Defau",
 *     skip: 5,
 *     take: 100,
 * });
 * ```
 */
export function getScriptModules(args?: GetScriptModulesArgs, opts?: pulumi.InvokeOptions): Promise<GetScriptModulesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("octopusdeploy:index/getScriptModules:getScriptModules", {
        "ids": args.ids,
        "partialName": args.partialName,
        "skip": args.skip,
        "spaceId": args.spaceId,
        "take": args.take,
    }, opts);
}

/**
 * A collection of arguments for invoking getScriptModules.
 */
export interface GetScriptModulesArgs {
    /**
     * A filter to search by a list of IDs.
     */
    ids?: string[];
    /**
     * A filter to search by a partial name.
     */
    partialName?: string;
    /**
     * A filter to specify the number of items to skip in the response.
     */
    skip?: number;
    /**
     * The space ID associated with this script module.
     */
    spaceId?: string;
    /**
     * A filter to specify the number of items to take (or return) in the response.
     */
    take?: number;
}

/**
 * A collection of values returned by getScriptModules.
 */
export interface GetScriptModulesResult {
    /**
     * The unique ID for this resource.
     */
    readonly id: string;
    /**
     * A filter to search by a list of IDs.
     */
    readonly ids?: string[];
    /**
     * A filter to search by a partial name.
     */
    readonly partialName?: string;
    readonly scriptModules: outputs.GetScriptModulesScriptModule[];
    /**
     * A filter to specify the number of items to skip in the response.
     */
    readonly skip?: number;
    /**
     * The space ID associated with this script module.
     */
    readonly spaceId: string;
    /**
     * A filter to specify the number of items to take (or return) in the response.
     */
    readonly take?: number;
}
/**
 * Provides information about existing script modules.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as octopusdeploy from "@pulumi/octopusdeploy";
 *
 * const example = octopusdeploy.getScriptModules({
 *     ids: [
 *         "LibraryVariableSets-123",
 *         "LibraryVariableSets-321",
 *     ],
 *     partialName: "Defau",
 *     skip: 5,
 *     take: 100,
 * });
 * ```
 */
export function getScriptModulesOutput(args?: GetScriptModulesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetScriptModulesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("octopusdeploy:index/getScriptModules:getScriptModules", {
        "ids": args.ids,
        "partialName": args.partialName,
        "skip": args.skip,
        "spaceId": args.spaceId,
        "take": args.take,
    }, opts);
}

/**
 * A collection of arguments for invoking getScriptModules.
 */
export interface GetScriptModulesOutputArgs {
    /**
     * A filter to search by a list of IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A filter to search by a partial name.
     */
    partialName?: pulumi.Input<string>;
    /**
     * A filter to specify the number of items to skip in the response.
     */
    skip?: pulumi.Input<number>;
    /**
     * The space ID associated with this script module.
     */
    spaceId?: pulumi.Input<string>;
    /**
     * A filter to specify the number of items to take (or return) in the response.
     */
    take?: pulumi.Input<number>;
}
