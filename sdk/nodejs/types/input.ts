// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface EnvironmentJiraExtensionSetting {
    /**
     * The Jira environment type of this Octopus deployment environment. Valid values are `"development"`, `"production"`, `"staging"`, `"testing"`, `"unmapped"`.
     */
    environmentType?: pulumi.Input<string>;
}

export interface EnvironmentJiraServiceManagementExtensionSetting {
    /**
     * Specifies whether or not this extension is enabled for this project.
     */
    isEnabled?: pulumi.Input<boolean>;
}

export interface EnvironmentServicenowExtensionSetting {
    /**
     * Specifies whether or not this extension is enabled for this project.
     */
    isEnabled?: pulumi.Input<boolean>;
}

export interface GetVariablesScope {
    /**
     * A list of actions that are scoped to this variable value.
     */
    actions?: string[];
    /**
     * A list of channels that are scoped to this variable value.
     */
    channels?: string[];
    /**
     * A list of environments that are scoped to this variable value.
     */
    environments?: string[];
    /**
     * A list of machines that are scoped to this variable value.
     */
    machines?: string[];
    /**
     * A list of processes that are scoped to this variable value.
     */
    processes?: string[];
    /**
     * A list of roles that are scoped to this variable value.
     */
    roles?: string[];
    /**
     * A list of tenant tags that are scoped to this variable value.
     */
    tenantTags?: string[];
}

export interface GetVariablesScopeArgs {
    /**
     * A list of actions that are scoped to this variable value.
     */
    actions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of channels that are scoped to this variable value.
     */
    channels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of environments that are scoped to this variable value.
     */
    environments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of machines that are scoped to this variable value.
     */
    machines?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of processes that are scoped to this variable value.
     */
    processes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of roles that are scoped to this variable value.
     */
    roles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of tenant tags that are scoped to this variable value.
     */
    tenantTags?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LibraryVariableSetTemplate {
    /**
     * A default value for the parameter, if applicable. This can be a hard-coded value or a variable reference.
     */
    defaultValue?: pulumi.Input<string>;
    /**
     * The display settings for the parameter.
     */
    displaySettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The help presented alongside the parameter input.
     */
    helpText?: pulumi.Input<string>;
    /**
     * The unique ID for this resource.
     */
    id?: pulumi.Input<string>;
    /**
     * The label shown beside the parameter when presented in the deployment process. Example: `Server name`.
     */
    label?: pulumi.Input<string>;
    /**
     * The name of the variable set by the parameter. The name can contain letters, digits, dashes and periods. Example: `ServerName`
     */
    name: pulumi.Input<string>;
}

export interface LifecyclePhase {
    /**
     * Environment IDs in this phase that a release is automatically deployed to when it is eligible for this phase
     */
    automaticDeploymentTargets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The unique ID for this resource.
     */
    id?: pulumi.Input<string>;
    /**
     * If false a release must be deployed to this phase before it can be deployed to the next phase.
     */
    isOptionalPhase?: pulumi.Input<boolean>;
    /**
     * The number of units required before a release can enter the next phase. If 0, all environments are required.
     */
    minimumEnvironmentsBeforePromotion?: pulumi.Input<number>;
    /**
     * The name of this resource.
     */
    name: pulumi.Input<string>;
    /**
     * Environment IDs in this phase that a release can be deployed to, but is not automatically deployed to
     */
    optionalDeploymentTargets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Defines the retention policy for releases or tentacles.
     */
    releaseRetentionPolicies?: pulumi.Input<pulumi.Input<inputs.LifecyclePhaseReleaseRetentionPolicy>[]>;
    /**
     * Defines the retention policy for releases or tentacles.
     */
    tentacleRetentionPolicies?: pulumi.Input<pulumi.Input<inputs.LifecyclePhaseTentacleRetentionPolicy>[]>;
}

export interface LifecyclePhaseReleaseRetentionPolicy {
    /**
     * The number of days/releases to keep. The default value is 30. If 0 then all are kept.
     */
    quantityToKeep?: pulumi.Input<number>;
    /**
     * Indicates if items should never be deleted. The default value is false.
     */
    shouldKeepForever?: pulumi.Input<boolean>;
    /**
     * The unit of quantity to keep. Valid units are Days or Items. The default value is Days.
     */
    unit?: pulumi.Input<string>;
}

export interface LifecyclePhaseTentacleRetentionPolicy {
    /**
     * The number of days/releases to keep. The default value is 30. If 0 then all are kept.
     */
    quantityToKeep?: pulumi.Input<number>;
    /**
     * Indicates if items should never be deleted. The default value is false.
     */
    shouldKeepForever?: pulumi.Input<boolean>;
    /**
     * The unit of quantity to keep. Valid units are Days or Items. The default value is Days.
     */
    unit?: pulumi.Input<string>;
}

export interface LifecycleReleaseRetentionPolicy {
    /**
     * The number of days/releases to keep. The default value is 30. If 0 then all are kept.
     */
    quantityToKeep?: pulumi.Input<number>;
    /**
     * Indicates if items should never be deleted. The default value is false.
     */
    shouldKeepForever?: pulumi.Input<boolean>;
    /**
     * The unit of quantity to keep. Valid units are Days or Items. The default value is Days.
     */
    unit?: pulumi.Input<string>;
}

export interface LifecycleTentacleRetentionPolicy {
    /**
     * The number of days/releases to keep. The default value is 30. If 0 then all are kept.
     */
    quantityToKeep?: pulumi.Input<number>;
    /**
     * Indicates if items should never be deleted. The default value is false.
     */
    shouldKeepForever?: pulumi.Input<boolean>;
    /**
     * The unit of quantity to keep. Valid units are Days or Items. The default value is Days.
     */
    unit?: pulumi.Input<string>;
}

export interface ProjectAutoDeployReleaseOverride {
    environmentId?: pulumi.Input<string>;
    releaseId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
}

export interface ProjectConnectivityPolicy {
    allowDeploymentsToNoTargets?: pulumi.Input<boolean>;
    excludeUnhealthyTargets?: pulumi.Input<boolean>;
    skipMachineBehavior?: pulumi.Input<string>;
    targetRoles?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProjectGitAnonymousPersistenceSetting {
    /**
     * The base path associated with these version control settings.
     */
    basePath?: pulumi.Input<string>;
    /**
     * The default branch associated with these version control settings.
     */
    defaultBranch?: pulumi.Input<string>;
    /**
     * A list of protected branch patterns.
     */
    protectedBranches?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The URL associated with these version control settings.
     */
    url: pulumi.Input<string>;
}

export interface ProjectGitLibraryPersistenceSetting {
    /**
     * The base path associated with these version control settings.
     */
    basePath?: pulumi.Input<string>;
    /**
     * The default branch associated with these version control settings.
     */
    defaultBranch?: pulumi.Input<string>;
    gitCredentialId: pulumi.Input<string>;
    /**
     * A list of protected branch patterns.
     */
    protectedBranches?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The URL associated with these version control settings.
     */
    url: pulumi.Input<string>;
}

export interface ProjectGitUsernamePasswordPersistenceSetting {
    /**
     * The base path associated with these version control settings.
     */
    basePath?: pulumi.Input<string>;
    /**
     * The default branch associated with these version control settings.
     */
    defaultBranch?: pulumi.Input<string>;
    /**
     * The password for the Git credential
     */
    password: pulumi.Input<string>;
    /**
     * A list of protected branch patterns.
     */
    protectedBranches?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The URL associated with these version control settings.
     */
    url: pulumi.Input<string>;
    /**
     * The username for the Git credential.
     */
    username: pulumi.Input<string>;
}

export interface ProjectJiraServiceManagementExtensionSetting {
    /**
     * The connection identifier associated with the extension settings.
     */
    connectionId: pulumi.Input<string>;
    /**
     * Specifies whether or not this extension is enabled for this project.
     */
    isEnabled: pulumi.Input<boolean>;
    /**
     * The project name associated with this extension.
     */
    serviceDeskProjectName: pulumi.Input<string>;
}

export interface ProjectReleaseCreationStrategy {
    channelId?: pulumi.Input<string>;
    releaseCreationPackageStepId?: pulumi.Input<string>;
    releaseCreationPackages?: pulumi.Input<pulumi.Input<inputs.ProjectReleaseCreationStrategyReleaseCreationPackage>[]>;
}

export interface ProjectReleaseCreationStrategyReleaseCreationPackage {
    deploymentAction?: pulumi.Input<string>;
    packageReference?: pulumi.Input<string>;
}

export interface ProjectServicenowExtensionSetting {
    /**
     * The connection identifier associated with the extension settings.
     */
    connectionId: pulumi.Input<string>;
    /**
     * Specifies whether or not this extension is enabled for this project.
     */
    isEnabled: pulumi.Input<boolean>;
    /**
     * Specifies whether or not this extension will automatically transition the state of a deployment for this project.
     */
    isStateAutomaticallyTransitioned: pulumi.Input<boolean>;
    /**
     * The name of the standard change template associated with this extension. If provided, deployments will create a standard change based on the provided template, otherwise a normal change will be created.
     */
    standardChangeTemplateName?: pulumi.Input<string>;
}

export interface ProjectTemplate {
    /**
     * A default value for the parameter, if applicable. This can be a hard-coded value or a variable reference.
     */
    defaultValue?: pulumi.Input<string>;
    /**
     * The display settings for the parameter.
     */
    displaySettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The help presented alongside the parameter input.
     */
    helpText?: pulumi.Input<string>;
    /**
     * The ID of the template parameter.
     */
    id?: pulumi.Input<string>;
    /**
     * The label shown beside the parameter when presented in the deployment process.
     */
    label?: pulumi.Input<string>;
    /**
     * The name of the variable set by the parameter. The name can contain letters, digits, dashes and periods.
     */
    name: pulumi.Input<string>;
}

export interface ProjectVersioningStrategy {
    donorPackageStepId?: pulumi.Input<string>;
    donorPackages?: pulumi.Input<pulumi.Input<inputs.ProjectVersioningStrategyDonorPackage>[]>;
    template?: pulumi.Input<string>;
}

export interface ProjectVersioningStrategyDonorPackage {
    deploymentAction?: pulumi.Input<string>;
    packageReference?: pulumi.Input<string>;
}

export interface RunbookConnectivityPolicy {
    allowDeploymentsToNoTargets?: pulumi.Input<boolean>;
    excludeUnhealthyTargets?: pulumi.Input<boolean>;
    skipMachineBehavior?: pulumi.Input<string>;
    targetRoles?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RunbookRetentionPolicy {
    /**
     * How many runs to keep per environment.
     */
    quantityToKeep?: pulumi.Input<number>;
    /**
     * Indicates if items should never be deleted. The default value is `false`.
     */
    shouldKeepForever?: pulumi.Input<boolean>;
}

export interface ScriptModuleScript {
    /**
     * The body of this script module.
     */
    body: pulumi.Input<string>;
    /**
     * The syntax of the script. Valid types are `Bash`, `CSharp`, `FSharp`, `PowerShell`, or `Python`.
     */
    syntax: pulumi.Input<string>;
}

export interface VariablePrompt {
    /**
     * The description of this variable prompt option.
     */
    description?: pulumi.Input<string>;
    displaySettings?: pulumi.Input<inputs.VariablePromptDisplaySettings>;
    isRequired?: pulumi.Input<boolean>;
    label?: pulumi.Input<string>;
}

export interface VariablePromptDisplaySettings {
    /**
     * The type of control for rendering this prompted variable. Valid types are `SingleLineText`, `MultiLineText`, `Checkbox`, `Select`.
     */
    controlType: pulumi.Input<string>;
    /**
     * If the `controlType` is `Select`, then this value defines an option.
     */
    selectOptions?: pulumi.Input<pulumi.Input<inputs.VariablePromptDisplaySettingsSelectOption>[]>;
}

export interface VariablePromptDisplaySettingsSelectOption {
    /**
     * The display name for the select value
     */
    displayName: pulumi.Input<string>;
    /**
     * The select value
     */
    value: pulumi.Input<string>;
}

export interface VariableScope {
    /**
     * A list of actions that are scoped to this variable value.
     */
    actions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of channels that are scoped to this variable value.
     */
    channels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of environments that are scoped to this variable value.
     */
    environments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of machines that are scoped to this variable value.
     */
    machines?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of processes that are scoped to this variable value.
     */
    processes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of roles that are scoped to this variable value.
     */
    roles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of tenant tags that are scoped to this variable value.
     */
    tenantTags?: pulumi.Input<pulumi.Input<string>[]>;
}
