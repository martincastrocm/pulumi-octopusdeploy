{
    "name": "octopusdeploy",
    "displayName": "Octopus Deploy",
    "description": "A Pulumi package for creating and managing octopusdeploy resources.",
    "keywords": [
        "martincastrocm",
        "octopusdeploy",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`octopusdeploy` Terraform Provider](https://github.com/OctopusDeploy/terraform-provider-octopusdeploy).",
    "repository": "https://github.com/pulumi/pulumi-octopus",
    "pluginDownloadURL": "https://github.com/OctopusDeploy/terraform-provider-octopusdeploy/releases",
    "publisher": "martincastrocm",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20"
        },
        "go": {
            "importBasePath": "github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageDescription": "A Pulumi package for creating and managing octopusdeploy resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/OctopusDeploy/terraform-provider-octopusdeploy)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-octopusdeploy` repo](https://github.com/pulumi/pulumi-octopus/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-octopusdeploy` repo](https://github.com/OctopusDeploy/terraform-provider-octopusdeploy/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/OctopusDeploy/terraform-provider-octopusdeploy)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-octopusdeploy` repo](https://github.com/pulumi/pulumi-octopus/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-octopusdeploy` repo](https://github.com/OctopusDeploy/terraform-provider-octopusdeploy/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "address": {
                "type": "string",
                "description": "The endpoint of the Octopus REST API\n"
            },
            "apiKey": {
                "type": "string",
                "description": "The API key to use with the Octopus REST API\n"
            },
            "spaceId": {
                "type": "string",
                "description": "The space ID to target\n"
            }
        }
    },
    "types": {
        "octopusdeploy:index/AzureCloudServiceDeploymentTargetEndpoint:AzureCloudServiceDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/AzureCloudServiceDeploymentTargetEndpointAuthentication:AzureCloudServiceDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterCertificatePath": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containerOptions": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureCloudServiceDeploymentTargetEndpointContainer:AzureCloudServiceDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureCloudServiceDeploymentTargetEndpointDestination:AzureCloudServiceDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureCloudServiceDeploymentTargetEndpointTentacleVersionDetail:AzureCloudServiceDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "communicationStyle"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authentication",
                        "communicationStyle",
                        "containers",
                        "destinations",
                        "id",
                        "tentacleVersionDetails"
                    ]
                }
            }
        },
        "octopusdeploy:index/AzureCloudServiceDeploymentTargetEndpointAuthentication:AzureCloudServiceDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "tokenPath": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/AzureCloudServiceDeploymentTargetEndpointContainer:AzureCloudServiceDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/AzureCloudServiceDeploymentTargetEndpointDestination:AzureCloudServiceDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/AzureCloudServiceDeploymentTargetEndpointTentacleVersionDetail:AzureCloudServiceDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "upgradeLocked",
                        "upgradeRequired",
                        "upgradeSuggested",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/AzureServiceFabricClusterDeploymentTargetEndpoint:AzureServiceFabricClusterDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/AzureServiceFabricClusterDeploymentTargetEndpointAuthentication:AzureServiceFabricClusterDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterCertificatePath": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containerOptions": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureServiceFabricClusterDeploymentTargetEndpointContainer:AzureServiceFabricClusterDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureServiceFabricClusterDeploymentTargetEndpointDestination:AzureServiceFabricClusterDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureServiceFabricClusterDeploymentTargetEndpointTentacleVersionDetail:AzureServiceFabricClusterDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "communicationStyle"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authentication",
                        "communicationStyle",
                        "containers",
                        "destinations",
                        "id",
                        "tentacleVersionDetails"
                    ]
                }
            }
        },
        "octopusdeploy:index/AzureServiceFabricClusterDeploymentTargetEndpointAuthentication:AzureServiceFabricClusterDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "tokenPath": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/AzureServiceFabricClusterDeploymentTargetEndpointContainer:AzureServiceFabricClusterDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/AzureServiceFabricClusterDeploymentTargetEndpointDestination:AzureServiceFabricClusterDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/AzureServiceFabricClusterDeploymentTargetEndpointTentacleVersionDetail:AzureServiceFabricClusterDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "upgradeLocked",
                        "upgradeRequired",
                        "upgradeSuggested",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/AzureWebAppDeploymentTargetEndpoint:AzureWebAppDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/AzureWebAppDeploymentTargetEndpointAuthentication:AzureWebAppDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterCertificatePath": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containerOptions": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureWebAppDeploymentTargetEndpointContainer:AzureWebAppDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureWebAppDeploymentTargetEndpointDestination:AzureWebAppDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureWebAppDeploymentTargetEndpointTentacleVersionDetail:AzureWebAppDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "communicationStyle"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authentication",
                        "communicationStyle",
                        "containers",
                        "destinations",
                        "id",
                        "tentacleVersionDetails"
                    ]
                }
            }
        },
        "octopusdeploy:index/AzureWebAppDeploymentTargetEndpointAuthentication:AzureWebAppDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "tokenPath": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/AzureWebAppDeploymentTargetEndpointContainer:AzureWebAppDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/AzureWebAppDeploymentTargetEndpointDestination:AzureWebAppDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/AzureWebAppDeploymentTargetEndpointTentacleVersionDetail:AzureWebAppDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "upgradeLocked",
                        "upgradeRequired",
                        "upgradeSuggested",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/ChannelRule:ChannelRule": {
            "properties": {
                "actionPackages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ChannelRuleActionPackage:ChannelRuleActionPackage"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "tag": {
                    "type": "string"
                },
                "versionRange": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "actionPackages"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionPackages",
                        "id"
                    ]
                }
            }
        },
        "octopusdeploy:index/ChannelRuleActionPackage:ChannelRuleActionPackage": {
            "properties": {
                "deploymentAction": {
                    "type": "string"
                },
                "packageReference": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/CloudRegionDeploymentTargetEndpoint:CloudRegionDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/CloudRegionDeploymentTargetEndpointAuthentication:CloudRegionDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterCertificatePath": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containerOptions": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/CloudRegionDeploymentTargetEndpointContainer:CloudRegionDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/CloudRegionDeploymentTargetEndpointDestination:CloudRegionDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/CloudRegionDeploymentTargetEndpointTentacleVersionDetail:CloudRegionDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "communicationStyle"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authentication",
                        "communicationStyle",
                        "containers",
                        "destinations",
                        "id",
                        "tentacleVersionDetails"
                    ]
                }
            }
        },
        "octopusdeploy:index/CloudRegionDeploymentTargetEndpointAuthentication:CloudRegionDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "tokenPath": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/CloudRegionDeploymentTargetEndpointContainer:CloudRegionDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/CloudRegionDeploymentTargetEndpointDestination:CloudRegionDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/CloudRegionDeploymentTargetEndpointTentacleVersionDetail:CloudRegionDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "upgradeLocked",
                        "upgradeRequired",
                        "upgradeSuggested",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStep:DeploymentProcessStep": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepAction:DeploymentProcessStepAction"
                    }
                },
                "applyTerraformTemplateActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateAction:DeploymentProcessStepApplyTerraformTemplateAction"
                    },
                    "description": "(see below for nested schema)\n"
                },
                "condition": {
                    "type": "string",
                    "description": "When to run the step, one of 'Success', 'Failure', 'Always' or 'Variable'\n"
                },
                "conditionExpression": {
                    "type": "string",
                    "description": "The expression to evaluate to determine whether to run this step when 'condition' is 'Variable'\n"
                },
                "deployKubernetesSecretActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployKubernetesSecretAction:DeploymentProcessStepDeployKubernetesSecretAction"
                    }
                },
                "deployPackageActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployPackageAction:DeploymentProcessStepDeployPackageAction"
                    }
                },
                "deployWindowsServiceActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployWindowsServiceAction:DeploymentProcessStepDeployWindowsServiceAction"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "manualInterventionActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepManualInterventionAction:DeploymentProcessStepManualInterventionAction"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageRequirement": {
                    "type": "string",
                    "description": "Whether to run this step before or after package acquisition (if possible)\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "runKubectlScriptActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepRunKubectlScriptAction:DeploymentProcessStepRunKubectlScriptAction"
                    }
                },
                "runScriptActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepRunScriptAction:DeploymentProcessStepRunScriptAction"
                    }
                },
                "startTrigger": {
                    "type": "string",
                    "description": "Whether to run this step after the previous step ('StartAfterPrevious') or at the same time as the previous step ('StartWithPrevious')\n"
                },
                "targetRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The roles that this step run against, or runs on behalf of\n"
                },
                "windowSize": {
                    "type": "string",
                    "description": "The maximum number of targets to deploy to simultaneously\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "conditionExpression",
                        "id",
                        "name",
                        "properties",
                        "targetRoles"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepAction:DeploymentProcessStepAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepActionActionTemplate:DeploymentProcessStepActionActionTemplate",
                    "description": "Represents the template that is associated with this action.\n"
                },
                "actionType": {
                    "type": "string",
                    "description": "The type of action\n"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The channels associated with this deployment action.\n"
                },
                "condition": {
                    "type": "string",
                    "description": "The condition associated with this deployment action.\n"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepActionContainer:DeploymentProcessStepActionContainer"
                    },
                    "description": "The deployment action container associated with this deployment action.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments within which this deployment action will run.\n"
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments that this step will be skipped in\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of enabled features for this action.\n"
                },
                "gitDependency": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepActionGitDependency:DeploymentProcessStepActionGitDependency",
                    "description": "Configuration for resource sourcing from a git repository.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Indicates the disabled status of this deployment action.\n"
                },
                "isRequired": {
                    "type": "boolean",
                    "description": "Indicates the required status of this deployment action.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "The notes associated with this deployment action.\n"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepActionPackage:DeploymentProcessStepActionPackage"
                    },
                    "description": "The package assocated with this action.\n"
                },
                "primaryPackage": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepActionPrimaryPackage:DeploymentProcessStepActionPrimaryPackage",
                    "description": "The package assocated with this action.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                },
                "runOnServer": {
                    "type": "boolean",
                    "description": "Whether this step runs on a worker or on the target\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The human-readable unique identifier for this resource.\n"
                },
                "sortOrder": {
                    "type": "integer"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "workerPoolId": {
                    "type": "string",
                    "description": "The worker pool associated with this deployment action.\n"
                },
                "workerPoolVariable": {
                    "type": "string",
                    "description": "The worker pool variable associated with this deployment action.\n"
                }
            },
            "type": "object",
            "required": [
                "actionType",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "actionType",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "gitDependency",
                        "id",
                        "name",
                        "packages",
                        "primaryPackage",
                        "properties",
                        "slug",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepActionActionTemplate:DeploymentProcessStepActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepActionContainer:DeploymentProcessStepActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepActionGitDependency:DeploymentProcessStepActionGitDependency": {
            "properties": {
                "defaultBranch": {
                    "type": "string",
                    "description": "Name of the default branch of the repository.\n"
                },
                "filePathFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of file path filters used to narrow down the directory where files are to be sourced from. Supports glob patten syntax.\n"
                },
                "gitCredentialId": {
                    "type": "string",
                    "description": "ID of an existing Git credential.\n"
                },
                "gitCredentialType": {
                    "type": "string",
                    "description": "The Git credential authentication type.\n"
                },
                "repositoryUri": {
                    "type": "string",
                    "description": "The Git URI for the repository where this resource is sourced from.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultBranch",
                "gitCredentialType",
                "repositoryUri"
            ]
        },
        "octopusdeploy:index/DeploymentProcessStepActionPackage:DeploymentProcessStepActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "extractDuringDeployment": {
                    "type": "boolean",
                    "description": "Whether to extract the package during deployment\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "extractDuringDeployment",
                        "id",
                        "name",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepActionPrimaryPackage:DeploymentProcessStepActionPrimaryPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateAction:DeploymentProcessStepApplyTerraformTemplateAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionActionTemplate:DeploymentProcessStepApplyTerraformTemplateActionActionTemplate",
                    "description": "Represents the template that is associated with this action.\n"
                },
                "advancedOptions": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionAdvancedOptions:DeploymentProcessStepApplyTerraformTemplateActionAdvancedOptions"
                },
                "awsAccount": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionAwsAccount:DeploymentProcessStepApplyTerraformTemplateActionAwsAccount",
                    "description": "(see below for nested schema)\n"
                },
                "azureAccount": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionAzureAccount:DeploymentProcessStepApplyTerraformTemplateActionAzureAccount",
                    "description": "(see below for nested schema)\n"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The channels associated with this deployment action.\n"
                },
                "condition": {
                    "type": "string",
                    "description": "The condition associated with this deployment action.\n"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionContainer:DeploymentProcessStepApplyTerraformTemplateActionContainer"
                    },
                    "description": "The deployment action container associated with this deployment action.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments within which this deployment action will run.\n"
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments that this step will be skipped in\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of enabled features for this action.\n"
                },
                "gitDependency": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionGitDependency:DeploymentProcessStepApplyTerraformTemplateActionGitDependency",
                    "description": "Configuration for resource sourcing from a git repository.\n"
                },
                "googleCloudAccount": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionGoogleCloudAccount:DeploymentProcessStepApplyTerraformTemplateActionGoogleCloudAccount",
                    "description": "(see below for nested schema)\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "inlineTemplate": {
                    "type": "string"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Indicates the disabled status of this deployment action.\n"
                },
                "isRequired": {
                    "type": "boolean",
                    "description": "Indicates the required status of this deployment action.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "The notes associated with this deployment action.\n"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionPackage:DeploymentProcessStepApplyTerraformTemplateActionPackage"
                    },
                    "description": "The package assocated with this action.\n"
                },
                "primaryPackage": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionPrimaryPackage:DeploymentProcessStepApplyTerraformTemplateActionPrimaryPackage",
                    "description": "The package assocated with this action.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                },
                "runOnServer": {
                    "type": "boolean",
                    "description": "Whether this step runs on a worker or on the target\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The human-readable unique identifier for this resource.\n"
                },
                "sortOrder": {
                    "type": "integer"
                },
                "template": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionTemplate:DeploymentProcessStepApplyTerraformTemplateActionTemplate",
                    "description": "(see below for nested schema)\n"
                },
                "templateParameters": {
                    "type": "string"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "workerPoolId": {
                    "type": "string",
                    "description": "The worker pool associated with this deployment action.\n"
                },
                "workerPoolVariable": {
                    "type": "string",
                    "description": "The worker pool variable associated with this deployment action.\n"
                }
            },
            "type": "object",
            "required": [
                "advancedOptions",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "advancedOptions",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "gitDependency",
                        "id",
                        "name",
                        "packages",
                        "primaryPackage",
                        "properties",
                        "slug",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionActionTemplate:DeploymentProcessStepApplyTerraformTemplateActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionAdvancedOptions:DeploymentProcessStepApplyTerraformTemplateActionAdvancedOptions": {
            "properties": {
                "allowAdditionalPluginDownloads": {
                    "type": "boolean"
                },
                "applyParameters": {
                    "type": "string"
                },
                "initParameters": {
                    "type": "string"
                },
                "pluginCacheDirectory": {
                    "type": "string"
                },
                "workspace": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionAwsAccount:DeploymentProcessStepApplyTerraformTemplateActionAwsAccount": {
            "properties": {
                "region": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionAwsAccountRole:DeploymentProcessStepApplyTerraformTemplateActionAwsAccountRole",
                    "description": "(see below for nested schema)\n"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "variable": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionAwsAccountRole:DeploymentProcessStepApplyTerraformTemplateActionAwsAccountRole": {
            "properties": {
                "arn": {
                    "type": "string"
                },
                "externalId": {
                    "type": "string"
                },
                "roleSessionName": {
                    "type": "string"
                },
                "sessionDuration": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionAzureAccount:DeploymentProcessStepApplyTerraformTemplateActionAzureAccount": {
            "properties": {
                "variable": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionContainer:DeploymentProcessStepApplyTerraformTemplateActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionGitDependency:DeploymentProcessStepApplyTerraformTemplateActionGitDependency": {
            "properties": {
                "defaultBranch": {
                    "type": "string",
                    "description": "Name of the default branch of the repository.\n"
                },
                "filePathFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of file path filters used to narrow down the directory where files are to be sourced from. Supports glob patten syntax.\n"
                },
                "gitCredentialId": {
                    "type": "string",
                    "description": "ID of an existing Git credential.\n"
                },
                "gitCredentialType": {
                    "type": "string",
                    "description": "The Git credential authentication type.\n"
                },
                "repositoryUri": {
                    "type": "string",
                    "description": "The Git URI for the repository where this resource is sourced from.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultBranch",
                "gitCredentialType",
                "repositoryUri"
            ]
        },
        "octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionGoogleCloudAccount:DeploymentProcessStepApplyTerraformTemplateActionGoogleCloudAccount": {
            "properties": {
                "impersonateServiceAccount": {
                    "type": "boolean",
                    "description": "Impersonate service accounts\n"
                },
                "project": {
                    "type": "string",
                    "description": "This sets GOOGLE_PROJECT environment variable\n"
                },
                "region": {
                    "type": "string",
                    "description": "This sets GOOGLE_REGION environment variable\n"
                },
                "serviceAccountEmails": {
                    "type": "string",
                    "description": "This sets GOOGLE*IMPERSONATE*SERVICE_ACCOUNT environment variable\n"
                },
                "useVmServiceAccount": {
                    "type": "boolean",
                    "description": "When running in a Compute Engine virtual machine, use the associated VM service account\n"
                },
                "variable": {
                    "type": "string"
                },
                "zone": {
                    "type": "string",
                    "description": "This sets GOOGLE_ZONE environment variable\n"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionPackage:DeploymentProcessStepApplyTerraformTemplateActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionPrimaryPackage:DeploymentProcessStepApplyTerraformTemplateActionPrimaryPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionTemplate:DeploymentProcessStepApplyTerraformTemplateActionTemplate": {
            "properties": {
                "additionalVariableFiles": {
                    "type": "string"
                },
                "directory": {
                    "type": "string"
                },
                "runAutomaticFileSubstitution": {
                    "type": "boolean"
                },
                "targetFiles": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepDeployKubernetesSecretAction:DeploymentProcessStepDeployKubernetesSecretAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployKubernetesSecretActionActionTemplate:DeploymentProcessStepDeployKubernetesSecretActionActionTemplate",
                    "description": "Represents the template that is associated with this action.\n"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The channels associated with this deployment action.\n"
                },
                "condition": {
                    "type": "string",
                    "description": "The condition associated with this deployment action.\n"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployKubernetesSecretActionContainer:DeploymentProcessStepDeployKubernetesSecretActionContainer"
                    },
                    "description": "The deployment action container associated with this deployment action.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments within which this deployment action will run.\n"
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments that this step will be skipped in\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of enabled features for this action.\n"
                },
                "gitDependency": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployKubernetesSecretActionGitDependency:DeploymentProcessStepDeployKubernetesSecretActionGitDependency",
                    "description": "Configuration for resource sourcing from a git repository.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Indicates the disabled status of this deployment action.\n"
                },
                "isRequired": {
                    "type": "boolean",
                    "description": "Indicates the required status of this deployment action.\n"
                },
                "kubernetesObjectStatusCheckEnabled": {
                    "type": "boolean",
                    "description": "Indicates the status of the Kubernetes Object Status feature\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "The notes associated with this deployment action.\n"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployKubernetesSecretActionPackage:DeploymentProcessStepDeployKubernetesSecretActionPackage"
                    },
                    "description": "The package assocated with this action.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                },
                "runOnServer": {
                    "type": "boolean",
                    "description": "Whether this step runs on a worker or on the target\n"
                },
                "secretName": {
                    "type": "string",
                    "description": "The name of the secret resource\n"
                },
                "secretValues": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "slug": {
                    "type": "string",
                    "description": "The human-readable unique identifier for this resource.\n"
                },
                "sortOrder": {
                    "type": "integer"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "workerPoolId": {
                    "type": "string",
                    "description": "The worker pool associated with this deployment action.\n"
                },
                "workerPoolVariable": {
                    "type": "string",
                    "description": "The worker pool variable associated with this deployment action.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "secretName",
                "secretValues"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "gitDependency",
                        "id",
                        "name",
                        "packages",
                        "properties",
                        "secretName",
                        "secretValues",
                        "slug",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepDeployKubernetesSecretActionActionTemplate:DeploymentProcessStepDeployKubernetesSecretActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepDeployKubernetesSecretActionContainer:DeploymentProcessStepDeployKubernetesSecretActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepDeployKubernetesSecretActionGitDependency:DeploymentProcessStepDeployKubernetesSecretActionGitDependency": {
            "properties": {
                "defaultBranch": {
                    "type": "string",
                    "description": "Name of the default branch of the repository.\n"
                },
                "filePathFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of file path filters used to narrow down the directory where files are to be sourced from. Supports glob patten syntax.\n"
                },
                "gitCredentialId": {
                    "type": "string",
                    "description": "ID of an existing Git credential.\n"
                },
                "gitCredentialType": {
                    "type": "string",
                    "description": "The Git credential authentication type.\n"
                },
                "repositoryUri": {
                    "type": "string",
                    "description": "The Git URI for the repository where this resource is sourced from.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultBranch",
                "gitCredentialType",
                "repositoryUri"
            ]
        },
        "octopusdeploy:index/DeploymentProcessStepDeployKubernetesSecretActionPackage:DeploymentProcessStepDeployKubernetesSecretActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepDeployPackageAction:DeploymentProcessStepDeployPackageAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployPackageActionActionTemplate:DeploymentProcessStepDeployPackageActionActionTemplate",
                    "description": "Represents the template that is associated with this action.\n"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The channels associated with this deployment action.\n"
                },
                "condition": {
                    "type": "string",
                    "description": "The condition associated with this deployment action.\n"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployPackageActionContainer:DeploymentProcessStepDeployPackageActionContainer"
                    },
                    "description": "The deployment action container associated with this deployment action.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments within which this deployment action will run.\n"
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments that this step will be skipped in\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of enabled features for this action.\n"
                },
                "gitDependency": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployPackageActionGitDependency:DeploymentProcessStepDeployPackageActionGitDependency",
                    "description": "Configuration for resource sourcing from a git repository.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Indicates the disabled status of this deployment action.\n"
                },
                "isRequired": {
                    "type": "boolean",
                    "description": "Indicates the required status of this deployment action.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "The notes associated with this deployment action.\n"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployPackageActionPackage:DeploymentProcessStepDeployPackageActionPackage"
                    },
                    "description": "The package assocated with this action.\n"
                },
                "primaryPackage": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployPackageActionPrimaryPackage:DeploymentProcessStepDeployPackageActionPrimaryPackage",
                    "description": "The package assocated with this action.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The human-readable unique identifier for this resource.\n"
                },
                "sortOrder": {
                    "type": "integer"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "windowsService": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployPackageActionWindowsService:DeploymentProcessStepDeployPackageActionWindowsService",
                    "description": "Deploy a windows service feature\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "primaryPackage"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "gitDependency",
                        "id",
                        "name",
                        "packages",
                        "primaryPackage",
                        "properties",
                        "slug",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepDeployPackageActionActionTemplate:DeploymentProcessStepDeployPackageActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepDeployPackageActionContainer:DeploymentProcessStepDeployPackageActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepDeployPackageActionGitDependency:DeploymentProcessStepDeployPackageActionGitDependency": {
            "properties": {
                "defaultBranch": {
                    "type": "string",
                    "description": "Name of the default branch of the repository.\n"
                },
                "filePathFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of file path filters used to narrow down the directory where files are to be sourced from. Supports glob patten syntax.\n"
                },
                "gitCredentialId": {
                    "type": "string",
                    "description": "ID of an existing Git credential.\n"
                },
                "gitCredentialType": {
                    "type": "string",
                    "description": "The Git credential authentication type.\n"
                },
                "repositoryUri": {
                    "type": "string",
                    "description": "The Git URI for the repository where this resource is sourced from.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultBranch",
                "gitCredentialType",
                "repositoryUri"
            ]
        },
        "octopusdeploy:index/DeploymentProcessStepDeployPackageActionPackage:DeploymentProcessStepDeployPackageActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepDeployPackageActionPrimaryPackage:DeploymentProcessStepDeployPackageActionPrimaryPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepDeployPackageActionWindowsService:DeploymentProcessStepDeployPackageActionWindowsService": {
            "properties": {
                "arguments": {
                    "type": "string",
                    "description": "The command line arguments that will be passed to the service when it starts\n"
                },
                "createOrUpdateService": {
                    "type": "boolean"
                },
                "customAccountName": {
                    "type": "string",
                    "description": "The Windows/domain account of the custom user that the service will run under\n"
                },
                "customAccountPassword": {
                    "type": "string",
                    "description": "The password for the custom account\n",
                    "secret": true
                },
                "dependencies": {
                    "type": "string",
                    "description": "Any dependencies that the service has. Separate the names using forward slashes (/).\n"
                },
                "description": {
                    "type": "string",
                    "description": "User-friendly description of the service (optional)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the service (optional)\n"
                },
                "executablePath": {
                    "type": "string",
                    "description": "The path to the executable relative to the package installation directory\n"
                },
                "serviceAccount": {
                    "type": "string",
                    "description": "Which built-in account will the service run under. Can be LocalSystem, NT Authority\\NetworkService, NT Authority\\LocalService, _CUSTOM or an expression\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The name of the service\n"
                },
                "startMode": {
                    "type": "string",
                    "description": "When will the service start. Can be auto, delayed-auto, manual, unchanged or an expression\n"
                }
            },
            "type": "object",
            "required": [
                "executablePath",
                "serviceName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "createOrUpdateService",
                        "customAccountPassword",
                        "executablePath",
                        "serviceName"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepDeployWindowsServiceAction:DeploymentProcessStepDeployWindowsServiceAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployWindowsServiceActionActionTemplate:DeploymentProcessStepDeployWindowsServiceActionActionTemplate",
                    "description": "Represents the template that is associated with this action.\n"
                },
                "arguments": {
                    "type": "string",
                    "description": "The command line arguments that will be passed to the service when it starts\n"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The channels associated with this deployment action.\n"
                },
                "condition": {
                    "type": "string",
                    "description": "The condition associated with this deployment action.\n"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployWindowsServiceActionContainer:DeploymentProcessStepDeployWindowsServiceActionContainer"
                    },
                    "description": "The deployment action container associated with this deployment action.\n"
                },
                "createOrUpdateService": {
                    "type": "boolean"
                },
                "customAccountName": {
                    "type": "string",
                    "description": "The Windows/domain account of the custom user that the service will run under\n"
                },
                "customAccountPassword": {
                    "type": "string",
                    "description": "The password for the custom account\n",
                    "secret": true
                },
                "dependencies": {
                    "type": "string",
                    "description": "Any dependencies that the service has. Separate the names using forward slashes (/).\n"
                },
                "description": {
                    "type": "string",
                    "description": "User-friendly description of the service (optional)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the service (optional)\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments within which this deployment action will run.\n"
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments that this step will be skipped in\n"
                },
                "executablePath": {
                    "type": "string",
                    "description": "The path to the executable relative to the package installation directory\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of enabled features for this action.\n"
                },
                "gitDependency": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployWindowsServiceActionGitDependency:DeploymentProcessStepDeployWindowsServiceActionGitDependency",
                    "description": "Configuration for resource sourcing from a git repository.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Indicates the disabled status of this deployment action.\n"
                },
                "isRequired": {
                    "type": "boolean",
                    "description": "Indicates the required status of this deployment action.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "The notes associated with this deployment action.\n"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployWindowsServiceActionPackage:DeploymentProcessStepDeployWindowsServiceActionPackage"
                    },
                    "description": "The package assocated with this action.\n"
                },
                "primaryPackage": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployWindowsServiceActionPrimaryPackage:DeploymentProcessStepDeployWindowsServiceActionPrimaryPackage",
                    "description": "The package assocated with this action.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                },
                "serviceAccount": {
                    "type": "string",
                    "description": "Which built-in account will the service run under. Can be LocalSystem, NT Authority\\NetworkService, NT Authority\\LocalService, _CUSTOM or an expression\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The name of the service\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The human-readable unique identifier for this resource.\n"
                },
                "sortOrder": {
                    "type": "integer"
                },
                "startMode": {
                    "type": "string",
                    "description": "When will the service start. Can be auto, delayed-auto, manual, unchanged or an expression\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                }
            },
            "type": "object",
            "required": [
                "executablePath",
                "name",
                "primaryPackage",
                "serviceName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "createOrUpdateService",
                        "customAccountPassword",
                        "environments",
                        "excludedEnvironments",
                        "executablePath",
                        "features",
                        "gitDependency",
                        "id",
                        "name",
                        "packages",
                        "primaryPackage",
                        "properties",
                        "serviceName",
                        "slug",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepDeployWindowsServiceActionActionTemplate:DeploymentProcessStepDeployWindowsServiceActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepDeployWindowsServiceActionContainer:DeploymentProcessStepDeployWindowsServiceActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepDeployWindowsServiceActionGitDependency:DeploymentProcessStepDeployWindowsServiceActionGitDependency": {
            "properties": {
                "defaultBranch": {
                    "type": "string",
                    "description": "Name of the default branch of the repository.\n"
                },
                "filePathFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of file path filters used to narrow down the directory where files are to be sourced from. Supports glob patten syntax.\n"
                },
                "gitCredentialId": {
                    "type": "string",
                    "description": "ID of an existing Git credential.\n"
                },
                "gitCredentialType": {
                    "type": "string",
                    "description": "The Git credential authentication type.\n"
                },
                "repositoryUri": {
                    "type": "string",
                    "description": "The Git URI for the repository where this resource is sourced from.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultBranch",
                "gitCredentialType",
                "repositoryUri"
            ]
        },
        "octopusdeploy:index/DeploymentProcessStepDeployWindowsServiceActionPackage:DeploymentProcessStepDeployWindowsServiceActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepDeployWindowsServiceActionPrimaryPackage:DeploymentProcessStepDeployWindowsServiceActionPrimaryPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepManualInterventionAction:DeploymentProcessStepManualInterventionAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepManualInterventionActionActionTemplate:DeploymentProcessStepManualInterventionActionActionTemplate",
                    "description": "Represents the template that is associated with this action.\n"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The channels associated with this deployment action.\n"
                },
                "condition": {
                    "type": "string",
                    "description": "The condition associated with this deployment action.\n"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepManualInterventionActionContainer:DeploymentProcessStepManualInterventionActionContainer"
                    },
                    "description": "The deployment action container associated with this deployment action.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments within which this deployment action will run.\n"
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments that this step will be skipped in\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of enabled features for this action.\n"
                },
                "gitDependency": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepManualInterventionActionGitDependency:DeploymentProcessStepManualInterventionActionGitDependency",
                    "description": "Configuration for resource sourcing from a git repository.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "instructions": {
                    "type": "string",
                    "description": "The instructions for the user to follow\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Indicates the disabled status of this deployment action.\n"
                },
                "isRequired": {
                    "type": "boolean",
                    "description": "Indicates the required status of this deployment action.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "The notes associated with this deployment action.\n"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepManualInterventionActionPackage:DeploymentProcessStepManualInterventionActionPackage"
                    },
                    "description": "The package assocated with this action.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                },
                "responsibleTeams": {
                    "type": "string",
                    "description": "The teams responsible to resolve this step. If no teams are specified, all users who have permission to deploy the project can resolve it.\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The human-readable unique identifier for this resource.\n"
                },
                "sortOrder": {
                    "type": "integer"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                }
            },
            "type": "object",
            "required": [
                "instructions",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "gitDependency",
                        "id",
                        "instructions",
                        "name",
                        "packages",
                        "properties",
                        "slug",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepManualInterventionActionActionTemplate:DeploymentProcessStepManualInterventionActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepManualInterventionActionContainer:DeploymentProcessStepManualInterventionActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepManualInterventionActionGitDependency:DeploymentProcessStepManualInterventionActionGitDependency": {
            "properties": {
                "defaultBranch": {
                    "type": "string",
                    "description": "Name of the default branch of the repository.\n"
                },
                "filePathFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of file path filters used to narrow down the directory where files are to be sourced from. Supports glob patten syntax.\n"
                },
                "gitCredentialId": {
                    "type": "string",
                    "description": "ID of an existing Git credential.\n"
                },
                "gitCredentialType": {
                    "type": "string",
                    "description": "The Git credential authentication type.\n"
                },
                "repositoryUri": {
                    "type": "string",
                    "description": "The Git URI for the repository where this resource is sourced from.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultBranch",
                "gitCredentialType",
                "repositoryUri"
            ]
        },
        "octopusdeploy:index/DeploymentProcessStepManualInterventionActionPackage:DeploymentProcessStepManualInterventionActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepRunKubectlScriptAction:DeploymentProcessStepRunKubectlScriptAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepRunKubectlScriptActionActionTemplate:DeploymentProcessStepRunKubectlScriptActionActionTemplate",
                    "description": "Represents the template that is associated with this action.\n"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The channels associated with this deployment action.\n"
                },
                "condition": {
                    "type": "string",
                    "description": "The condition associated with this deployment action.\n"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepRunKubectlScriptActionContainer:DeploymentProcessStepRunKubectlScriptActionContainer"
                    },
                    "description": "The deployment action container associated with this deployment action.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments within which this deployment action will run.\n"
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments that this step will be skipped in\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of enabled features for this action.\n"
                },
                "gitDependency": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepRunKubectlScriptActionGitDependency:DeploymentProcessStepRunKubectlScriptActionGitDependency",
                    "description": "Configuration for resource sourcing from a git repository.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Indicates the disabled status of this deployment action.\n"
                },
                "isRequired": {
                    "type": "boolean",
                    "description": "Indicates the required status of this deployment action.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "notes": {
                    "type": "string",
                    "description": "The notes associated with this deployment action.\n"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepRunKubectlScriptActionPackage:DeploymentProcessStepRunKubectlScriptActionPackage"
                    },
                    "description": "The package assocated with this action.\n"
                },
                "primaryPackage": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepRunKubectlScriptActionPrimaryPackage:DeploymentProcessStepRunKubectlScriptActionPrimaryPackage",
                    "description": "The package assocated with this action.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                },
                "runOnServer": {
                    "type": "boolean",
                    "description": "Whether this step runs on a worker or on the target\n"
                },
                "scriptBody": {
                    "type": "string"
                },
                "scriptFileName": {
                    "type": "string",
                    "description": "The script file name in the package\n"
                },
                "scriptParameters": {
                    "type": "string",
                    "description": "Parameters expected by the script. Use platform specific calling convention. e.g. -Path #{VariableStoringPath} for PowerShell or -- #{VariableStoringPath} for ScriptCS\n"
                },
                "scriptSource": {
                    "type": "string"
                },
                "scriptSyntax": {
                    "type": "string"
                },
                "slug": {
                    "type": "string",
                    "description": "The human-readable unique identifier for this resource.\n"
                },
                "sortOrder": {
                    "type": "integer"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "variableSubstitutionInFiles": {
                    "type": "string",
                    "description": "A newline-separated list of file names to transform, relative to the package contents. Extended wildcard syntax is supported.\n"
                },
                "workerPoolId": {
                    "type": "string",
                    "description": "The worker pool associated with this deployment action.\n"
                },
                "workerPoolVariable": {
                    "type": "string",
                    "description": "The worker pool variable associated with this deployment action.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "gitDependency",
                        "id",
                        "name",
                        "packages",
                        "primaryPackage",
                        "properties",
                        "scriptSource",
                        "scriptSyntax",
                        "slug",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepRunKubectlScriptActionActionTemplate:DeploymentProcessStepRunKubectlScriptActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepRunKubectlScriptActionContainer:DeploymentProcessStepRunKubectlScriptActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepRunKubectlScriptActionGitDependency:DeploymentProcessStepRunKubectlScriptActionGitDependency": {
            "properties": {
                "defaultBranch": {
                    "type": "string",
                    "description": "Name of the default branch of the repository.\n"
                },
                "filePathFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of file path filters used to narrow down the directory where files are to be sourced from. Supports glob patten syntax.\n"
                },
                "gitCredentialId": {
                    "type": "string",
                    "description": "ID of an existing Git credential.\n"
                },
                "gitCredentialType": {
                    "type": "string",
                    "description": "The Git credential authentication type.\n"
                },
                "repositoryUri": {
                    "type": "string",
                    "description": "The Git URI for the repository where this resource is sourced from.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultBranch",
                "gitCredentialType",
                "repositoryUri"
            ]
        },
        "octopusdeploy:index/DeploymentProcessStepRunKubectlScriptActionPackage:DeploymentProcessStepRunKubectlScriptActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "extractDuringDeployment": {
                    "type": "boolean",
                    "description": "Whether to extract the package during deployment\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "extractDuringDeployment",
                        "id",
                        "name",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepRunKubectlScriptActionPrimaryPackage:DeploymentProcessStepRunKubectlScriptActionPrimaryPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepRunScriptAction:DeploymentProcessStepRunScriptAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepRunScriptActionActionTemplate:DeploymentProcessStepRunScriptActionActionTemplate",
                    "description": "Represents the template that is associated with this action.\n"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The channels associated with this deployment action.\n"
                },
                "condition": {
                    "type": "string",
                    "description": "The condition associated with this deployment action.\n"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepRunScriptActionContainer:DeploymentProcessStepRunScriptActionContainer"
                    },
                    "description": "The deployment action container associated with this deployment action.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments within which this deployment action will run.\n"
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments that this step will be skipped in\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of enabled features for this action.\n"
                },
                "gitDependency": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepRunScriptActionGitDependency:DeploymentProcessStepRunScriptActionGitDependency",
                    "description": "Configuration for resource sourcing from a git repository.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Indicates the disabled status of this deployment action.\n"
                },
                "isRequired": {
                    "type": "boolean",
                    "description": "Indicates the required status of this deployment action.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "The notes associated with this deployment action.\n"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepRunScriptActionPackage:DeploymentProcessStepRunScriptActionPackage"
                    },
                    "description": "The package assocated with this action.\n"
                },
                "primaryPackage": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepRunScriptActionPrimaryPackage:DeploymentProcessStepRunScriptActionPrimaryPackage",
                    "description": "The package assocated with this action.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n",
                    "deprecationMessage": "This attribute is deprecated and will be removed in a future release. Please use the attributes that match the properties that are stored to this map."
                },
                "runOnServer": {
                    "type": "boolean",
                    "description": "Whether this step runs on a worker or on the target\n"
                },
                "scriptBody": {
                    "type": "string"
                },
                "scriptFileName": {
                    "type": "string",
                    "description": "The script file name in the package\n"
                },
                "scriptParameters": {
                    "type": "string",
                    "description": "Parameters expected by the script. Use platform specific calling convention. e.g. -Path #{VariableStoringPath} for PowerShell or -- #{VariableStoringPath} for ScriptCS\n"
                },
                "scriptSource": {
                    "type": "string"
                },
                "scriptSyntax": {
                    "type": "string"
                },
                "slug": {
                    "type": "string",
                    "description": "The human-readable unique identifier for this resource.\n"
                },
                "sortOrder": {
                    "type": "integer"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "variableSubstitutionInFiles": {
                    "type": "string",
                    "description": "A newline-separated list of file names to transform, relative to the package contents. Extended wildcard syntax is supported.\n"
                },
                "workerPoolId": {
                    "type": "string",
                    "description": "The worker pool associated with this deployment action.\n"
                },
                "workerPoolVariable": {
                    "type": "string",
                    "description": "The worker pool variable associated with this deployment action.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "gitDependency",
                        "id",
                        "name",
                        "packages",
                        "primaryPackage",
                        "properties",
                        "scriptSource",
                        "scriptSyntax",
                        "slug",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepRunScriptActionActionTemplate:DeploymentProcessStepRunScriptActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepRunScriptActionContainer:DeploymentProcessStepRunScriptActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepRunScriptActionGitDependency:DeploymentProcessStepRunScriptActionGitDependency": {
            "properties": {
                "defaultBranch": {
                    "type": "string",
                    "description": "Name of the default branch of the repository.\n"
                },
                "filePathFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of file path filters used to narrow down the directory where files are to be sourced from. Supports glob patten syntax.\n"
                },
                "gitCredentialId": {
                    "type": "string",
                    "description": "ID of an existing Git credential.\n"
                },
                "gitCredentialType": {
                    "type": "string",
                    "description": "The Git credential authentication type.\n"
                },
                "repositoryUri": {
                    "type": "string",
                    "description": "The Git URI for the repository where this resource is sourced from.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultBranch",
                "gitCredentialType",
                "repositoryUri"
            ]
        },
        "octopusdeploy:index/DeploymentProcessStepRunScriptActionPackage:DeploymentProcessStepRunScriptActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "extractDuringDeployment": {
                    "type": "boolean",
                    "description": "Whether to extract the package during deployment\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "extractDuringDeployment",
                        "id",
                        "name",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepRunScriptActionPrimaryPackage:DeploymentProcessStepRunScriptActionPrimaryPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/ExternalFeedCreateReleaseTriggerPackage:ExternalFeedCreateReleaseTriggerPackage": {
            "properties": {
                "deploymentActionSlug": {
                    "type": "string"
                },
                "packageReference": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "deploymentActionSlug",
                "packageReference"
            ]
        },
        "octopusdeploy:index/ExternalFeedCreateReleaseTriggerPrimaryPackage:ExternalFeedCreateReleaseTriggerPrimaryPackage": {
            "properties": {
                "deploymentActionSlug": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "deploymentActionSlug"
            ]
        },
        "octopusdeploy:index/KubernetesClusterDeploymentTargetAuthentication:KubernetesClusterDeploymentTargetAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/KubernetesClusterDeploymentTargetAwsAccountAuthentication:KubernetesClusterDeploymentTargetAwsAccountAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "clusterName"
            ]
        },
        "octopusdeploy:index/KubernetesClusterDeploymentTargetAzureServicePrincipalAuthentication:KubernetesClusterDeploymentTargetAzureServicePrincipalAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "clusterName",
                "clusterResourceGroup"
            ]
        },
        "octopusdeploy:index/KubernetesClusterDeploymentTargetCertificateAuthentication:KubernetesClusterDeploymentTargetCertificateAuthentication": {
            "properties": {
                "clientCertificate": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/KubernetesClusterDeploymentTargetContainer:KubernetesClusterDeploymentTargetContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/KubernetesClusterDeploymentTargetEndpoint:KubernetesClusterDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetEndpointAuthentication:KubernetesClusterDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterCertificatePath": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containerOptions": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetEndpointContainer:KubernetesClusterDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetEndpointDestination:KubernetesClusterDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetEndpointTentacleVersionDetail:KubernetesClusterDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "communicationStyle"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authentication",
                        "communicationStyle",
                        "containers",
                        "destinations",
                        "id",
                        "tentacleVersionDetails"
                    ]
                }
            }
        },
        "octopusdeploy:index/KubernetesClusterDeploymentTargetEndpointAuthentication:KubernetesClusterDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "tokenPath": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/KubernetesClusterDeploymentTargetEndpointContainer:KubernetesClusterDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/KubernetesClusterDeploymentTargetEndpointDestination:KubernetesClusterDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/KubernetesClusterDeploymentTargetEndpointTentacleVersionDetail:KubernetesClusterDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "upgradeLocked",
                        "upgradeRequired",
                        "upgradeSuggested",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/KubernetesClusterDeploymentTargetGcpAccountAuthentication:KubernetesClusterDeploymentTargetGcpAccountAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "clusterName",
                "project"
            ]
        },
        "octopusdeploy:index/KubernetesClusterDeploymentTargetPodAuthentication:KubernetesClusterDeploymentTargetPodAuthentication": {
            "properties": {
                "tokenPath": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tokenPath"
            ]
        },
        "octopusdeploy:index/ListeningTentacleDeploymentTargetTentacleVersionDetail:ListeningTentacleDeploymentTargetTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "upgradeLocked",
                        "upgradeRequired",
                        "upgradeSuggested",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/MachinePolicyMachineCleanupPolicy:MachinePolicyMachineCleanupPolicy": {
            "properties": {
                "deleteMachinesBehavior": {
                    "type": "string"
                },
                "deleteMachinesElapsedTimespan": {
                    "type": "integer",
                    "description": "In nanoseconds.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deleteMachinesElapsedTimespan"
                    ]
                }
            }
        },
        "octopusdeploy:index/MachinePolicyMachineConnectivityPolicy:MachinePolicyMachineConnectivityPolicy": {
            "properties": {
                "machineConnectivityBehavior": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/MachinePolicyMachineHealthCheckPolicy:MachinePolicyMachineHealthCheckPolicy": {
            "properties": {
                "bashHealthCheckPolicy": {
                    "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineHealthCheckPolicyBashHealthCheckPolicy:MachinePolicyMachineHealthCheckPolicyBashHealthCheckPolicy"
                },
                "healthCheckCron": {
                    "type": "string"
                },
                "healthCheckCronTimezone": {
                    "type": "string"
                },
                "healthCheckInterval": {
                    "type": "integer",
                    "description": "In nanoseconds.\n"
                },
                "healthCheckType": {
                    "type": "string"
                },
                "powershellHealthCheckPolicy": {
                    "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineHealthCheckPolicyPowershellHealthCheckPolicy:MachinePolicyMachineHealthCheckPolicyPowershellHealthCheckPolicy"
                }
            },
            "type": "object",
            "required": [
                "bashHealthCheckPolicy",
                "powershellHealthCheckPolicy"
            ]
        },
        "octopusdeploy:index/MachinePolicyMachineHealthCheckPolicyBashHealthCheckPolicy:MachinePolicyMachineHealthCheckPolicyBashHealthCheckPolicy": {
            "properties": {
                "runType": {
                    "type": "string"
                },
                "scriptBody": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/MachinePolicyMachineHealthCheckPolicyPowershellHealthCheckPolicy:MachinePolicyMachineHealthCheckPolicyPowershellHealthCheckPolicy": {
            "properties": {
                "runType": {
                    "type": "string"
                },
                "scriptBody": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/MachinePolicyMachineUpdatePolicy:MachinePolicyMachineUpdatePolicy": {
            "properties": {
                "calamariUpdateBehavior": {
                    "type": "string",
                    "description": "The behaviour of how Calamari is updated. Valid values are `UpdateAlways`, `UpdateOnDeployment` and `UpdateOnNewMachine`.\n"
                },
                "kubernetesAgentUpdateBehavior": {
                    "type": "string",
                    "description": "The behaviour of how Kubernetes agent machines are updated. Valid values are `NeverUpdate` and `Update`.\n"
                },
                "tentacleUpdateAccountId": {
                    "type": "string",
                    "description": "The Account ID to perform any Tentacle updates under.\n"
                },
                "tentacleUpdateBehavior": {
                    "type": "string",
                    "description": "The behaviour of how Tentacle machines are updated. Valid values are `NeverUpdate` and `Update`.\n"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/OfflinePackageDropDeploymentTargetDestination:OfflinePackageDropDeploymentTargetDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/OfflinePackageDropDeploymentTargetEndpoint:OfflinePackageDropDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/OfflinePackageDropDeploymentTargetEndpointAuthentication:OfflinePackageDropDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterCertificatePath": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containerOptions": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/OfflinePackageDropDeploymentTargetEndpointContainer:OfflinePackageDropDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/OfflinePackageDropDeploymentTargetEndpointDestination:OfflinePackageDropDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/OfflinePackageDropDeploymentTargetEndpointTentacleVersionDetail:OfflinePackageDropDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "communicationStyle"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authentication",
                        "communicationStyle",
                        "containers",
                        "destinations",
                        "id",
                        "tentacleVersionDetails"
                    ]
                }
            }
        },
        "octopusdeploy:index/OfflinePackageDropDeploymentTargetEndpointAuthentication:OfflinePackageDropDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "tokenPath": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/OfflinePackageDropDeploymentTargetEndpointContainer:OfflinePackageDropDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/OfflinePackageDropDeploymentTargetEndpointDestination:OfflinePackageDropDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/OfflinePackageDropDeploymentTargetEndpointTentacleVersionDetail:OfflinePackageDropDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "upgradeLocked",
                        "upgradeRequired",
                        "upgradeSuggested",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/PollingTentacleDeploymentTargetEndpoint:PollingTentacleDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/PollingTentacleDeploymentTargetEndpointAuthentication:PollingTentacleDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterCertificatePath": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containerOptions": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/PollingTentacleDeploymentTargetEndpointContainer:PollingTentacleDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/PollingTentacleDeploymentTargetEndpointDestination:PollingTentacleDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/PollingTentacleDeploymentTargetEndpointTentacleVersionDetail:PollingTentacleDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "communicationStyle"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authentication",
                        "communicationStyle",
                        "containers",
                        "destinations",
                        "id",
                        "tentacleVersionDetails"
                    ]
                }
            }
        },
        "octopusdeploy:index/PollingTentacleDeploymentTargetEndpointAuthentication:PollingTentacleDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "tokenPath": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/PollingTentacleDeploymentTargetEndpointContainer:PollingTentacleDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/PollingTentacleDeploymentTargetEndpointDestination:PollingTentacleDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/PollingTentacleDeploymentTargetEndpointTentacleVersionDetail:PollingTentacleDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "upgradeLocked",
                        "upgradeRequired",
                        "upgradeSuggested",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/PollingTentacleDeploymentTargetTentacleVersionDetail:PollingTentacleDeploymentTargetTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "upgradeLocked",
                        "upgradeRequired",
                        "upgradeSuggested",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/ProjectScheduledTriggerContinuousDailySchedule:ProjectScheduledTriggerContinuousDailySchedule": {
            "properties": {
                "daysOfWeeks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The days of the week to run the trigger.\n"
                },
                "hourInterval": {
                    "type": "integer",
                    "description": "How often to run the trigger in hours. Only used when the interval is set to 'OnceHourly'.\n"
                },
                "interval": {
                    "type": "string",
                    "description": "The interval in minutes to run the trigger.\n"
                },
                "minuteInterval": {
                    "type": "integer",
                    "description": "How often to run the trigger in minutes. Only used when the interval is set to 'OnceEveryMinute'.\n"
                },
                "runAfter": {
                    "type": "string",
                    "description": "The time of day to start the trigger.\n"
                },
                "runUntil": {
                    "type": "string",
                    "description": "The time of day to end the trigger.\n"
                }
            },
            "type": "object",
            "required": [
                "daysOfWeeks",
                "interval",
                "runAfter",
                "runUntil"
            ]
        },
        "octopusdeploy:index/ProjectScheduledTriggerCronExpressionSchedule:ProjectScheduledTriggerCronExpressionSchedule": {
            "properties": {
                "cronExpression": {
                    "type": "string",
                    "description": "The cron expression for the schedule.\n"
                }
            },
            "type": "object",
            "required": [
                "cronExpression"
            ]
        },
        "octopusdeploy:index/ProjectScheduledTriggerDaysPerMonthSchedule:ProjectScheduledTriggerDaysPerMonthSchedule": {
            "properties": {
                "dateOfMonth": {
                    "type": "string",
                    "description": "Which date of the month to run the trigger. String number between 1 - 31 Incl. or L for the last day of the month.\n"
                },
                "dayNumberOfMonth": {
                    "type": "string",
                    "description": "Which ordinal day of the week to run the trigger on. String number between 1 - 4 Incl. or L for the last occurrence of day*of*week for the month.\n"
                },
                "dayOfWeek": {
                    "type": "string",
                    "description": "Which day of the week to run the trigger on. Required when monthly*schedule*type is set to 'DayOfMonth'.\n"
                },
                "monthlyScheduleType": {
                    "type": "string",
                    "description": "The type of monthly schedule to run the trigger\n"
                },
                "startTime": {
                    "type": "string",
                    "description": "The time of day to start the trigger.\n"
                }
            },
            "type": "object",
            "required": [
                "monthlyScheduleType",
                "startTime"
            ]
        },
        "octopusdeploy:index/ProjectScheduledTriggerDeployLatestReleaseAction:ProjectScheduledTriggerDeployLatestReleaseAction": {
            "properties": {
                "destinationEnvironmentId": {
                    "type": "string",
                    "description": "The environment ID to deploy the selected release to.\n"
                },
                "shouldRedeploy": {
                    "type": "boolean",
                    "description": "Enable to re-deploy to the deployment targets even if they are already up-to-date with the current deployment.\n"
                },
                "sourceEnvironmentId": {
                    "type": "string",
                    "description": "The environment ID to use when selecting the release to deploy from.\n"
                }
            },
            "type": "object",
            "required": [
                "destinationEnvironmentId",
                "sourceEnvironmentId"
            ]
        },
        "octopusdeploy:index/ProjectScheduledTriggerDeployNewReleaseAction:ProjectScheduledTriggerDeployNewReleaseAction": {
            "properties": {
                "destinationEnvironmentId": {
                    "type": "string",
                    "description": "The environment ID to deploy the selected release to.\n"
                },
                "gitReference": {
                    "type": "string",
                    "description": "The git reference to use when creating the release. Can be a branch, tag, or commit hash.\n"
                }
            },
            "type": "object",
            "required": [
                "destinationEnvironmentId"
            ]
        },
        "octopusdeploy:index/ProjectScheduledTriggerOnceDailySchedule:ProjectScheduledTriggerOnceDailySchedule": {
            "properties": {
                "daysOfWeeks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The days of the week to run the trigger.\n"
                },
                "startTime": {
                    "type": "string",
                    "description": "The time of day to start the trigger.\n"
                }
            },
            "type": "object",
            "required": [
                "daysOfWeeks",
                "startTime"
            ]
        },
        "octopusdeploy:index/ProjectScheduledTriggerRunRunbookAction:ProjectScheduledTriggerRunRunbookAction": {
            "properties": {
                "runbookId": {
                    "type": "string",
                    "description": "The ID of the runbook to run.\n"
                },
                "targetEnvironmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IDs of the environments to run the runbook in.\n"
                }
            },
            "type": "object",
            "required": [
                "runbookId",
                "targetEnvironmentIds"
            ]
        },
        "octopusdeploy:index/RunbookProcessStep:RunbookProcessStep": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepAction:RunbookProcessStepAction"
                    }
                },
                "applyTerraformTemplateActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateAction:RunbookProcessStepApplyTerraformTemplateAction"
                    },
                    "description": "(see below for nested schema)\n"
                },
                "condition": {
                    "type": "string",
                    "description": "When to run the step, one of 'Success', 'Failure', 'Always' or 'Variable'\n"
                },
                "conditionExpression": {
                    "type": "string",
                    "description": "The expression to evaluate to determine whether to run this step when 'condition' is 'Variable'\n"
                },
                "deployKubernetesSecretActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployKubernetesSecretAction:RunbookProcessStepDeployKubernetesSecretAction"
                    }
                },
                "deployPackageActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployPackageAction:RunbookProcessStepDeployPackageAction"
                    }
                },
                "deployWindowsServiceActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployWindowsServiceAction:RunbookProcessStepDeployWindowsServiceAction"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "manualInterventionActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepManualInterventionAction:RunbookProcessStepManualInterventionAction"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageRequirement": {
                    "type": "string",
                    "description": "Whether to run this step before or after package acquisition (if possible)\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "runKubectlScriptActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepRunKubectlScriptAction:RunbookProcessStepRunKubectlScriptAction"
                    }
                },
                "runScriptActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepRunScriptAction:RunbookProcessStepRunScriptAction"
                    }
                },
                "startTrigger": {
                    "type": "string",
                    "description": "Whether to run this step after the previous step ('StartAfterPrevious') or at the same time as the previous step ('StartWithPrevious')\n"
                },
                "targetRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The roles that this step run against, or runs on behalf of\n"
                },
                "windowSize": {
                    "type": "string",
                    "description": "The maximum number of targets to deploy to simultaneously\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "conditionExpression",
                        "id",
                        "name",
                        "properties",
                        "targetRoles"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepAction:RunbookProcessStepAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepActionActionTemplate:RunbookProcessStepActionActionTemplate",
                    "description": "Represents the template that is associated with this action.\n"
                },
                "actionType": {
                    "type": "string",
                    "description": "The type of action\n"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The channels associated with this deployment action.\n"
                },
                "condition": {
                    "type": "string",
                    "description": "The condition associated with this deployment action.\n"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepActionContainer:RunbookProcessStepActionContainer"
                    },
                    "description": "The deployment action container associated with this deployment action.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments within which this deployment action will run.\n"
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments that this step will be skipped in\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of enabled features for this action.\n"
                },
                "gitDependency": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepActionGitDependency:RunbookProcessStepActionGitDependency",
                    "description": "Configuration for resource sourcing from a git repository.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Indicates the disabled status of this deployment action.\n"
                },
                "isRequired": {
                    "type": "boolean",
                    "description": "Indicates the required status of this deployment action.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "The notes associated with this deployment action.\n"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepActionPackage:RunbookProcessStepActionPackage"
                    },
                    "description": "The package assocated with this action.\n"
                },
                "primaryPackage": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepActionPrimaryPackage:RunbookProcessStepActionPrimaryPackage",
                    "description": "The package assocated with this action.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                },
                "runOnServer": {
                    "type": "boolean",
                    "description": "Whether this step runs on a worker or on the target\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The human-readable unique identifier for this resource.\n"
                },
                "sortOrder": {
                    "type": "integer"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "workerPoolId": {
                    "type": "string",
                    "description": "The worker pool associated with this deployment action.\n"
                },
                "workerPoolVariable": {
                    "type": "string",
                    "description": "The worker pool variable associated with this deployment action.\n"
                }
            },
            "type": "object",
            "required": [
                "actionType",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "actionType",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "gitDependency",
                        "id",
                        "name",
                        "packages",
                        "primaryPackage",
                        "properties",
                        "slug",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepActionActionTemplate:RunbookProcessStepActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepActionContainer:RunbookProcessStepActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepActionGitDependency:RunbookProcessStepActionGitDependency": {
            "properties": {
                "defaultBranch": {
                    "type": "string",
                    "description": "Name of the default branch of the repository.\n"
                },
                "filePathFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of file path filters used to narrow down the directory where files are to be sourced from. Supports glob patten syntax.\n"
                },
                "gitCredentialId": {
                    "type": "string",
                    "description": "ID of an existing Git credential.\n"
                },
                "gitCredentialType": {
                    "type": "string",
                    "description": "The Git credential authentication type.\n"
                },
                "repositoryUri": {
                    "type": "string",
                    "description": "The Git URI for the repository where this resource is sourced from.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultBranch",
                "gitCredentialType",
                "repositoryUri"
            ]
        },
        "octopusdeploy:index/RunbookProcessStepActionPackage:RunbookProcessStepActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "extractDuringDeployment": {
                    "type": "boolean",
                    "description": "Whether to extract the package during deployment\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "extractDuringDeployment",
                        "id",
                        "name",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepActionPrimaryPackage:RunbookProcessStepActionPrimaryPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateAction:RunbookProcessStepApplyTerraformTemplateAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionActionTemplate:RunbookProcessStepApplyTerraformTemplateActionActionTemplate",
                    "description": "Represents the template that is associated with this action.\n"
                },
                "advancedOptions": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionAdvancedOptions:RunbookProcessStepApplyTerraformTemplateActionAdvancedOptions"
                },
                "awsAccount": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionAwsAccount:RunbookProcessStepApplyTerraformTemplateActionAwsAccount",
                    "description": "(see below for nested schema)\n"
                },
                "azureAccount": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionAzureAccount:RunbookProcessStepApplyTerraformTemplateActionAzureAccount",
                    "description": "(see below for nested schema)\n"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The channels associated with this deployment action.\n"
                },
                "condition": {
                    "type": "string",
                    "description": "The condition associated with this deployment action.\n"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionContainer:RunbookProcessStepApplyTerraformTemplateActionContainer"
                    },
                    "description": "The deployment action container associated with this deployment action.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments within which this deployment action will run.\n"
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments that this step will be skipped in\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of enabled features for this action.\n"
                },
                "gitDependency": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionGitDependency:RunbookProcessStepApplyTerraformTemplateActionGitDependency",
                    "description": "Configuration for resource sourcing from a git repository.\n"
                },
                "googleCloudAccount": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionGoogleCloudAccount:RunbookProcessStepApplyTerraformTemplateActionGoogleCloudAccount",
                    "description": "(see below for nested schema)\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "inlineTemplate": {
                    "type": "string"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Indicates the disabled status of this deployment action.\n"
                },
                "isRequired": {
                    "type": "boolean",
                    "description": "Indicates the required status of this deployment action.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "The notes associated with this deployment action.\n"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionPackage:RunbookProcessStepApplyTerraformTemplateActionPackage"
                    },
                    "description": "The package assocated with this action.\n"
                },
                "primaryPackage": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionPrimaryPackage:RunbookProcessStepApplyTerraformTemplateActionPrimaryPackage",
                    "description": "The package assocated with this action.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                },
                "runOnServer": {
                    "type": "boolean",
                    "description": "Whether this step runs on a worker or on the target\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The human-readable unique identifier for this resource.\n"
                },
                "sortOrder": {
                    "type": "integer"
                },
                "template": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionTemplate:RunbookProcessStepApplyTerraformTemplateActionTemplate",
                    "description": "(see below for nested schema)\n"
                },
                "templateParameters": {
                    "type": "string"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "workerPoolId": {
                    "type": "string",
                    "description": "The worker pool associated with this deployment action.\n"
                },
                "workerPoolVariable": {
                    "type": "string",
                    "description": "The worker pool variable associated with this deployment action.\n"
                }
            },
            "type": "object",
            "required": [
                "advancedOptions",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "advancedOptions",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "gitDependency",
                        "id",
                        "name",
                        "packages",
                        "primaryPackage",
                        "properties",
                        "slug",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionActionTemplate:RunbookProcessStepApplyTerraformTemplateActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionAdvancedOptions:RunbookProcessStepApplyTerraformTemplateActionAdvancedOptions": {
            "properties": {
                "allowAdditionalPluginDownloads": {
                    "type": "boolean"
                },
                "applyParameters": {
                    "type": "string"
                },
                "initParameters": {
                    "type": "string"
                },
                "pluginCacheDirectory": {
                    "type": "string"
                },
                "workspace": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionAwsAccount:RunbookProcessStepApplyTerraformTemplateActionAwsAccount": {
            "properties": {
                "region": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionAwsAccountRole:RunbookProcessStepApplyTerraformTemplateActionAwsAccountRole",
                    "description": "(see below for nested schema)\n"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "variable": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionAwsAccountRole:RunbookProcessStepApplyTerraformTemplateActionAwsAccountRole": {
            "properties": {
                "arn": {
                    "type": "string"
                },
                "externalId": {
                    "type": "string"
                },
                "roleSessionName": {
                    "type": "string"
                },
                "sessionDuration": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionAzureAccount:RunbookProcessStepApplyTerraformTemplateActionAzureAccount": {
            "properties": {
                "variable": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionContainer:RunbookProcessStepApplyTerraformTemplateActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionGitDependency:RunbookProcessStepApplyTerraformTemplateActionGitDependency": {
            "properties": {
                "defaultBranch": {
                    "type": "string",
                    "description": "Name of the default branch of the repository.\n"
                },
                "filePathFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of file path filters used to narrow down the directory where files are to be sourced from. Supports glob patten syntax.\n"
                },
                "gitCredentialId": {
                    "type": "string",
                    "description": "ID of an existing Git credential.\n"
                },
                "gitCredentialType": {
                    "type": "string",
                    "description": "The Git credential authentication type.\n"
                },
                "repositoryUri": {
                    "type": "string",
                    "description": "The Git URI for the repository where this resource is sourced from.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultBranch",
                "gitCredentialType",
                "repositoryUri"
            ]
        },
        "octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionGoogleCloudAccount:RunbookProcessStepApplyTerraformTemplateActionGoogleCloudAccount": {
            "properties": {
                "impersonateServiceAccount": {
                    "type": "boolean",
                    "description": "Impersonate service accounts\n"
                },
                "project": {
                    "type": "string",
                    "description": "This sets GOOGLE_PROJECT environment variable\n"
                },
                "region": {
                    "type": "string",
                    "description": "This sets GOOGLE_REGION environment variable\n"
                },
                "serviceAccountEmails": {
                    "type": "string",
                    "description": "This sets GOOGLE*IMPERSONATE*SERVICE_ACCOUNT environment variable\n"
                },
                "useVmServiceAccount": {
                    "type": "boolean",
                    "description": "When running in a Compute Engine virtual machine, use the associated VM service account\n"
                },
                "variable": {
                    "type": "string"
                },
                "zone": {
                    "type": "string",
                    "description": "This sets GOOGLE_ZONE environment variable\n"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionPackage:RunbookProcessStepApplyTerraformTemplateActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionPrimaryPackage:RunbookProcessStepApplyTerraformTemplateActionPrimaryPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionTemplate:RunbookProcessStepApplyTerraformTemplateActionTemplate": {
            "properties": {
                "additionalVariableFiles": {
                    "type": "string"
                },
                "directory": {
                    "type": "string"
                },
                "runAutomaticFileSubstitution": {
                    "type": "boolean"
                },
                "targetFiles": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepDeployKubernetesSecretAction:RunbookProcessStepDeployKubernetesSecretAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployKubernetesSecretActionActionTemplate:RunbookProcessStepDeployKubernetesSecretActionActionTemplate",
                    "description": "Represents the template that is associated with this action.\n"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The channels associated with this deployment action.\n"
                },
                "condition": {
                    "type": "string",
                    "description": "The condition associated with this deployment action.\n"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployKubernetesSecretActionContainer:RunbookProcessStepDeployKubernetesSecretActionContainer"
                    },
                    "description": "The deployment action container associated with this deployment action.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments within which this deployment action will run.\n"
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments that this step will be skipped in\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of enabled features for this action.\n"
                },
                "gitDependency": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployKubernetesSecretActionGitDependency:RunbookProcessStepDeployKubernetesSecretActionGitDependency",
                    "description": "Configuration for resource sourcing from a git repository.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Indicates the disabled status of this deployment action.\n"
                },
                "isRequired": {
                    "type": "boolean",
                    "description": "Indicates the required status of this deployment action.\n"
                },
                "kubernetesObjectStatusCheckEnabled": {
                    "type": "boolean",
                    "description": "Indicates the status of the Kubernetes Object Status feature\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "The notes associated with this deployment action.\n"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployKubernetesSecretActionPackage:RunbookProcessStepDeployKubernetesSecretActionPackage"
                    },
                    "description": "The package assocated with this action.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                },
                "runOnServer": {
                    "type": "boolean",
                    "description": "Whether this step runs on a worker or on the target\n"
                },
                "secretName": {
                    "type": "string",
                    "description": "The name of the secret resource\n"
                },
                "secretValues": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "slug": {
                    "type": "string",
                    "description": "The human-readable unique identifier for this resource.\n"
                },
                "sortOrder": {
                    "type": "integer"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "workerPoolId": {
                    "type": "string",
                    "description": "The worker pool associated with this deployment action.\n"
                },
                "workerPoolVariable": {
                    "type": "string",
                    "description": "The worker pool variable associated with this deployment action.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "secretName",
                "secretValues"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "gitDependency",
                        "id",
                        "name",
                        "packages",
                        "properties",
                        "secretName",
                        "secretValues",
                        "slug",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepDeployKubernetesSecretActionActionTemplate:RunbookProcessStepDeployKubernetesSecretActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepDeployKubernetesSecretActionContainer:RunbookProcessStepDeployKubernetesSecretActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepDeployKubernetesSecretActionGitDependency:RunbookProcessStepDeployKubernetesSecretActionGitDependency": {
            "properties": {
                "defaultBranch": {
                    "type": "string",
                    "description": "Name of the default branch of the repository.\n"
                },
                "filePathFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of file path filters used to narrow down the directory where files are to be sourced from. Supports glob patten syntax.\n"
                },
                "gitCredentialId": {
                    "type": "string",
                    "description": "ID of an existing Git credential.\n"
                },
                "gitCredentialType": {
                    "type": "string",
                    "description": "The Git credential authentication type.\n"
                },
                "repositoryUri": {
                    "type": "string",
                    "description": "The Git URI for the repository where this resource is sourced from.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultBranch",
                "gitCredentialType",
                "repositoryUri"
            ]
        },
        "octopusdeploy:index/RunbookProcessStepDeployKubernetesSecretActionPackage:RunbookProcessStepDeployKubernetesSecretActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepDeployPackageAction:RunbookProcessStepDeployPackageAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployPackageActionActionTemplate:RunbookProcessStepDeployPackageActionActionTemplate",
                    "description": "Represents the template that is associated with this action.\n"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The channels associated with this deployment action.\n"
                },
                "condition": {
                    "type": "string",
                    "description": "The condition associated with this deployment action.\n"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployPackageActionContainer:RunbookProcessStepDeployPackageActionContainer"
                    },
                    "description": "The deployment action container associated with this deployment action.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments within which this deployment action will run.\n"
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments that this step will be skipped in\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of enabled features for this action.\n"
                },
                "gitDependency": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployPackageActionGitDependency:RunbookProcessStepDeployPackageActionGitDependency",
                    "description": "Configuration for resource sourcing from a git repository.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Indicates the disabled status of this deployment action.\n"
                },
                "isRequired": {
                    "type": "boolean",
                    "description": "Indicates the required status of this deployment action.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "The notes associated with this deployment action.\n"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployPackageActionPackage:RunbookProcessStepDeployPackageActionPackage"
                    },
                    "description": "The package assocated with this action.\n"
                },
                "primaryPackage": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployPackageActionPrimaryPackage:RunbookProcessStepDeployPackageActionPrimaryPackage",
                    "description": "The package assocated with this action.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The human-readable unique identifier for this resource.\n"
                },
                "sortOrder": {
                    "type": "integer"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "windowsService": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployPackageActionWindowsService:RunbookProcessStepDeployPackageActionWindowsService",
                    "description": "Deploy a windows service feature\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "primaryPackage"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "gitDependency",
                        "id",
                        "name",
                        "packages",
                        "primaryPackage",
                        "properties",
                        "slug",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepDeployPackageActionActionTemplate:RunbookProcessStepDeployPackageActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepDeployPackageActionContainer:RunbookProcessStepDeployPackageActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepDeployPackageActionGitDependency:RunbookProcessStepDeployPackageActionGitDependency": {
            "properties": {
                "defaultBranch": {
                    "type": "string",
                    "description": "Name of the default branch of the repository.\n"
                },
                "filePathFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of file path filters used to narrow down the directory where files are to be sourced from. Supports glob patten syntax.\n"
                },
                "gitCredentialId": {
                    "type": "string",
                    "description": "ID of an existing Git credential.\n"
                },
                "gitCredentialType": {
                    "type": "string",
                    "description": "The Git credential authentication type.\n"
                },
                "repositoryUri": {
                    "type": "string",
                    "description": "The Git URI for the repository where this resource is sourced from.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultBranch",
                "gitCredentialType",
                "repositoryUri"
            ]
        },
        "octopusdeploy:index/RunbookProcessStepDeployPackageActionPackage:RunbookProcessStepDeployPackageActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepDeployPackageActionPrimaryPackage:RunbookProcessStepDeployPackageActionPrimaryPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepDeployPackageActionWindowsService:RunbookProcessStepDeployPackageActionWindowsService": {
            "properties": {
                "arguments": {
                    "type": "string",
                    "description": "The command line arguments that will be passed to the service when it starts\n"
                },
                "createOrUpdateService": {
                    "type": "boolean"
                },
                "customAccountName": {
                    "type": "string",
                    "description": "The Windows/domain account of the custom user that the service will run under\n"
                },
                "customAccountPassword": {
                    "type": "string",
                    "description": "The password for the custom account\n",
                    "secret": true
                },
                "dependencies": {
                    "type": "string",
                    "description": "Any dependencies that the service has. Separate the names using forward slashes (/).\n"
                },
                "description": {
                    "type": "string",
                    "description": "User-friendly description of the service (optional)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the service (optional)\n"
                },
                "executablePath": {
                    "type": "string",
                    "description": "The path to the executable relative to the package installation directory\n"
                },
                "serviceAccount": {
                    "type": "string",
                    "description": "Which built-in account will the service run under. Can be LocalSystem, NT Authority\\NetworkService, NT Authority\\LocalService, _CUSTOM or an expression\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The name of the service\n"
                },
                "startMode": {
                    "type": "string",
                    "description": "When will the service start. Can be auto, delayed-auto, manual, unchanged or an expression\n"
                }
            },
            "type": "object",
            "required": [
                "executablePath",
                "serviceName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "createOrUpdateService",
                        "customAccountPassword",
                        "executablePath",
                        "serviceName"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepDeployWindowsServiceAction:RunbookProcessStepDeployWindowsServiceAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployWindowsServiceActionActionTemplate:RunbookProcessStepDeployWindowsServiceActionActionTemplate",
                    "description": "Represents the template that is associated with this action.\n"
                },
                "arguments": {
                    "type": "string",
                    "description": "The command line arguments that will be passed to the service when it starts\n"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The channels associated with this deployment action.\n"
                },
                "condition": {
                    "type": "string",
                    "description": "The condition associated with this deployment action.\n"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployWindowsServiceActionContainer:RunbookProcessStepDeployWindowsServiceActionContainer"
                    },
                    "description": "The deployment action container associated with this deployment action.\n"
                },
                "createOrUpdateService": {
                    "type": "boolean"
                },
                "customAccountName": {
                    "type": "string",
                    "description": "The Windows/domain account of the custom user that the service will run under\n"
                },
                "customAccountPassword": {
                    "type": "string",
                    "description": "The password for the custom account\n",
                    "secret": true
                },
                "dependencies": {
                    "type": "string",
                    "description": "Any dependencies that the service has. Separate the names using forward slashes (/).\n"
                },
                "description": {
                    "type": "string",
                    "description": "User-friendly description of the service (optional)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the service (optional)\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments within which this deployment action will run.\n"
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments that this step will be skipped in\n"
                },
                "executablePath": {
                    "type": "string",
                    "description": "The path to the executable relative to the package installation directory\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of enabled features for this action.\n"
                },
                "gitDependency": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployWindowsServiceActionGitDependency:RunbookProcessStepDeployWindowsServiceActionGitDependency",
                    "description": "Configuration for resource sourcing from a git repository.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Indicates the disabled status of this deployment action.\n"
                },
                "isRequired": {
                    "type": "boolean",
                    "description": "Indicates the required status of this deployment action.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "The notes associated with this deployment action.\n"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployWindowsServiceActionPackage:RunbookProcessStepDeployWindowsServiceActionPackage"
                    },
                    "description": "The package assocated with this action.\n"
                },
                "primaryPackage": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployWindowsServiceActionPrimaryPackage:RunbookProcessStepDeployWindowsServiceActionPrimaryPackage",
                    "description": "The package assocated with this action.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                },
                "serviceAccount": {
                    "type": "string",
                    "description": "Which built-in account will the service run under. Can be LocalSystem, NT Authority\\NetworkService, NT Authority\\LocalService, _CUSTOM or an expression\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The name of the service\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The human-readable unique identifier for this resource.\n"
                },
                "sortOrder": {
                    "type": "integer"
                },
                "startMode": {
                    "type": "string",
                    "description": "When will the service start. Can be auto, delayed-auto, manual, unchanged or an expression\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                }
            },
            "type": "object",
            "required": [
                "executablePath",
                "name",
                "primaryPackage",
                "serviceName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "createOrUpdateService",
                        "customAccountPassword",
                        "environments",
                        "excludedEnvironments",
                        "executablePath",
                        "features",
                        "gitDependency",
                        "id",
                        "name",
                        "packages",
                        "primaryPackage",
                        "properties",
                        "serviceName",
                        "slug",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepDeployWindowsServiceActionActionTemplate:RunbookProcessStepDeployWindowsServiceActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepDeployWindowsServiceActionContainer:RunbookProcessStepDeployWindowsServiceActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepDeployWindowsServiceActionGitDependency:RunbookProcessStepDeployWindowsServiceActionGitDependency": {
            "properties": {
                "defaultBranch": {
                    "type": "string",
                    "description": "Name of the default branch of the repository.\n"
                },
                "filePathFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of file path filters used to narrow down the directory where files are to be sourced from. Supports glob patten syntax.\n"
                },
                "gitCredentialId": {
                    "type": "string",
                    "description": "ID of an existing Git credential.\n"
                },
                "gitCredentialType": {
                    "type": "string",
                    "description": "The Git credential authentication type.\n"
                },
                "repositoryUri": {
                    "type": "string",
                    "description": "The Git URI for the repository where this resource is sourced from.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultBranch",
                "gitCredentialType",
                "repositoryUri"
            ]
        },
        "octopusdeploy:index/RunbookProcessStepDeployWindowsServiceActionPackage:RunbookProcessStepDeployWindowsServiceActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepDeployWindowsServiceActionPrimaryPackage:RunbookProcessStepDeployWindowsServiceActionPrimaryPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepManualInterventionAction:RunbookProcessStepManualInterventionAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepManualInterventionActionActionTemplate:RunbookProcessStepManualInterventionActionActionTemplate",
                    "description": "Represents the template that is associated with this action.\n"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The channels associated with this deployment action.\n"
                },
                "condition": {
                    "type": "string",
                    "description": "The condition associated with this deployment action.\n"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepManualInterventionActionContainer:RunbookProcessStepManualInterventionActionContainer"
                    },
                    "description": "The deployment action container associated with this deployment action.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments within which this deployment action will run.\n"
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments that this step will be skipped in\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of enabled features for this action.\n"
                },
                "gitDependency": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepManualInterventionActionGitDependency:RunbookProcessStepManualInterventionActionGitDependency",
                    "description": "Configuration for resource sourcing from a git repository.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "instructions": {
                    "type": "string",
                    "description": "The instructions for the user to follow\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Indicates the disabled status of this deployment action.\n"
                },
                "isRequired": {
                    "type": "boolean",
                    "description": "Indicates the required status of this deployment action.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "The notes associated with this deployment action.\n"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepManualInterventionActionPackage:RunbookProcessStepManualInterventionActionPackage"
                    },
                    "description": "The package assocated with this action.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                },
                "responsibleTeams": {
                    "type": "string",
                    "description": "The teams responsible to resolve this step. If no teams are specified, all users who have permission to deploy the project can resolve it.\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The human-readable unique identifier for this resource.\n"
                },
                "sortOrder": {
                    "type": "integer"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                }
            },
            "type": "object",
            "required": [
                "instructions",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "gitDependency",
                        "id",
                        "instructions",
                        "name",
                        "packages",
                        "properties",
                        "slug",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepManualInterventionActionActionTemplate:RunbookProcessStepManualInterventionActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepManualInterventionActionContainer:RunbookProcessStepManualInterventionActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepManualInterventionActionGitDependency:RunbookProcessStepManualInterventionActionGitDependency": {
            "properties": {
                "defaultBranch": {
                    "type": "string",
                    "description": "Name of the default branch of the repository.\n"
                },
                "filePathFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of file path filters used to narrow down the directory where files are to be sourced from. Supports glob patten syntax.\n"
                },
                "gitCredentialId": {
                    "type": "string",
                    "description": "ID of an existing Git credential.\n"
                },
                "gitCredentialType": {
                    "type": "string",
                    "description": "The Git credential authentication type.\n"
                },
                "repositoryUri": {
                    "type": "string",
                    "description": "The Git URI for the repository where this resource is sourced from.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultBranch",
                "gitCredentialType",
                "repositoryUri"
            ]
        },
        "octopusdeploy:index/RunbookProcessStepManualInterventionActionPackage:RunbookProcessStepManualInterventionActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepRunKubectlScriptAction:RunbookProcessStepRunKubectlScriptAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepRunKubectlScriptActionActionTemplate:RunbookProcessStepRunKubectlScriptActionActionTemplate",
                    "description": "Represents the template that is associated with this action.\n"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The channels associated with this deployment action.\n"
                },
                "condition": {
                    "type": "string",
                    "description": "The condition associated with this deployment action.\n"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepRunKubectlScriptActionContainer:RunbookProcessStepRunKubectlScriptActionContainer"
                    },
                    "description": "The deployment action container associated with this deployment action.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments within which this deployment action will run.\n"
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments that this step will be skipped in\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of enabled features for this action.\n"
                },
                "gitDependency": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepRunKubectlScriptActionGitDependency:RunbookProcessStepRunKubectlScriptActionGitDependency",
                    "description": "Configuration for resource sourcing from a git repository.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Indicates the disabled status of this deployment action.\n"
                },
                "isRequired": {
                    "type": "boolean",
                    "description": "Indicates the required status of this deployment action.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "notes": {
                    "type": "string",
                    "description": "The notes associated with this deployment action.\n"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepRunKubectlScriptActionPackage:RunbookProcessStepRunKubectlScriptActionPackage"
                    },
                    "description": "The package assocated with this action.\n"
                },
                "primaryPackage": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepRunKubectlScriptActionPrimaryPackage:RunbookProcessStepRunKubectlScriptActionPrimaryPackage",
                    "description": "The package assocated with this action.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                },
                "runOnServer": {
                    "type": "boolean",
                    "description": "Whether this step runs on a worker or on the target\n"
                },
                "scriptBody": {
                    "type": "string"
                },
                "scriptFileName": {
                    "type": "string",
                    "description": "The script file name in the package\n"
                },
                "scriptParameters": {
                    "type": "string",
                    "description": "Parameters expected by the script. Use platform specific calling convention. e.g. -Path #{VariableStoringPath} for PowerShell or -- #{VariableStoringPath} for ScriptCS\n"
                },
                "scriptSource": {
                    "type": "string"
                },
                "scriptSyntax": {
                    "type": "string"
                },
                "slug": {
                    "type": "string",
                    "description": "The human-readable unique identifier for this resource.\n"
                },
                "sortOrder": {
                    "type": "integer"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "variableSubstitutionInFiles": {
                    "type": "string",
                    "description": "A newline-separated list of file names to transform, relative to the package contents. Extended wildcard syntax is supported.\n"
                },
                "workerPoolId": {
                    "type": "string",
                    "description": "The worker pool associated with this deployment action.\n"
                },
                "workerPoolVariable": {
                    "type": "string",
                    "description": "The worker pool variable associated with this deployment action.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "gitDependency",
                        "id",
                        "name",
                        "packages",
                        "primaryPackage",
                        "properties",
                        "scriptSource",
                        "scriptSyntax",
                        "slug",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepRunKubectlScriptActionActionTemplate:RunbookProcessStepRunKubectlScriptActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepRunKubectlScriptActionContainer:RunbookProcessStepRunKubectlScriptActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepRunKubectlScriptActionGitDependency:RunbookProcessStepRunKubectlScriptActionGitDependency": {
            "properties": {
                "defaultBranch": {
                    "type": "string",
                    "description": "Name of the default branch of the repository.\n"
                },
                "filePathFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of file path filters used to narrow down the directory where files are to be sourced from. Supports glob patten syntax.\n"
                },
                "gitCredentialId": {
                    "type": "string",
                    "description": "ID of an existing Git credential.\n"
                },
                "gitCredentialType": {
                    "type": "string",
                    "description": "The Git credential authentication type.\n"
                },
                "repositoryUri": {
                    "type": "string",
                    "description": "The Git URI for the repository where this resource is sourced from.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultBranch",
                "gitCredentialType",
                "repositoryUri"
            ]
        },
        "octopusdeploy:index/RunbookProcessStepRunKubectlScriptActionPackage:RunbookProcessStepRunKubectlScriptActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "extractDuringDeployment": {
                    "type": "boolean",
                    "description": "Whether to extract the package during deployment\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "extractDuringDeployment",
                        "id",
                        "name",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepRunKubectlScriptActionPrimaryPackage:RunbookProcessStepRunKubectlScriptActionPrimaryPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepRunScriptAction:RunbookProcessStepRunScriptAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepRunScriptActionActionTemplate:RunbookProcessStepRunScriptActionActionTemplate",
                    "description": "Represents the template that is associated with this action.\n"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The channels associated with this deployment action.\n"
                },
                "condition": {
                    "type": "string",
                    "description": "The condition associated with this deployment action.\n"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepRunScriptActionContainer:RunbookProcessStepRunScriptActionContainer"
                    },
                    "description": "The deployment action container associated with this deployment action.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments within which this deployment action will run.\n"
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments that this step will be skipped in\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of enabled features for this action.\n"
                },
                "gitDependency": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepRunScriptActionGitDependency:RunbookProcessStepRunScriptActionGitDependency",
                    "description": "Configuration for resource sourcing from a git repository.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Indicates the disabled status of this deployment action.\n"
                },
                "isRequired": {
                    "type": "boolean",
                    "description": "Indicates the required status of this deployment action.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "The notes associated with this deployment action.\n"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepRunScriptActionPackage:RunbookProcessStepRunScriptActionPackage"
                    },
                    "description": "The package assocated with this action.\n"
                },
                "primaryPackage": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepRunScriptActionPrimaryPackage:RunbookProcessStepRunScriptActionPrimaryPackage",
                    "description": "The package assocated with this action.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n",
                    "deprecationMessage": "This attribute is deprecated and will be removed in a future release. Please use the attributes that match the properties that are stored to this map."
                },
                "runOnServer": {
                    "type": "boolean",
                    "description": "Whether this step runs on a worker or on the target\n"
                },
                "scriptBody": {
                    "type": "string"
                },
                "scriptFileName": {
                    "type": "string",
                    "description": "The script file name in the package\n"
                },
                "scriptParameters": {
                    "type": "string",
                    "description": "Parameters expected by the script. Use platform specific calling convention. e.g. -Path #{VariableStoringPath} for PowerShell or -- #{VariableStoringPath} for ScriptCS\n"
                },
                "scriptSource": {
                    "type": "string"
                },
                "scriptSyntax": {
                    "type": "string"
                },
                "slug": {
                    "type": "string",
                    "description": "The human-readable unique identifier for this resource.\n"
                },
                "sortOrder": {
                    "type": "integer"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "variableSubstitutionInFiles": {
                    "type": "string",
                    "description": "A newline-separated list of file names to transform, relative to the package contents. Extended wildcard syntax is supported.\n"
                },
                "workerPoolId": {
                    "type": "string",
                    "description": "The worker pool associated with this deployment action.\n"
                },
                "workerPoolVariable": {
                    "type": "string",
                    "description": "The worker pool variable associated with this deployment action.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "gitDependency",
                        "id",
                        "name",
                        "packages",
                        "primaryPackage",
                        "properties",
                        "scriptSource",
                        "scriptSyntax",
                        "slug",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepRunScriptActionActionTemplate:RunbookProcessStepRunScriptActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepRunScriptActionContainer:RunbookProcessStepRunScriptActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepRunScriptActionGitDependency:RunbookProcessStepRunScriptActionGitDependency": {
            "properties": {
                "defaultBranch": {
                    "type": "string",
                    "description": "Name of the default branch of the repository.\n"
                },
                "filePathFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of file path filters used to narrow down the directory where files are to be sourced from. Supports glob patten syntax.\n"
                },
                "gitCredentialId": {
                    "type": "string",
                    "description": "ID of an existing Git credential.\n"
                },
                "gitCredentialType": {
                    "type": "string",
                    "description": "The Git credential authentication type.\n"
                },
                "repositoryUri": {
                    "type": "string",
                    "description": "The Git URI for the repository where this resource is sourced from.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultBranch",
                "gitCredentialType",
                "repositoryUri"
            ]
        },
        "octopusdeploy:index/RunbookProcessStepRunScriptActionPackage:RunbookProcessStepRunScriptActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "extractDuringDeployment": {
                    "type": "boolean",
                    "description": "Whether to extract the package during deployment\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "extractDuringDeployment",
                        "id",
                        "name",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepRunScriptActionPrimaryPackage:RunbookProcessStepRunScriptActionPrimaryPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string",
                    "description": "Whether to acquire this package on the server ('Server'), target ('ExecutionTarget') or not at all ('NotAcquired'). Can be an expression\n"
                },
                "feedId": {
                    "type": "string",
                    "description": "The feed ID associated with this package reference.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the package.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of properties associated with this package.\n"
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/SshConnectionDeploymentTargetEndpoint:SshConnectionDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/SshConnectionDeploymentTargetEndpointAuthentication:SshConnectionDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterCertificatePath": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containerOptions": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/SshConnectionDeploymentTargetEndpointContainer:SshConnectionDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/SshConnectionDeploymentTargetEndpointDestination:SshConnectionDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/SshConnectionDeploymentTargetEndpointTentacleVersionDetail:SshConnectionDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "communicationStyle"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authentication",
                        "communicationStyle",
                        "containers",
                        "destinations",
                        "id",
                        "tentacleVersionDetails"
                    ]
                }
            }
        },
        "octopusdeploy:index/SshConnectionDeploymentTargetEndpointAuthentication:SshConnectionDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "tokenPath": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/SshConnectionDeploymentTargetEndpointContainer:SshConnectionDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/SshConnectionDeploymentTargetEndpointDestination:SshConnectionDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/SshConnectionDeploymentTargetEndpointTentacleVersionDetail:SshConnectionDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "upgradeLocked",
                        "upgradeRequired",
                        "upgradeSuggested",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/TeamExternalSecurityGroup:TeamExternalSecurityGroup": {
            "properties": {
                "displayIdAndName": {
                    "type": "boolean"
                },
                "displayName": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayIdAndName",
                        "displayName",
                        "id"
                    ]
                }
            }
        },
        "octopusdeploy:index/TeamUserRole:TeamUserRole": {
            "properties": {
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "projectGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "projectIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "spaceId": {
                    "type": "string"
                },
                "teamId": {
                    "type": "string"
                },
                "tenantIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userRoleId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "spaceId",
                "userRoleId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "spaceId",
                        "teamId",
                        "userRoleId"
                    ]
                }
            }
        },
        "octopusdeploy:index/UserIdentity:UserIdentity": {
            "properties": {
                "claims": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/UserIdentityClaim:UserIdentityClaim"
                    }
                },
                "provider": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/UserIdentityClaim:UserIdentityClaim": {
            "properties": {
                "isIdentifyingClaim": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "isIdentifyingClaim",
                "name",
                "value"
            ]
        },
        "octopusdeploy:index/getAccountsAccount:getAccountsAccount": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "The access key associated with this resource.\n"
                },
                "accountType": {
                    "type": "string",
                    "description": "Specifies the type of the account. Valid account types are `AmazonWebServicesAccount`, `AmazonWebServicesRoleAccount`, `AzureServicePrincipal`, `AzureOIDC`, `AzureSubscription`, `AmazonWebServicesOidcAccount`, `None`, `SshKeyPair`, `Token`, or `UsernamePassword`.\n"
                },
                "activeDirectoryEndpointBaseUri": {
                    "type": "string"
                },
                "applicationId": {
                    "type": "string",
                    "description": "The application ID of this resource.\n"
                },
                "authenticationEndpoint": {
                    "type": "string",
                    "description": "The authentication endpoint URI for this resource.\n"
                },
                "azureEnvironment": {
                    "type": "string",
                    "description": "The Azure environment associated with this resource. Valid Azure environments are `AzureCloud`, `AzureChinaCloud`, `AzureGermanCloud`, or `AzureUSGovernment`.\n"
                },
                "certificateData": {
                    "type": "string",
                    "secret": true
                },
                "certificateThumbprint": {
                    "type": "string",
                    "secret": true
                },
                "clientSecret": {
                    "type": "string",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of this account resource.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "privateKeyFile": {
                    "type": "string",
                    "secret": true
                },
                "privateKeyPassphrase": {
                    "type": "string",
                    "secret": true
                },
                "resourceManagerEndpoint": {
                    "type": "string",
                    "description": "The resource manager endpoint URI for this resource.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "The secret key associated with this resource.\n",
                    "secret": true
                },
                "serviceManagementEndpointBaseUri": {
                    "type": "string"
                },
                "serviceManagementEndpointSuffix": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "subscriptionId": {
                    "type": "string",
                    "description": "The subscription ID of this resource.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The tenant ID of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "token": {
                    "type": "string",
                    "description": "The token of this resource.\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "accountType",
                "activeDirectoryEndpointBaseUri",
                "applicationId",
                "authenticationEndpoint",
                "azureEnvironment",
                "certificateData",
                "certificateThumbprint",
                "clientSecret",
                "description",
                "environments",
                "id",
                "name",
                "password",
                "privateKeyFile",
                "privateKeyPassphrase",
                "resourceManagerEndpoint",
                "secretKey",
                "serviceManagementEndpointBaseUri",
                "serviceManagementEndpointSuffix",
                "spaceId",
                "subscriptionId",
                "tenantId",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "token",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTarget:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTarget": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpoint:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "slot": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "cloudServiceName",
                "defaultWorkerPoolId",
                "endpoints",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "id",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "shellName",
                "shellVersion",
                "slot",
                "spaceId",
                "status",
                "statusSummary",
                "storageAccountName",
                "swapIfPossible",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri",
                "useCurrentInstanceCount"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpoint:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointAuthentication:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterCertificatePath": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containerOptions": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointContainer:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointDestination:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointTentacleVersionDetail:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authentication",
                "communicationStyle",
                "containers",
                "destinations",
                "id",
                "tentacleVersionDetails"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointAuthentication:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "tokenPath": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointContainer:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointDestination:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointTentacleVersionDetail:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "upgradeLocked",
                "upgradeRequired",
                "upgradeSuggested",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTarget:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTarget": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialPassword": {
                    "type": "string",
                    "secret": true
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpoint:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aadClientCredentialSecret",
                "aadCredentialType",
                "aadUserCredentialPassword",
                "aadUserCredentialUsername",
                "certificateStoreLocation",
                "certificateStoreName",
                "clientCertificateVariable",
                "connectionEndpoint",
                "endpoints",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "id",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "securityMode",
                "serverCertificateThumbprint",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpoint:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointAuthentication:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterCertificatePath": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containerOptions": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointContainer:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointDestination:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointTentacleVersionDetail:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authentication",
                "communicationStyle",
                "containers",
                "destinations",
                "id",
                "tentacleVersionDetails"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointAuthentication:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "tokenPath": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointContainer:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointDestination:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointTentacleVersionDetail:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "upgradeLocked",
                "upgradeRequired",
                "upgradeSuggested",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTarget:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTarget": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpoint:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "endpoints",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "id",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "resourceGroupName",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri",
                "webAppName",
                "webAppSlotName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpoint:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointAuthentication:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterCertificatePath": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containerOptions": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointContainer:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointDestination:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointTentacleVersionDetail:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authentication",
                "communicationStyle",
                "containers",
                "destinations",
                "id",
                "tentacleVersionDetails"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointAuthentication:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "tokenPath": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointContainer:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointDestination:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointTentacleVersionDetail:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "upgradeLocked",
                "upgradeRequired",
                "upgradeSuggested",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getCertificatesCertificate:getCertificatesCertificate": {
            "properties": {
                "archived": {
                    "type": "string"
                },
                "certificateData": {
                    "type": "string",
                    "description": "The encoded data of the certificate.\n",
                    "secret": true
                },
                "certificateDataFormat": {
                    "type": "string",
                    "description": "Specifies the archive file format used for storing cryptography objects in the certificate. Valid formats are `Der`, `Pem`, `Pkcs12`, or `Unknown`.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasPrivateKey": {
                    "type": "boolean",
                    "description": "Indicates if the certificate has a private key.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isExpired": {
                    "type": "boolean",
                    "description": "Indicates if the certificate has expired.\n"
                },
                "issuerCommonName": {
                    "type": "string"
                },
                "issuerDistinguishedName": {
                    "type": "string"
                },
                "issuerOrganization": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "notAfter": {
                    "type": "string"
                },
                "notBefore": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "replacedBy": {
                    "type": "string"
                },
                "selfSigned": {
                    "type": "boolean"
                },
                "serialNumber": {
                    "type": "string"
                },
                "signatureAlgorithmName": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string"
                },
                "subjectAlternativeNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subjectCommonName": {
                    "type": "string"
                },
                "subjectDistinguishedName": {
                    "type": "string"
                },
                "subjectOrganization": {
                    "type": "string"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "archived",
                "certificateData",
                "certificateDataFormat",
                "environments",
                "hasPrivateKey",
                "id",
                "isExpired",
                "issuerCommonName",
                "issuerDistinguishedName",
                "issuerOrganization",
                "name",
                "notAfter",
                "notBefore",
                "notes",
                "password",
                "replacedBy",
                "selfSigned",
                "serialNumber",
                "signatureAlgorithmName",
                "spaceId",
                "subjectAlternativeNames",
                "subjectCommonName",
                "subjectDistinguishedName",
                "subjectOrganization",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getChannelsChannel:getChannelsChannel": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this channel.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Indicates if this is the default channel for the associated project.\n"
                },
                "lifecycleId": {
                    "type": "string",
                    "description": "The lifecycle ID associated with this channel.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project ID associated with this channel.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getChannelsChannelRule:getChannelsChannelRule"
                    },
                    "description": "A list of rules associated with this channel.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "isDefault",
                "lifecycleId",
                "name",
                "projectId",
                "rules",
                "spaceId",
                "tenantTags"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getChannelsChannelRule:getChannelsChannelRule": {
            "properties": {
                "actionPackages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getChannelsChannelRuleActionPackage:getChannelsChannelRuleActionPackage"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "tag": {
                    "type": "string"
                },
                "versionRange": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "actionPackages",
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getChannelsChannelRuleActionPackage:getChannelsChannelRuleActionPackage": {
            "properties": {
                "deploymentAction": {
                    "type": "string"
                },
                "packageReference": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getCloudRegionDeploymentTargetsCloudRegionDeploymentTarget:getCloudRegionDeploymentTargetsCloudRegionDeploymentTarget": {
            "properties": {
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getCloudRegionDeploymentTargetsCloudRegionDeploymentTargetEndpoint:getCloudRegionDeploymentTargetsCloudRegionDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "defaultWorkerPoolId",
                "endpoints",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "id",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getCloudRegionDeploymentTargetsCloudRegionDeploymentTargetEndpoint:getCloudRegionDeploymentTargetsCloudRegionDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/getCloudRegionDeploymentTargetsCloudRegionDeploymentTargetEndpointAuthentication:getCloudRegionDeploymentTargetsCloudRegionDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterCertificatePath": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containerOptions": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getCloudRegionDeploymentTargetsCloudRegionDeploymentTargetEndpointContainer:getCloudRegionDeploymentTargetsCloudRegionDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getCloudRegionDeploymentTargetsCloudRegionDeploymentTargetEndpointDestination:getCloudRegionDeploymentTargetsCloudRegionDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getCloudRegionDeploymentTargetsCloudRegionDeploymentTargetEndpointTentacleVersionDetail:getCloudRegionDeploymentTargetsCloudRegionDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authentication",
                "communicationStyle",
                "containers",
                "destinations",
                "id",
                "tentacleVersionDetails"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getCloudRegionDeploymentTargetsCloudRegionDeploymentTargetEndpointAuthentication:getCloudRegionDeploymentTargetsCloudRegionDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "tokenPath": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getCloudRegionDeploymentTargetsCloudRegionDeploymentTargetEndpointContainer:getCloudRegionDeploymentTargetsCloudRegionDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getCloudRegionDeploymentTargetsCloudRegionDeploymentTargetEndpointDestination:getCloudRegionDeploymentTargetsCloudRegionDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getCloudRegionDeploymentTargetsCloudRegionDeploymentTargetEndpointTentacleVersionDetail:getCloudRegionDeploymentTargetsCloudRegionDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "upgradeLocked",
                "upgradeRequired",
                "upgradeSuggested",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getDeploymentTargetsDeploymentTarget:getDeploymentTargetsDeploymentTarget": {
            "properties": {
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getDeploymentTargetsDeploymentTargetEndpoint:getDeploymentTargetsDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "endpoints",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "id",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getDeploymentTargetsDeploymentTargetEndpoint:getDeploymentTargetsDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/getDeploymentTargetsDeploymentTargetEndpointAuthentication:getDeploymentTargetsDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterCertificatePath": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containerOptions": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getDeploymentTargetsDeploymentTargetEndpointContainer:getDeploymentTargetsDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getDeploymentTargetsDeploymentTargetEndpointDestination:getDeploymentTargetsDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getDeploymentTargetsDeploymentTargetEndpointTentacleVersionDetail:getDeploymentTargetsDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authentication",
                "communicationStyle",
                "containers",
                "destinations",
                "id",
                "tentacleVersionDetails"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getDeploymentTargetsDeploymentTargetEndpointAuthentication:getDeploymentTargetsDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "tokenPath": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getDeploymentTargetsDeploymentTargetEndpointContainer:getDeploymentTargetsDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getDeploymentTargetsDeploymentTargetEndpointDestination:getDeploymentTargetsDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getDeploymentTargetsDeploymentTargetEndpointTentacleVersionDetail:getDeploymentTargetsDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "upgradeLocked",
                "upgradeRequired",
                "upgradeSuggested",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getKubernetesAgentDeploymentTargetsKubernetesAgentDeploymentTarget:getKubernetesAgentDeploymentTargetsKubernetesAgentDeploymentTarget": {
            "properties": {
                "agentHelmReleaseName": {
                    "type": "string",
                    "description": "Name of the Helm release that the agent belongs to.\n"
                },
                "agentKubernetesNamespace": {
                    "type": "string",
                    "description": "Name of the Kubernetes namespace where the agent is installed.\n"
                },
                "agentTentacleVersion": {
                    "type": "string",
                    "description": "Current Tentacle version of the agent\n"
                },
                "agentUpgradeStatus": {
                    "type": "string",
                    "description": "Current upgrade availability status of the agent. One of 'NoUpgrades', 'UpgradeAvailable', 'UpgradeSuggested', 'UpgradeRequired'\n"
                },
                "agentVersion": {
                    "type": "string",
                    "description": "Current Helm chart version of the agent.\n"
                },
                "communicationMode": {
                    "type": "string",
                    "description": "The communication mode used by the Kubernetes agent to communicate with Octopus Server. Currently, the only supported value is 'Polling'.\n"
                },
                "defaultNamespace": {
                    "type": "string",
                    "description": "Optional default namespace that will be used when using Kubernetes deployment steps, can be overrides within step configurations.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs this Kubernetes agent can deploy to.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Whether the Kubernetes agent is disabled. If the agent is disabled, it will not be included in any deployments.\n"
                },
                "machinePolicyId": {
                    "type": "string",
                    "description": "Optional ID of the machine policy that the Kubernetes agent will use. If not provided the default machine policy will be used.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of target roles that are associated to this Kubernetes agent.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the Kubernetes agent's certificate used by server to verify the identity of the agent. This is the same thumbprint that was used when installing the agent.\n"
                },
                "upgradeLocked": {
                    "type": "boolean",
                    "description": "If enabled the Kubernetes agent will not automatically upgrade and will stay on the currently installed version, even if the associated machine policy is configured to automatically upgrade.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "The URI of the Kubernetes agent's used by the server to queue messages. This is the same subscription uri that was used when installing the agent.\n"
                }
            },
            "type": "object",
            "required": [
                "agentHelmReleaseName",
                "agentKubernetesNamespace",
                "agentTentacleVersion",
                "agentUpgradeStatus",
                "agentVersion",
                "communicationMode",
                "defaultNamespace",
                "environments",
                "id",
                "isDisabled",
                "machinePolicyId",
                "name",
                "roles",
                "spaceId",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "upgradeLocked",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getKubernetesAgentWorkersKubernetesAgentWorker:getKubernetesAgentWorkersKubernetesAgentWorker": {
            "properties": {
                "agentHelmReleaseName": {
                    "type": "string",
                    "description": "Name of the Helm release that the agent belongs to.\n"
                },
                "agentKubernetesNamespace": {
                    "type": "string",
                    "description": "Name of the Kubernetes namespace where the agent is installed.\n"
                },
                "agentTentacleVersion": {
                    "type": "string",
                    "description": "Current Tentacle version of the agent\n"
                },
                "agentUpgradeStatus": {
                    "type": "string",
                    "description": "Current upgrade availability status of the agent. One of 'NoUpgrades', 'UpgradeAvailable', 'UpgradeSuggested', 'UpgradeRequired'\n"
                },
                "agentVersion": {
                    "type": "string",
                    "description": "Current Helm chart version of the agent.\n"
                },
                "communicationMode": {
                    "type": "string",
                    "description": "The communication mode used by the Kubernetes agent to communicate with Octopus Server. Currently, the only supported value is 'Polling'.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Whether the Kubernetes agent is disabled. If the agent is disabled, it will not be included in any deployments.\n"
                },
                "machinePolicyId": {
                    "type": "string",
                    "description": "Optional ID of the machine policy that the Kubernetes agent will use. If not provided the default machine policy will be used.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the Kubernetes agent's certificate used by server to verify the identity of the agent. This is the same thumbprint that was used when installing the agent.\n"
                },
                "upgradeLocked": {
                    "type": "boolean",
                    "description": "If enabled the Kubernetes agent will not automatically upgrade and will stay on the currently installed version, even if the associated machine policy is configured to automatically upgrade.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "The URI of the Kubernetes agent's used by the server to queue messages. This is the same subscription uri that was used when installing the agent.\n"
                },
                "workerPoolIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of worker pool Ids specifying the pools in which this worker belongs\n"
                }
            },
            "type": "object",
            "required": [
                "agentHelmReleaseName",
                "agentKubernetesNamespace",
                "agentTentacleVersion",
                "agentUpgradeStatus",
                "agentVersion",
                "communicationMode",
                "id",
                "isDisabled",
                "machinePolicyId",
                "name",
                "spaceId",
                "thumbprint",
                "upgradeLocked",
                "uri",
                "workerPoolIds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTarget:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTarget": {
            "properties": {
                "authentications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetAuthentication"
                    }
                },
                "awsAccountAuthentications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetAwsAccountAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetAwsAccountAuthentication"
                    }
                },
                "azureServicePrincipalAuthentications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetAzureServicePrincipalAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetAzureServicePrincipalAuthentication"
                    }
                },
                "certificateAuthentications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetCertificateAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetCertificateAuthentication"
                    }
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterCertificatePath": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "containerOptions": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetContainer:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpoint:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "gcpAccountAuthentications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetGcpAccountAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetGcpAccountAuthentication"
                    }
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "podAuthentications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetPodAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetPodAuthentication"
                    }
                },
                "proxyId": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authentications",
                "awsAccountAuthentications",
                "azureServicePrincipalAuthentications",
                "certificateAuthentications",
                "clusterCertificate",
                "clusterCertificatePath",
                "clusterUrl",
                "containers",
                "containerOptions",
                "defaultWorkerPoolId",
                "endpoints",
                "environments",
                "gcpAccountAuthentications",
                "hasLatestCalamari",
                "healthStatus",
                "id",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "namespace",
                "operatingSystem",
                "podAuthentications",
                "proxyId",
                "roles",
                "runningInContainer",
                "shellName",
                "shellVersion",
                "skipTlsVerification",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetAwsAccountAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetAwsAccountAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "clusterName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetAzureServicePrincipalAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetAzureServicePrincipalAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "clusterName",
                "clusterResourceGroup"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetCertificateAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetCertificateAuthentication": {
            "properties": {
                "clientCertificate": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetContainer:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpoint:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterCertificatePath": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containerOptions": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointContainer:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointDestination:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointTentacleVersionDetail:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authentication",
                "communicationStyle",
                "containers",
                "destinations",
                "id",
                "tentacleVersionDetails"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "tokenPath": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointContainer:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointDestination:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointTentacleVersionDetail:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "upgradeLocked",
                "upgradeRequired",
                "upgradeSuggested",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetGcpAccountAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetGcpAccountAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "clusterName",
                "project"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetPodAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetPodAuthentication": {
            "properties": {
                "tokenPath": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tokenPath"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getListeningTentacleDeploymentTargetsListeningTentacleDeploymentTarget:getListeningTentacleDeploymentTargetsListeningTentacleDeploymentTarget": {
            "properties": {
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this listening tentacle.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Represents the disabled status of this deployment target.\n"
                },
                "isInProcess": {
                    "type": "boolean",
                    "description": "Represents the in-process status of this deployment target.\n"
                },
                "machinePolicyId": {
                    "type": "string",
                    "description": "The machine policy ID that is associated with this deployment target.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string",
                    "description": "The operating system that is associated with this deployment target.\n"
                },
                "proxyId": {
                    "type": "string",
                    "description": "The proxy ID that is associated with this deployment target.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role IDs that are associated with this deployment target.\n"
                },
                "shellName": {
                    "type": "string",
                    "description": "The shell name associated with this deployment target.\n"
                },
                "shellVersion": {
                    "type": "string",
                    "description": "The shell version associated with this deployment target.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "tentacleUrl": {
                    "type": "string",
                    "description": "The tenant URL of this deployment target.\n"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getListeningTentacleDeploymentTargetsListeningTentacleDeploymentTargetTentacleVersionDetail:getListeningTentacleDeploymentTargetsListeningTentacleDeploymentTargetTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of this deployment target.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "The URI of this deployment target.\n"
                }
            },
            "type": "object",
            "required": [
                "certificateSignatureAlgorithm",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "id",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "proxyId",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "tentacleUrl",
                "tentacleVersionDetails",
                "thumbprint",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getListeningTentacleDeploymentTargetsListeningTentacleDeploymentTargetTentacleVersionDetail:getListeningTentacleDeploymentTargetsListeningTentacleDeploymentTargetTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "upgradeLocked",
                "upgradeRequired",
                "upgradeSuggested",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getMachinePoliciesMachinePolicy:getMachinePoliciesMachinePolicy": {
            "properties": {
                "connectionConnectTimeout": {
                    "type": "integer",
                    "description": "In nanoseconds. Minimum value: 10000000000 (10 seconds).\n"
                },
                "connectionRetryCountLimit": {
                    "type": "integer"
                },
                "connectionRetrySleepInterval": {
                    "type": "integer",
                    "description": "In nanoseconds.\n"
                },
                "connectionRetryTimeLimit": {
                    "type": "integer",
                    "description": "In nanoseconds.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this machine policy.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "machineCleanupPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getMachinePoliciesMachinePolicyMachineCleanupPolicy:getMachinePoliciesMachinePolicyMachineCleanupPolicy"
                    }
                },
                "machineConnectivityPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getMachinePoliciesMachinePolicyMachineConnectivityPolicy:getMachinePoliciesMachinePolicyMachineConnectivityPolicy"
                    }
                },
                "machineHealthCheckPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getMachinePoliciesMachinePolicyMachineHealthCheckPolicy:getMachinePoliciesMachinePolicyMachineHealthCheckPolicy"
                    }
                },
                "machineUpdatePolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getMachinePoliciesMachinePolicyMachineUpdatePolicy:getMachinePoliciesMachinePolicyMachineUpdatePolicy"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "pollingRequestQueueTimeout": {
                    "type": "integer",
                    "description": "In nanoseconds.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                }
            },
            "type": "object",
            "required": [
                "connectionConnectTimeout",
                "connectionRetryCountLimit",
                "connectionRetrySleepInterval",
                "connectionRetryTimeLimit",
                "description",
                "id",
                "isDefault",
                "machineCleanupPolicies",
                "machineConnectivityPolicies",
                "machineHealthCheckPolicies",
                "machineUpdatePolicies",
                "name",
                "pollingRequestQueueTimeout",
                "spaceId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getMachinePoliciesMachinePolicyMachineCleanupPolicy:getMachinePoliciesMachinePolicyMachineCleanupPolicy": {
            "properties": {
                "deleteMachinesBehavior": {
                    "type": "string"
                },
                "deleteMachinesElapsedTimespan": {
                    "type": "integer",
                    "description": "In nanoseconds.\n"
                }
            },
            "type": "object",
            "required": [
                "deleteMachinesElapsedTimespan"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getMachinePoliciesMachinePolicyMachineConnectivityPolicy:getMachinePoliciesMachinePolicyMachineConnectivityPolicy": {
            "properties": {
                "machineConnectivityBehavior": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getMachinePoliciesMachinePolicyMachineHealthCheckPolicy:getMachinePoliciesMachinePolicyMachineHealthCheckPolicy": {
            "properties": {
                "bashHealthCheckPolicy": {
                    "$ref": "#/types/octopusdeploy:index/getMachinePoliciesMachinePolicyMachineHealthCheckPolicyBashHealthCheckPolicy:getMachinePoliciesMachinePolicyMachineHealthCheckPolicyBashHealthCheckPolicy"
                },
                "healthCheckCron": {
                    "type": "string"
                },
                "healthCheckCronTimezone": {
                    "type": "string"
                },
                "healthCheckInterval": {
                    "type": "integer",
                    "description": "In nanoseconds.\n"
                },
                "healthCheckType": {
                    "type": "string"
                },
                "powershellHealthCheckPolicy": {
                    "$ref": "#/types/octopusdeploy:index/getMachinePoliciesMachinePolicyMachineHealthCheckPolicyPowershellHealthCheckPolicy:getMachinePoliciesMachinePolicyMachineHealthCheckPolicyPowershellHealthCheckPolicy"
                }
            },
            "type": "object",
            "required": [
                "bashHealthCheckPolicy",
                "powershellHealthCheckPolicy"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getMachinePoliciesMachinePolicyMachineHealthCheckPolicyBashHealthCheckPolicy:getMachinePoliciesMachinePolicyMachineHealthCheckPolicyBashHealthCheckPolicy": {
            "properties": {
                "runType": {
                    "type": "string"
                },
                "scriptBody": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getMachinePoliciesMachinePolicyMachineHealthCheckPolicyPowershellHealthCheckPolicy:getMachinePoliciesMachinePolicyMachineHealthCheckPolicyPowershellHealthCheckPolicy": {
            "properties": {
                "runType": {
                    "type": "string"
                },
                "scriptBody": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getMachinePoliciesMachinePolicyMachineUpdatePolicy:getMachinePoliciesMachinePolicyMachineUpdatePolicy": {
            "properties": {
                "calamariUpdateBehavior": {
                    "type": "string",
                    "description": "The behaviour of how Calamari is updated. Valid values are `UpdateAlways`, `UpdateOnDeployment` and `UpdateOnNewMachine`.\n"
                },
                "kubernetesAgentUpdateBehavior": {
                    "type": "string",
                    "description": "The behaviour of how Kubernetes agent machines are updated. Valid values are `NeverUpdate` and `Update`.\n"
                },
                "tentacleUpdateAccountId": {
                    "type": "string",
                    "description": "The Account ID to perform any Tentacle updates under.\n"
                },
                "tentacleUpdateBehavior": {
                    "type": "string",
                    "description": "The behaviour of how Tentacle machines are updated. Valid values are `NeverUpdate` and `Update`.\n"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTarget:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTarget": {
            "properties": {
                "applicationsDirectory": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetDestination:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetDestination"
                    }
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpoint:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "applicationsDirectory",
                "destinations",
                "endpoints",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "id",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri",
                "workingDirectory"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetDestination:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpoint:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointAuthentication:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterCertificatePath": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containerOptions": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointContainer:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointDestination:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointTentacleVersionDetail:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authentication",
                "communicationStyle",
                "containers",
                "destinations",
                "id",
                "tentacleVersionDetails"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointAuthentication:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "tokenPath": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointContainer:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointDestination:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointTentacleVersionDetail:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "upgradeLocked",
                "upgradeRequired",
                "upgradeSuggested",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTarget:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTarget": {
            "properties": {
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpoint:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "tentacleUrl": {
                    "type": "string"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetTentacleVersionDetail:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "certificateSignatureAlgorithm",
                "endpoints",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "id",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "tentacleUrl",
                "tentacleVersionDetails",
                "thumbprint",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpoint:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointAuthentication:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterCertificatePath": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containerOptions": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointContainer:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointDestination:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointTentacleVersionDetail:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authentication",
                "communicationStyle",
                "containers",
                "destinations",
                "id",
                "tentacleVersionDetails"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointAuthentication:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "tokenPath": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointContainer:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointDestination:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointTentacleVersionDetail:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "upgradeLocked",
                "upgradeRequired",
                "upgradeSuggested",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetTentacleVersionDetail:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "upgradeLocked",
                "upgradeRequired",
                "upgradeSuggested",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTarget:getSshConnectionDeploymentTargetsSshConnectionDeploymentTarget": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpoint:getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "fingerprint": {
                    "type": "string"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "dotNetCorePlatform",
                "endpoints",
                "environments",
                "fingerprint",
                "hasLatestCalamari",
                "healthStatus",
                "host",
                "id",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "port",
                "proxyId",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpoint:getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointAuthentication:getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterCertificatePath": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containerOptions": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointContainer:getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointDestination:getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointTentacleVersionDetail:getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authentication",
                "communicationStyle",
                "containers",
                "destinations",
                "id",
                "tentacleVersionDetails"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointAuthentication:getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "tokenPath": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointContainer:getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointDestination:getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointTentacleVersionDetail:getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "upgradeLocked",
                "upgradeRequired",
                "upgradeSuggested",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getTeamsTeam:getTeamsTeam": {
            "properties": {
                "canBeDeleted": {
                    "type": "boolean"
                },
                "canBeRenamed": {
                    "type": "boolean"
                },
                "canChangeMembers": {
                    "type": "boolean"
                },
                "canChangeRoles": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The user-friendly description of this team.\n"
                },
                "externalSecurityGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getTeamsTeamExternalSecurityGroup:getTeamsTeamExternalSecurityGroup"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this team.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space associated with this team.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of user IDs designated to be members of this team.\n"
                }
            },
            "type": "object",
            "required": [
                "canBeDeleted",
                "canBeRenamed",
                "canChangeMembers",
                "canChangeRoles",
                "description",
                "externalSecurityGroups",
                "id",
                "name",
                "spaceId",
                "users"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getTeamsTeamExternalSecurityGroup:getTeamsTeamExternalSecurityGroup": {
            "properties": {
                "displayIdAndName": {
                    "type": "boolean"
                },
                "displayName": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                }
            },
            "type": "object",
            "required": [
                "displayIdAndName",
                "displayName",
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getUserRolesUserRole:getUserRolesUserRole": {
            "properties": {
                "canBeDeleted": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this user role.\n"
                },
                "grantedSpacePermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "grantedSystemPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spacePermissionDescriptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "supportedRestrictions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "systemPermissionDescriptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "canBeDeleted",
                "description",
                "grantedSpacePermissions",
                "grantedSystemPermissions",
                "id",
                "name",
                "spacePermissionDescriptions",
                "supportedRestrictions",
                "systemPermissionDescriptions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getUsersUser:getUsersUser": {
            "properties": {
                "canPasswordBeEdited": {
                    "type": "boolean"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource.\n"
                },
                "emailAddress": {
                    "type": "string",
                    "description": "The email address of this resource.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getUsersUserIdentity:getUsersUserIdentity"
                    }
                },
                "isActive": {
                    "type": "boolean"
                },
                "isRequestor": {
                    "type": "boolean"
                },
                "isService": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "canPasswordBeEdited",
                "displayName",
                "emailAddress",
                "id",
                "identities",
                "isActive",
                "isRequestor",
                "isService",
                "password",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getUsersUserIdentity:getUsersUserIdentity": {
            "properties": {
                "claims": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getUsersUserIdentityClaim:getUsersUserIdentityClaim"
                    }
                },
                "provider": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getUsersUserIdentityClaim:getUsersUserIdentityClaim": {
            "properties": {
                "isIdentifyingClaim": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "isIdentifyingClaim",
                "name",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getWorkerPoolsWorkerPool:getWorkerPoolsWorkerPool": {
            "properties": {
                "canAddWorkers": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this worker pool.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "sortOrder": {
                    "type": "integer",
                    "description": "The order number to sort a dynamic worker pool.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "workerPoolType": {
                    "type": "string"
                },
                "workerType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "canAddWorkers",
                "description",
                "id",
                "isDefault",
                "name",
                "sortOrder",
                "spaceId",
                "workerPoolType",
                "workerType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the octopusdeploy package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "address": {
                "type": "string",
                "description": "The endpoint of the Octopus REST API\n"
            },
            "apiKey": {
                "type": "string",
                "description": "The API key to use with the Octopus REST API\n"
            },
            "spaceId": {
                "type": "string",
                "description": "The space ID to target\n"
            }
        },
        "inputProperties": {
            "address": {
                "type": "string",
                "description": "The endpoint of the Octopus REST API\n"
            },
            "apiKey": {
                "type": "string",
                "description": "The API key to use with the Octopus REST API\n"
            },
            "spaceId": {
                "type": "string",
                "description": "The space ID to target\n"
            }
        }
    },
    "resources": {
        "octopusdeploy:index/awsAccount:AwsAccount": {
            "description": "This resource manages AWS accounts in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.AwsAccount(\"example\", {\n    accessKey: \"access-key\",\n    secretKey: \"###########\",\n});\n// required; get from secure environment/store\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.AwsAccount(\"example\",\n    access_key=\"access-key\",\n    secret_key=\"###########\")\n# required; get from secure environment/store\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.AwsAccount(\"example\", new()\n    {\n        AccessKey = \"access-key\",\n        SecretKey = \"###########\",\n    });\n\n    // required; get from secure environment/store\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewAwsAccount(ctx, \"example\", \u0026octopusdeploy.AwsAccountArgs{\n\t\t\tAccessKey: pulumi.String(\"access-key\"),\n\t\t\tSecretKey: pulumi.String(\"###########\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.AwsAccount;\nimport com.pulumi.octopusdeploy.AwsAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AwsAccount(\"example\", AwsAccountArgs.builder()        \n            .accessKey(\"access-key\")\n            .secretKey(\"###########\")\n            .build());\n\n        // required; get from secure environment/store\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:AwsAccount\n    properties:\n      accessKey: access-key\n      secretKey: '###########'\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/awsAccount:AwsAccount [options] octopusdeploy_aws_account.\u003cname\u003e \u003caccount-id\u003e\n```\n\n",
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "The access key associated with this AWS account.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A user-friendly description of this AWS account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this AWS account.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "The secret key associated with this resource.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                }
            },
            "required": [
                "accessKey",
                "environments",
                "name",
                "secretKey",
                "spaceId",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants"
            ],
            "inputProperties": {
                "accessKey": {
                    "type": "string",
                    "description": "The access key associated with this AWS account.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A user-friendly description of this AWS account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this AWS account.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "The secret key associated with this resource.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                }
            },
            "requiredInputs": [
                "accessKey",
                "secretKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AwsAccount resources.\n",
                "properties": {
                    "accessKey": {
                        "type": "string",
                        "description": "The access key associated with this AWS account.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A user-friendly description of this AWS account.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this AWS account.\n"
                    },
                    "secretKey": {
                        "type": "string",
                        "description": "The secret key associated with this resource.\n",
                        "secret": true
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/awsOpenidConnectAccount:AwsOpenidConnectAccount": {
            "description": "This resource manages AWS OIDC accounts in Octopus Deploy.\n",
            "properties": {
                "accountTestSubjectKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Keys to include in an account test. Valid options are: `space`, `account`, `type`\n"
                },
                "description": {
                    "type": "string",
                    "description": "A user-friendly description of this AWS OIDC account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "executionSubjectKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Keys to include in a deployment or runbook. Valid options are `space`, `environment`, `project`, `tenant`, `runbook`, `account`, `type`\n"
                },
                "healthSubjectKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Keys to include in a health check. Valid options are `space`, `account`, `target`, `type`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this AWS OIDC account.\n"
                },
                "roleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the role that the caller is assuming.\n"
                },
                "sessionDuration": {
                    "type": "integer",
                    "description": "The duration, in seconds, of the role session.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                }
            },
            "required": [
                "environments",
                "name",
                "roleArn",
                "spaceId",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants"
            ],
            "inputProperties": {
                "accountTestSubjectKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Keys to include in an account test. Valid options are: `space`, `account`, `type`\n"
                },
                "description": {
                    "type": "string",
                    "description": "A user-friendly description of this AWS OIDC account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "executionSubjectKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Keys to include in a deployment or runbook. Valid options are `space`, `environment`, `project`, `tenant`, `runbook`, `account`, `type`\n"
                },
                "healthSubjectKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Keys to include in a health check. Valid options are `space`, `account`, `target`, `type`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this AWS OIDC account.\n"
                },
                "roleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the role that the caller is assuming.\n"
                },
                "sessionDuration": {
                    "type": "integer",
                    "description": "The duration, in seconds, of the role session.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                }
            },
            "requiredInputs": [
                "roleArn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AwsOpenidConnectAccount resources.\n",
                "properties": {
                    "accountTestSubjectKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Keys to include in an account test. Valid options are: `space`, `account`, `type`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A user-friendly description of this AWS OIDC account.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "executionSubjectKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Keys to include in a deployment or runbook. Valid options are `space`, `environment`, `project`, `tenant`, `runbook`, `account`, `type`\n"
                    },
                    "healthSubjectKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Keys to include in a health check. Valid options are `space`, `account`, `target`, `type`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this AWS OIDC account.\n"
                    },
                    "roleArn": {
                        "type": "string",
                        "description": "The Amazon Resource Name (ARN) of the role that the caller is assuming.\n"
                    },
                    "sessionDuration": {
                        "type": "integer",
                        "description": "The duration, in seconds, of the role session.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/azureCloudServiceDeploymentTarget:AzureCloudServiceDeploymentTarget": {
            "description": "This resource manages Azure cloud service deployment targets in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.AzureCloudServiceDeploymentTarget(\"example\", {\n    accountId: \"Accounts-123\",\n    cloudServiceName: \"[cloud_service_name]\",\n    environments: [\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    roles: [\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    storageAccountName: \"[storage_account_name]\",\n    tenantedDeploymentParticipation: \"Untenanted\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.AzureCloudServiceDeploymentTarget(\"example\",\n    account_id=\"Accounts-123\",\n    cloud_service_name=\"[cloud_service_name]\",\n    environments=[\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    roles=[\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    storage_account_name=\"[storage_account_name]\",\n    tenanted_deployment_participation=\"Untenanted\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.AzureCloudServiceDeploymentTarget(\"example\", new()\n    {\n        AccountId = \"Accounts-123\",\n        CloudServiceName = \"[cloud_service_name]\",\n        Environments = new[]\n        {\n            \"Environments-123\",\n            \"Environment-321\",\n        },\n        Roles = new[]\n        {\n            \"Development Team\",\n            \"System Administrators\",\n        },\n        StorageAccountName = \"[storage_account_name]\",\n        TenantedDeploymentParticipation = \"Untenanted\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewAzureCloudServiceDeploymentTarget(ctx, \"example\", \u0026octopusdeploy.AzureCloudServiceDeploymentTargetArgs{\n\t\t\tAccountId:        pulumi.String(\"Accounts-123\"),\n\t\t\tCloudServiceName: pulumi.String(\"[cloud_service_name]\"),\n\t\t\tEnvironments: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Environments-123\"),\n\t\t\t\tpulumi.String(\"Environment-321\"),\n\t\t\t},\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Development Team\"),\n\t\t\t\tpulumi.String(\"System Administrators\"),\n\t\t\t},\n\t\t\tStorageAccountName:              pulumi.String(\"[storage_account_name]\"),\n\t\t\tTenantedDeploymentParticipation: pulumi.String(\"Untenanted\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.AzureCloudServiceDeploymentTarget;\nimport com.pulumi.octopusdeploy.AzureCloudServiceDeploymentTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AzureCloudServiceDeploymentTarget(\"example\", AzureCloudServiceDeploymentTargetArgs.builder()        \n            .accountId(\"Accounts-123\")\n            .cloudServiceName(\"[cloud_service_name]\")\n            .environments(            \n                \"Environments-123\",\n                \"Environment-321\")\n            .roles(            \n                \"Development Team\",\n                \"System Administrators\")\n            .storageAccountName(\"[storage_account_name]\")\n            .tenantedDeploymentParticipation(\"Untenanted\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:AzureCloudServiceDeploymentTarget\n    properties:\n      accountId: Accounts-123\n      cloudServiceName: '[cloud_service_name]'\n      environments:\n        - Environments-123\n        - Environment-321\n      roles:\n        - Development Team\n        - System Administrators\n      storageAccountName: '[storage_account_name]'\n      tenantedDeploymentParticipation: Untenanted\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/azureCloudServiceDeploymentTarget:AzureCloudServiceDeploymentTarget [options] octopusdeploy_azure_cloud_service_deployment_target.\u003cname\u003e \u003cmachine-id\u003e\n```\n\n",
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureCloudServiceDeploymentTargetEndpoint:AzureCloudServiceDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "slot": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                }
            },
            "required": [
                "accountId",
                "cloudServiceName",
                "endpoints",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "storageAccountName",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureCloudServiceDeploymentTargetEndpoint:AzureCloudServiceDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "slot": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "accountId",
                "cloudServiceName",
                "environments",
                "roles",
                "storageAccountName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AzureCloudServiceDeploymentTarget resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "cloudServiceName": {
                        "type": "string"
                    },
                    "defaultWorkerPoolId": {
                        "type": "string"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/AzureCloudServiceDeploymentTargetEndpoint:AzureCloudServiceDeploymentTargetEndpoint"
                        }
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "hasLatestCalamari": {
                        "type": "boolean"
                    },
                    "healthStatus": {
                        "type": "string",
                        "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "isInProcess": {
                        "type": "boolean"
                    },
                    "machinePolicyId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "operatingSystem": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shellName": {
                        "type": "string"
                    },
                    "shellVersion": {
                        "type": "string"
                    },
                    "slot": {
                        "type": "string"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                    },
                    "statusSummary": {
                        "type": "string",
                        "description": "A summary elaborating on the status of this resource.\n"
                    },
                    "storageAccountName": {
                        "type": "string"
                    },
                    "swapIfPossible": {
                        "type": "boolean"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "thumbprint": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    },
                    "useCurrentInstanceCount": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/azureOpenidConnect:AzureOpenidConnect": {
            "description": "This resource manages Azure OpenID Connect accounts in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.AzureOpenidConnect(\"example\", {\n    accountTestSubjectKeys: [\n        \"space\",\n        \"type\",\n    ],\n    applicationId: \"00000000-0000-0000-0000-000000000000\",\n    audience: \"api://AzureADTokenExchange\",\n    executionSubjectKeys: [\n        \"space\",\n        \"project\",\n    ],\n    healthSubjectKeys: [\n        \"space\",\n        \"target\",\n        \"type\",\n    ],\n    subscriptionId: \"00000000-0000-0000-0000-000000000000\",\n    tenantId: \"00000000-0000-0000-0000-000000000000\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.AzureOpenidConnect(\"example\",\n    account_test_subject_keys=[\n        \"space\",\n        \"type\",\n    ],\n    application_id=\"00000000-0000-0000-0000-000000000000\",\n    audience=\"api://AzureADTokenExchange\",\n    execution_subject_keys=[\n        \"space\",\n        \"project\",\n    ],\n    health_subject_keys=[\n        \"space\",\n        \"target\",\n        \"type\",\n    ],\n    subscription_id=\"00000000-0000-0000-0000-000000000000\",\n    tenant_id=\"00000000-0000-0000-0000-000000000000\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.AzureOpenidConnect(\"example\", new()\n    {\n        AccountTestSubjectKeys = new[]\n        {\n            \"space\",\n            \"type\",\n        },\n        ApplicationId = \"00000000-0000-0000-0000-000000000000\",\n        Audience = \"api://AzureADTokenExchange\",\n        ExecutionSubjectKeys = new[]\n        {\n            \"space\",\n            \"project\",\n        },\n        HealthSubjectKeys = new[]\n        {\n            \"space\",\n            \"target\",\n            \"type\",\n        },\n        SubscriptionId = \"00000000-0000-0000-0000-000000000000\",\n        TenantId = \"00000000-0000-0000-0000-000000000000\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewAzureOpenidConnect(ctx, \"example\", \u0026octopusdeploy.AzureOpenidConnectArgs{\n\t\t\tAccountTestSubjectKeys: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"space\"),\n\t\t\t\tpulumi.String(\"type\"),\n\t\t\t},\n\t\t\tApplicationId: pulumi.String(\"00000000-0000-0000-0000-000000000000\"),\n\t\t\tAudience:      pulumi.String(\"api://AzureADTokenExchange\"),\n\t\t\tExecutionSubjectKeys: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"space\"),\n\t\t\t\tpulumi.String(\"project\"),\n\t\t\t},\n\t\t\tHealthSubjectKeys: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"space\"),\n\t\t\t\tpulumi.String(\"target\"),\n\t\t\t\tpulumi.String(\"type\"),\n\t\t\t},\n\t\t\tSubscriptionId: pulumi.String(\"00000000-0000-0000-0000-000000000000\"),\n\t\t\tTenantId:       pulumi.String(\"00000000-0000-0000-0000-000000000000\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.AzureOpenidConnect;\nimport com.pulumi.octopusdeploy.AzureOpenidConnectArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AzureOpenidConnect(\"example\", AzureOpenidConnectArgs.builder()        \n            .accountTestSubjectKeys(            \n                \"space\",\n                \"type\")\n            .applicationId(\"00000000-0000-0000-0000-000000000000\")\n            .audience(\"api://AzureADTokenExchange\")\n            .executionSubjectKeys(            \n                \"space\",\n                \"project\")\n            .healthSubjectKeys(            \n                \"space\",\n                \"target\",\n                \"type\")\n            .subscriptionId(\"00000000-0000-0000-0000-000000000000\")\n            .tenantId(\"00000000-0000-0000-0000-000000000000\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:AzureOpenidConnect\n    properties:\n      accountTestSubjectKeys:\n        - space\n        - type\n      applicationId: 00000000-0000-0000-0000-000000000000\n      audience: api://AzureADTokenExchange\n      executionSubjectKeys:\n        - space\n        - project\n      healthSubjectKeys:\n        - space\n        - target\n        - type\n      subscriptionId: 00000000-0000-0000-0000-000000000000\n      tenantId: 00000000-0000-0000-0000-000000000000\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/azureOpenidConnect:AzureOpenidConnect [options] octopusdeploy_azure_openid_connect.\u003cname\u003e \u003caccount-id\u003e\n```\n\n",
            "properties": {
                "accountTestSubjectKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Keys to include in an account test. Valid options are: `space`, `account`, `type`\n"
                },
                "applicationId": {
                    "type": "string",
                    "description": "The application ID of this resource.\n"
                },
                "audience": {
                    "type": "string",
                    "description": "Federated credentials audience, this value is used to establish a connection between external workload identities and Microsoft Entra ID.\n"
                },
                "authenticationEndpoint": {
                    "type": "string",
                    "description": "The authentication endpoint URI for this resource.\n"
                },
                "azureEnvironment": {
                    "type": "string",
                    "description": "The Azure environment associated with this resource. Valid Azure environments are `AzureCloud`, `AzureChinaCloud`, `AzureGermanCloud`, or `AzureUSGovernment`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this Azure OpenID Connect account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "executionSubjectKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Keys to include in a deployment or runbook. Valid options are `space`, `environment`, `project`, `tenant`, `runbook`, `account`, `type`\n"
                },
                "healthSubjectKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Keys to include in a health check. Valid options are `space`, `account`, `target`, `type`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "resourceManagerEndpoint": {
                    "type": "string",
                    "description": "The resource manager endpoint URI for this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "subscriptionId": {
                    "type": "string",
                    "description": "The subscription ID of this resource.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The tenant ID of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                }
            },
            "required": [
                "applicationId",
                "azureEnvironment",
                "environments",
                "name",
                "spaceId",
                "subscriptionId",
                "tenantId",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants"
            ],
            "inputProperties": {
                "accountTestSubjectKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Keys to include in an account test. Valid options are: `space`, `account`, `type`\n"
                },
                "applicationId": {
                    "type": "string",
                    "description": "The application ID of this resource.\n"
                },
                "audience": {
                    "type": "string",
                    "description": "Federated credentials audience, this value is used to establish a connection between external workload identities and Microsoft Entra ID.\n"
                },
                "authenticationEndpoint": {
                    "type": "string",
                    "description": "The authentication endpoint URI for this resource.\n"
                },
                "azureEnvironment": {
                    "type": "string",
                    "description": "The Azure environment associated with this resource. Valid Azure environments are `AzureCloud`, `AzureChinaCloud`, `AzureGermanCloud`, or `AzureUSGovernment`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this Azure OpenID Connect account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "executionSubjectKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Keys to include in a deployment or runbook. Valid options are `space`, `environment`, `project`, `tenant`, `runbook`, `account`, `type`\n"
                },
                "healthSubjectKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Keys to include in a health check. Valid options are `space`, `account`, `target`, `type`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "resourceManagerEndpoint": {
                    "type": "string",
                    "description": "The resource manager endpoint URI for this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                },
                "subscriptionId": {
                    "type": "string",
                    "description": "The subscription ID of this resource.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The tenant ID of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                }
            },
            "requiredInputs": [
                "applicationId",
                "subscriptionId",
                "tenantId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AzureOpenidConnect resources.\n",
                "properties": {
                    "accountTestSubjectKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Keys to include in an account test. Valid options are: `space`, `account`, `type`\n"
                    },
                    "applicationId": {
                        "type": "string",
                        "description": "The application ID of this resource.\n"
                    },
                    "audience": {
                        "type": "string",
                        "description": "Federated credentials audience, this value is used to establish a connection between external workload identities and Microsoft Entra ID.\n"
                    },
                    "authenticationEndpoint": {
                        "type": "string",
                        "description": "The authentication endpoint URI for this resource.\n"
                    },
                    "azureEnvironment": {
                        "type": "string",
                        "description": "The Azure environment associated with this resource. Valid Azure environments are `AzureCloud`, `AzureChinaCloud`, `AzureGermanCloud`, or `AzureUSGovernment`.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this Azure OpenID Connect account.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "executionSubjectKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Keys to include in a deployment or runbook. Valid options are `space`, `environment`, `project`, `tenant`, `runbook`, `account`, `type`\n"
                    },
                    "healthSubjectKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Keys to include in a health check. Valid options are `space`, `account`, `target`, `type`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "resourceManagerEndpoint": {
                        "type": "string",
                        "description": "The resource manager endpoint URI for this resource.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "subscriptionId": {
                        "type": "string",
                        "description": "The subscription ID of this resource.\n"
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "The tenant ID of this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/azureServiceFabricClusterDeploymentTarget:AzureServiceFabricClusterDeploymentTarget": {
            "description": "This resource manages Azure service fabric cluster deployment targets in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.AzureServiceFabricClusterDeploymentTarget(\"example\", {\n    connectionEndpoint: \"[connection-endpoint]\",\n    environments: [\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    roles: [\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    tenantedDeploymentParticipation: \"Untenanted\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.AzureServiceFabricClusterDeploymentTarget(\"example\",\n    connection_endpoint=\"[connection-endpoint]\",\n    environments=[\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    roles=[\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    tenanted_deployment_participation=\"Untenanted\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.AzureServiceFabricClusterDeploymentTarget(\"example\", new()\n    {\n        ConnectionEndpoint = \"[connection-endpoint]\",\n        Environments = new[]\n        {\n            \"Environments-123\",\n            \"Environment-321\",\n        },\n        Roles = new[]\n        {\n            \"Development Team\",\n            \"System Administrators\",\n        },\n        TenantedDeploymentParticipation = \"Untenanted\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewAzureServiceFabricClusterDeploymentTarget(ctx, \"example\", \u0026octopusdeploy.AzureServiceFabricClusterDeploymentTargetArgs{\n\t\t\tConnectionEndpoint: pulumi.String(\"[connection-endpoint]\"),\n\t\t\tEnvironments: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Environments-123\"),\n\t\t\t\tpulumi.String(\"Environment-321\"),\n\t\t\t},\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Development Team\"),\n\t\t\t\tpulumi.String(\"System Administrators\"),\n\t\t\t},\n\t\t\tTenantedDeploymentParticipation: pulumi.String(\"Untenanted\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.AzureServiceFabricClusterDeploymentTarget;\nimport com.pulumi.octopusdeploy.AzureServiceFabricClusterDeploymentTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AzureServiceFabricClusterDeploymentTarget(\"example\", AzureServiceFabricClusterDeploymentTargetArgs.builder()        \n            .connectionEndpoint(\"[connection-endpoint]\")\n            .environments(            \n                \"Environments-123\",\n                \"Environment-321\")\n            .roles(            \n                \"Development Team\",\n                \"System Administrators\")\n            .tenantedDeploymentParticipation(\"Untenanted\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:AzureServiceFabricClusterDeploymentTarget\n    properties:\n      connectionEndpoint: '[connection-endpoint]'\n      environments:\n        - Environments-123\n        - Environment-321\n      roles:\n        - Development Team\n        - System Administrators\n      tenantedDeploymentParticipation: Untenanted\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/azureServiceFabricClusterDeploymentTarget:AzureServiceFabricClusterDeploymentTarget [options] octopusdeploy_azure_service_fabric_cluster_deployment_target.\u003cname\u003e \u003cmachine-id\u003e\n```\n\n",
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialPassword": {
                    "type": "string",
                    "secret": true
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureServiceFabricClusterDeploymentTargetEndpoint:AzureServiceFabricClusterDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "required": [
                "aadClientCredentialSecret",
                "aadCredentialType",
                "aadUserCredentialUsername",
                "certificateStoreLocation",
                "certificateStoreName",
                "clientCertificateVariable",
                "connectionEndpoint",
                "endpoints",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "securityMode",
                "serverCertificateThumbprint",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri"
            ],
            "inputProperties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialPassword": {
                    "type": "string",
                    "secret": true
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureServiceFabricClusterDeploymentTargetEndpoint:AzureServiceFabricClusterDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "connectionEndpoint",
                "environments",
                "roles"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AzureServiceFabricClusterDeploymentTarget resources.\n",
                "properties": {
                    "aadClientCredentialSecret": {
                        "type": "string"
                    },
                    "aadCredentialType": {
                        "type": "string"
                    },
                    "aadUserCredentialPassword": {
                        "type": "string",
                        "secret": true
                    },
                    "aadUserCredentialUsername": {
                        "type": "string"
                    },
                    "certificateStoreLocation": {
                        "type": "string"
                    },
                    "certificateStoreName": {
                        "type": "string"
                    },
                    "clientCertificateVariable": {
                        "type": "string"
                    },
                    "connectionEndpoint": {
                        "type": "string"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/AzureServiceFabricClusterDeploymentTargetEndpoint:AzureServiceFabricClusterDeploymentTargetEndpoint"
                        }
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "hasLatestCalamari": {
                        "type": "boolean"
                    },
                    "healthStatus": {
                        "type": "string",
                        "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "isInProcess": {
                        "type": "boolean"
                    },
                    "machinePolicyId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "operatingSystem": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "securityMode": {
                        "type": "string"
                    },
                    "serverCertificateThumbprint": {
                        "type": "string"
                    },
                    "shellName": {
                        "type": "string"
                    },
                    "shellVersion": {
                        "type": "string"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                    },
                    "statusSummary": {
                        "type": "string",
                        "description": "A summary elaborating on the status of this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "thumbprint": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/azureServicePrincipal:AzureServicePrincipal": {
            "description": "This resource manages Azure service principal accounts in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.AzureServicePrincipal(\"example\", {\n    applicationId: \"00000000-0000-0000-0000-000000000000\",\n    password: \"###########\",\n    subscriptionId: \"00000000-0000-0000-0000-000000000000\",\n    tenantId: \"00000000-0000-0000-0000-000000000000\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.AzureServicePrincipal(\"example\",\n    application_id=\"00000000-0000-0000-0000-000000000000\",\n    password=\"###########\",\n    subscription_id=\"00000000-0000-0000-0000-000000000000\",\n    tenant_id=\"00000000-0000-0000-0000-000000000000\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.AzureServicePrincipal(\"example\", new()\n    {\n        ApplicationId = \"00000000-0000-0000-0000-000000000000\",\n        Password = \"###########\",\n        SubscriptionId = \"00000000-0000-0000-0000-000000000000\",\n        TenantId = \"00000000-0000-0000-0000-000000000000\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewAzureServicePrincipal(ctx, \"example\", \u0026octopusdeploy.AzureServicePrincipalArgs{\n\t\t\tApplicationId:  pulumi.String(\"00000000-0000-0000-0000-000000000000\"),\n\t\t\tPassword:       pulumi.String(\"###########\"),\n\t\t\tSubscriptionId: pulumi.String(\"00000000-0000-0000-0000-000000000000\"),\n\t\t\tTenantId:       pulumi.String(\"00000000-0000-0000-0000-000000000000\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.AzureServicePrincipal;\nimport com.pulumi.octopusdeploy.AzureServicePrincipalArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AzureServicePrincipal(\"example\", AzureServicePrincipalArgs.builder()        \n            .applicationId(\"00000000-0000-0000-0000-000000000000\")\n            .password(\"###########\")\n            .subscriptionId(\"00000000-0000-0000-0000-000000000000\")\n            .tenantId(\"00000000-0000-0000-0000-000000000000\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:AzureServicePrincipal\n    properties:\n      applicationId: 00000000-0000-0000-0000-000000000000\n      password: '###########'\n      # required; get from secure environment/store\n      subscriptionId: 00000000-0000-0000-0000-000000000000\n      tenantId: 00000000-0000-0000-0000-000000000000\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/azureServicePrincipal:AzureServicePrincipal [options] octopusdeploy_azure_service_principal.\u003cname\u003e \u003caccount-id\u003e\n```\n\n",
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "The application ID of this resource.\n"
                },
                "authenticationEndpoint": {
                    "type": "string",
                    "description": "The authentication endpoint URI for this resource.\n"
                },
                "azureEnvironment": {
                    "type": "string",
                    "description": "The Azure environment associated with this resource. Valid Azure environments are `AzureCloud`, `AzureChinaCloud`, `AzureGermanCloud`, or `AzureUSGovernment`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this Azure service principal account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "resourceManagerEndpoint": {
                    "type": "string",
                    "description": "The resource manager endpoint URI for this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "subscriptionId": {
                    "type": "string",
                    "description": "The subscription ID of this resource.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The tenant ID of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                }
            },
            "required": [
                "applicationId",
                "azureEnvironment",
                "environments",
                "name",
                "password",
                "spaceId",
                "subscriptionId",
                "tenantId",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants"
            ],
            "inputProperties": {
                "applicationId": {
                    "type": "string",
                    "description": "The application ID of this resource.\n"
                },
                "authenticationEndpoint": {
                    "type": "string",
                    "description": "The authentication endpoint URI for this resource.\n"
                },
                "azureEnvironment": {
                    "type": "string",
                    "description": "The Azure environment associated with this resource. Valid Azure environments are `AzureCloud`, `AzureChinaCloud`, `AzureGermanCloud`, or `AzureUSGovernment`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this Azure service principal account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "resourceManagerEndpoint": {
                    "type": "string",
                    "description": "The resource manager endpoint URI for this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                },
                "subscriptionId": {
                    "type": "string",
                    "description": "The subscription ID of this resource.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The tenant ID of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                }
            },
            "requiredInputs": [
                "applicationId",
                "password",
                "subscriptionId",
                "tenantId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AzureServicePrincipal resources.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "The application ID of this resource.\n"
                    },
                    "authenticationEndpoint": {
                        "type": "string",
                        "description": "The authentication endpoint URI for this resource.\n"
                    },
                    "azureEnvironment": {
                        "type": "string",
                        "description": "The Azure environment associated with this resource. Valid Azure environments are `AzureCloud`, `AzureChinaCloud`, `AzureGermanCloud`, or `AzureUSGovernment`.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this Azure service principal account.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password associated with this resource.\n",
                        "secret": true
                    },
                    "resourceManagerEndpoint": {
                        "type": "string",
                        "description": "The resource manager endpoint URI for this resource.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "subscriptionId": {
                        "type": "string",
                        "description": "The subscription ID of this resource.\n"
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "The tenant ID of this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/azureSubscriptionAccount:AzureSubscriptionAccount": {
            "description": "This resource manages Azure subscription accounts in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.AzureSubscriptionAccount(\"example\", {subscriptionId: \"00000000-0000-0000-0000-000000000000\"});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.AzureSubscriptionAccount(\"example\", subscription_id=\"00000000-0000-0000-0000-000000000000\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.AzureSubscriptionAccount(\"example\", new()\n    {\n        SubscriptionId = \"00000000-0000-0000-0000-000000000000\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewAzureSubscriptionAccount(ctx, \"example\", \u0026octopusdeploy.AzureSubscriptionAccountArgs{\n\t\t\tSubscriptionId: pulumi.String(\"00000000-0000-0000-0000-000000000000\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.AzureSubscriptionAccount;\nimport com.pulumi.octopusdeploy.AzureSubscriptionAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AzureSubscriptionAccount(\"example\", AzureSubscriptionAccountArgs.builder()        \n            .subscriptionId(\"00000000-0000-0000-0000-000000000000\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:AzureSubscriptionAccount\n    properties:\n      subscriptionId: 00000000-0000-0000-0000-000000000000\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/azureSubscriptionAccount:AzureSubscriptionAccount [options] octopusdeploy_azure_subscription_account.\u003cname\u003e \u003caccount-id\u003e\n```\n\n",
            "properties": {
                "azureEnvironment": {
                    "type": "string",
                    "description": "The Azure environment associated with this resource. Valid Azure environments are `AzureCloud`, `AzureChinaCloud`, `AzureGermanCloud`, or `AzureUSGovernment`.\n"
                },
                "certificate": {
                    "type": "string",
                    "secret": true
                },
                "certificateThumbprint": {
                    "type": "string",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of this Azure subscription account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "managementEndpoint": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "storageEndpointSuffix": {
                    "type": "string",
                    "description": "The storage endpoint suffix associated with this Azure subscription account.\n"
                },
                "subscriptionId": {
                    "type": "string",
                    "description": "The subscription ID of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                }
            },
            "required": [
                "azureEnvironment",
                "certificate",
                "certificateThumbprint",
                "environments",
                "name",
                "spaceId",
                "subscriptionId",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants"
            ],
            "inputProperties": {
                "azureEnvironment": {
                    "type": "string",
                    "description": "The Azure environment associated with this resource. Valid Azure environments are `AzureCloud`, `AzureChinaCloud`, `AzureGermanCloud`, or `AzureUSGovernment`.\n"
                },
                "certificate": {
                    "type": "string",
                    "secret": true
                },
                "certificateThumbprint": {
                    "type": "string",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of this Azure subscription account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "managementEndpoint": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                },
                "storageEndpointSuffix": {
                    "type": "string",
                    "description": "The storage endpoint suffix associated with this Azure subscription account.\n"
                },
                "subscriptionId": {
                    "type": "string",
                    "description": "The subscription ID of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                }
            },
            "requiredInputs": [
                "subscriptionId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AzureSubscriptionAccount resources.\n",
                "properties": {
                    "azureEnvironment": {
                        "type": "string",
                        "description": "The Azure environment associated with this resource. Valid Azure environments are `AzureCloud`, `AzureChinaCloud`, `AzureGermanCloud`, or `AzureUSGovernment`.\n"
                    },
                    "certificate": {
                        "type": "string",
                        "secret": true
                    },
                    "certificateThumbprint": {
                        "type": "string",
                        "secret": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this Azure subscription account.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "managementEndpoint": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "storageEndpointSuffix": {
                        "type": "string",
                        "description": "The storage endpoint suffix associated with this Azure subscription account.\n"
                    },
                    "subscriptionId": {
                        "type": "string",
                        "description": "The subscription ID of this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/azureWebAppDeploymentTarget:AzureWebAppDeploymentTarget": {
            "description": "This resource manages Azure web app deployment targets in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.AzureWebAppDeploymentTarget(\"example\", {\n    accountId: \"Accounts-123\",\n    environments: [\"Environments-123\"],\n    resourceGroupName: \"resource-group-name\",\n    roles: [\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    tenantedDeploymentParticipation: \"Untenanted\",\n    webAppName: \"web-app-name\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.AzureWebAppDeploymentTarget(\"example\",\n    account_id=\"Accounts-123\",\n    environments=[\"Environments-123\"],\n    resource_group_name=\"resource-group-name\",\n    roles=[\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    tenanted_deployment_participation=\"Untenanted\",\n    web_app_name=\"web-app-name\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.AzureWebAppDeploymentTarget(\"example\", new()\n    {\n        AccountId = \"Accounts-123\",\n        Environments = new[]\n        {\n            \"Environments-123\",\n        },\n        ResourceGroupName = \"resource-group-name\",\n        Roles = new[]\n        {\n            \"Development Team\",\n            \"System Administrators\",\n        },\n        TenantedDeploymentParticipation = \"Untenanted\",\n        WebAppName = \"web-app-name\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewAzureWebAppDeploymentTarget(ctx, \"example\", \u0026octopusdeploy.AzureWebAppDeploymentTargetArgs{\n\t\t\tAccountId: pulumi.String(\"Accounts-123\"),\n\t\t\tEnvironments: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Environments-123\"),\n\t\t\t},\n\t\t\tResourceGroupName: pulumi.String(\"resource-group-name\"),\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Development Team\"),\n\t\t\t\tpulumi.String(\"System Administrators\"),\n\t\t\t},\n\t\t\tTenantedDeploymentParticipation: pulumi.String(\"Untenanted\"),\n\t\t\tWebAppName:                      pulumi.String(\"web-app-name\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.AzureWebAppDeploymentTarget;\nimport com.pulumi.octopusdeploy.AzureWebAppDeploymentTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AzureWebAppDeploymentTarget(\"example\", AzureWebAppDeploymentTargetArgs.builder()        \n            .accountId(\"Accounts-123\")\n            .environments(\"Environments-123\")\n            .resourceGroupName(\"resource-group-name\")\n            .roles(            \n                \"Development Team\",\n                \"System Administrators\")\n            .tenantedDeploymentParticipation(\"Untenanted\")\n            .webAppName(\"web-app-name\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:AzureWebAppDeploymentTarget\n    properties:\n      accountId: Accounts-123\n      environments:\n        - Environments-123\n      resourceGroupName: resource-group-name\n      roles:\n        - Development Team\n        - System Administrators\n      tenantedDeploymentParticipation: Untenanted\n      webAppName: web-app-name\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/azureWebAppDeploymentTarget:AzureWebAppDeploymentTarget [options] octopusdeploy_azure_web_app_deployment_target.\u003cname\u003e \u003cmachine-id\u003e\n```\n\n",
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureWebAppDeploymentTargetEndpoint:AzureWebAppDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                }
            },
            "required": [
                "accountId",
                "endpoints",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "resourceGroupName",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri",
                "webAppName"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureWebAppDeploymentTargetEndpoint:AzureWebAppDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "accountId",
                "environments",
                "resourceGroupName",
                "roles",
                "webAppName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AzureWebAppDeploymentTarget resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/AzureWebAppDeploymentTargetEndpoint:AzureWebAppDeploymentTargetEndpoint"
                        }
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "hasLatestCalamari": {
                        "type": "boolean"
                    },
                    "healthStatus": {
                        "type": "string",
                        "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "isInProcess": {
                        "type": "boolean"
                    },
                    "machinePolicyId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "operatingSystem": {
                        "type": "string"
                    },
                    "resourceGroupName": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shellName": {
                        "type": "string"
                    },
                    "shellVersion": {
                        "type": "string"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                    },
                    "statusSummary": {
                        "type": "string",
                        "description": "A summary elaborating on the status of this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "thumbprint": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    },
                    "webAppName": {
                        "type": "string"
                    },
                    "webAppSlotName": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/certificate:Certificate": {
            "description": "This resource manages certificates in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.Certificate(\"example\", {\n    certificateData: \"a-base-64-encoded-string-representing-the-certificate-data\",\n    password: \"###########\",\n});\n// required; get from secure environment/store\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.Certificate(\"example\",\n    certificate_data=\"a-base-64-encoded-string-representing-the-certificate-data\",\n    password=\"###########\")\n# required; get from secure environment/store\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.Certificate(\"example\", new()\n    {\n        CertificateData = \"a-base-64-encoded-string-representing-the-certificate-data\",\n        Password = \"###########\",\n    });\n\n    // required; get from secure environment/store\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewCertificate(ctx, \"example\", \u0026octopusdeploy.CertificateArgs{\n\t\t\tCertificateData: pulumi.String(\"a-base-64-encoded-string-representing-the-certificate-data\"),\n\t\t\tPassword:        pulumi.String(\"###########\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.Certificate;\nimport com.pulumi.octopusdeploy.CertificateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Certificate(\"example\", CertificateArgs.builder()        \n            .certificateData(\"a-base-64-encoded-string-representing-the-certificate-data\")\n            .password(\"###########\")\n            .build());\n\n        // required; get from secure environment/store\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:Certificate\n    properties:\n      certificateData: a-base-64-encoded-string-representing-the-certificate-data\n      password: '###########'\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/certificate:Certificate [options] octopusdeploy_certificate.\u003cname\u003e \u003ccertificate-id\u003e\n```\n\n",
            "properties": {
                "archived": {
                    "type": "string"
                },
                "certificateData": {
                    "type": "string",
                    "description": "The encoded data of the certificate.\n",
                    "secret": true
                },
                "certificateDataFormat": {
                    "type": "string",
                    "description": "Specifies the archive file format used for storing cryptography objects in the certificate. Valid formats are `Der`, `Pem`, `Pkcs12`, or `Unknown`.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasPrivateKey": {
                    "type": "boolean",
                    "description": "Indicates if the certificate has a private key.\n"
                },
                "isExpired": {
                    "type": "boolean",
                    "description": "Indicates if the certificate has expired.\n"
                },
                "issuerCommonName": {
                    "type": "string"
                },
                "issuerDistinguishedName": {
                    "type": "string"
                },
                "issuerOrganization": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "notAfter": {
                    "type": "string"
                },
                "notBefore": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "replacedBy": {
                    "type": "string"
                },
                "selfSigned": {
                    "type": "boolean"
                },
                "serialNumber": {
                    "type": "string"
                },
                "signatureAlgorithmName": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string"
                },
                "subjectAlternativeNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subjectCommonName": {
                    "type": "string"
                },
                "subjectDistinguishedName": {
                    "type": "string"
                },
                "subjectOrganization": {
                    "type": "string"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "archived",
                "certificateData",
                "certificateDataFormat",
                "environments",
                "hasPrivateKey",
                "isExpired",
                "issuerCommonName",
                "issuerDistinguishedName",
                "issuerOrganization",
                "name",
                "notAfter",
                "notBefore",
                "notes",
                "replacedBy",
                "selfSigned",
                "serialNumber",
                "signatureAlgorithmName",
                "spaceId",
                "subjectAlternativeNames",
                "subjectCommonName",
                "subjectDistinguishedName",
                "subjectOrganization",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "version"
            ],
            "inputProperties": {
                "archived": {
                    "type": "string"
                },
                "certificateData": {
                    "type": "string",
                    "description": "The encoded data of the certificate.\n",
                    "secret": true
                },
                "certificateDataFormat": {
                    "type": "string",
                    "description": "Specifies the archive file format used for storing cryptography objects in the certificate. Valid formats are `Der`, `Pem`, `Pkcs12`, or `Unknown`.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasPrivateKey": {
                    "type": "boolean",
                    "description": "Indicates if the certificate has a private key.\n"
                },
                "isExpired": {
                    "type": "boolean",
                    "description": "Indicates if the certificate has expired.\n"
                },
                "issuerCommonName": {
                    "type": "string"
                },
                "issuerDistinguishedName": {
                    "type": "string"
                },
                "issuerOrganization": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "notAfter": {
                    "type": "string"
                },
                "notBefore": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "replacedBy": {
                    "type": "string"
                },
                "selfSigned": {
                    "type": "boolean"
                },
                "serialNumber": {
                    "type": "string"
                },
                "signatureAlgorithmName": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string"
                },
                "subjectAlternativeNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subjectCommonName": {
                    "type": "string"
                },
                "subjectDistinguishedName": {
                    "type": "string"
                },
                "subjectOrganization": {
                    "type": "string"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "certificateData"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Certificate resources.\n",
                "properties": {
                    "archived": {
                        "type": "string"
                    },
                    "certificateData": {
                        "type": "string",
                        "description": "The encoded data of the certificate.\n",
                        "secret": true
                    },
                    "certificateDataFormat": {
                        "type": "string",
                        "description": "Specifies the archive file format used for storing cryptography objects in the certificate. Valid formats are `Der`, `Pem`, `Pkcs12`, or `Unknown`.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "hasPrivateKey": {
                        "type": "boolean",
                        "description": "Indicates if the certificate has a private key.\n"
                    },
                    "isExpired": {
                        "type": "boolean",
                        "description": "Indicates if the certificate has expired.\n"
                    },
                    "issuerCommonName": {
                        "type": "string"
                    },
                    "issuerDistinguishedName": {
                        "type": "string"
                    },
                    "issuerOrganization": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "notAfter": {
                        "type": "string"
                    },
                    "notBefore": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password associated with this resource.\n",
                        "secret": true
                    },
                    "replacedBy": {
                        "type": "string"
                    },
                    "selfSigned": {
                        "type": "boolean"
                    },
                    "serialNumber": {
                        "type": "string"
                    },
                    "signatureAlgorithmName": {
                        "type": "string"
                    },
                    "spaceId": {
                        "type": "string"
                    },
                    "subjectAlternativeNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "subjectCommonName": {
                        "type": "string"
                    },
                    "subjectDistinguishedName": {
                        "type": "string"
                    },
                    "subjectOrganization": {
                        "type": "string"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "thumbprint": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/channel:Channel": {
            "description": "This resource manages channels in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.Channel(\"example\", {projectId: \"Projects-123\"});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.Channel(\"example\", project_id=\"Projects-123\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.Channel(\"example\", new()\n    {\n        ProjectId = \"Projects-123\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewChannel(ctx, \"example\", \u0026octopusdeploy.ChannelArgs{\n\t\t\tProjectId: pulumi.String(\"Projects-123\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.Channel;\nimport com.pulumi.octopusdeploy.ChannelArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Channel(\"example\", ChannelArgs.builder()        \n            .projectId(\"Projects-123\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:Channel\n    properties:\n      projectId: Projects-123\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/channel:Channel [options] octopusdeploy_channel.\u003cname\u003e \u003cchannel-id\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this channel.\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Indicates if this is the default channel for the associated project.\n"
                },
                "lifecycleId": {
                    "type": "string",
                    "description": "The lifecycle ID associated with this channel.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project ID associated with this channel.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ChannelRule:ChannelRule"
                    },
                    "description": "A list of rules associated with this channel.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                }
            },
            "required": [
                "name",
                "projectId",
                "spaceId",
                "tenantTags"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this channel.\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Indicates if this is the default channel for the associated project.\n"
                },
                "lifecycleId": {
                    "type": "string",
                    "description": "The lifecycle ID associated with this channel.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project ID associated with this channel.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ChannelRule:ChannelRule"
                    },
                    "description": "A list of rules associated with this channel.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                }
            },
            "requiredInputs": [
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Channel resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this channel.\n"
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Indicates if this is the default channel for the associated project.\n"
                    },
                    "lifecycleId": {
                        "type": "string",
                        "description": "The lifecycle ID associated with this channel.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project ID associated with this channel.\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/ChannelRule:ChannelRule"
                        },
                        "description": "A list of rules associated with this channel.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/cloudRegionDeploymentTarget:CloudRegionDeploymentTarget": {
            "description": "This resource manages cloud region deployment targets in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.CloudRegionDeploymentTarget(\"example\", {\n    defaultWorkerPoolId: \"WorkerPools-123\",\n    environments: [\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    roles: [\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.CloudRegionDeploymentTarget(\"example\",\n    default_worker_pool_id=\"WorkerPools-123\",\n    environments=[\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    roles=[\n        \"Development Team\",\n        \"System Administrators\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.CloudRegionDeploymentTarget(\"example\", new()\n    {\n        DefaultWorkerPoolId = \"WorkerPools-123\",\n        Environments = new[]\n        {\n            \"Environments-123\",\n            \"Environment-321\",\n        },\n        Roles = new[]\n        {\n            \"Development Team\",\n            \"System Administrators\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewCloudRegionDeploymentTarget(ctx, \"example\", \u0026octopusdeploy.CloudRegionDeploymentTargetArgs{\n\t\t\tDefaultWorkerPoolId: pulumi.String(\"WorkerPools-123\"),\n\t\t\tEnvironments: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Environments-123\"),\n\t\t\t\tpulumi.String(\"Environment-321\"),\n\t\t\t},\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Development Team\"),\n\t\t\t\tpulumi.String(\"System Administrators\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.CloudRegionDeploymentTarget;\nimport com.pulumi.octopusdeploy.CloudRegionDeploymentTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new CloudRegionDeploymentTarget(\"example\", CloudRegionDeploymentTargetArgs.builder()        \n            .defaultWorkerPoolId(\"WorkerPools-123\")\n            .environments(            \n                \"Environments-123\",\n                \"Environment-321\")\n            .roles(            \n                \"Development Team\",\n                \"System Administrators\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:CloudRegionDeploymentTarget\n    properties:\n      defaultWorkerPoolId: WorkerPools-123\n      environments:\n        - Environments-123\n        - Environment-321\n      roles:\n        - Development Team\n        - System Administrators\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/cloudRegionDeploymentTarget:CloudRegionDeploymentTarget [options] octopusdeploy_cloud_region_deployment_target.\u003cname\u003e \u003cmachine-id\u003e\n```\n\n",
            "properties": {
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/CloudRegionDeploymentTargetEndpoint:CloudRegionDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "required": [
                "endpoints",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri"
            ],
            "inputProperties": {
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/CloudRegionDeploymentTargetEndpoint:CloudRegionDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "environments",
                "roles"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudRegionDeploymentTarget resources.\n",
                "properties": {
                    "defaultWorkerPoolId": {
                        "type": "string"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/CloudRegionDeploymentTargetEndpoint:CloudRegionDeploymentTargetEndpoint"
                        }
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "hasLatestCalamari": {
                        "type": "boolean"
                    },
                    "healthStatus": {
                        "type": "string",
                        "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "isInProcess": {
                        "type": "boolean"
                    },
                    "machinePolicyId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "operatingSystem": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shellName": {
                        "type": "string"
                    },
                    "shellVersion": {
                        "type": "string"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                    },
                    "statusSummary": {
                        "type": "string",
                        "description": "A summary elaborating on the status of this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "thumbprint": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/deploymentProcess:DeploymentProcess": {
            "description": "This resource manages deployment processes in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\n// basic deployment process with 2 run a script steps\nconst example = new octopusdeploy.DeploymentProcess(\"example\", {\n    projectId: \"Projects-123\",\n    steps: [\n        {\n            condition: \"Success\",\n            name: \"Hello world (using PowerShell)\",\n            packageRequirement: \"LetOctopusDecide\",\n            runScriptActions: [{\n                canBeUsedForProjectVersioning: false,\n                condition: \"Success\",\n                isDisabled: false,\n                isRequired: true,\n                name: \"Hello world (using PowerShell)\",\n                runOnServer: true,\n                scriptBody: `  Write-Host 'Hello world, using PowerShell'\n  #TODO: Experiment with steps of your own :)\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n`,\n            }],\n            startTrigger: \"StartAfterPrevious\",\n        },\n        {\n            condition: \"Success\",\n            name: \"Hello world (using Bash)\",\n            packageRequirement: \"LetOctopusDecide\",\n            runScriptActions: [{\n                canBeUsedForProjectVersioning: false,\n                condition: \"Success\",\n                isDisabled: false,\n                isRequired: true,\n                name: \"Hello world (using Bash)\",\n                runOnServer: true,\n                scriptBody: `  echo 'Hello world, using Bash'\n  #TODO: Experiment with steps of your own :)\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n`,\n            }],\n            startTrigger: \"StartWithPrevious\",\n        },\n    ],\n});\n// basic deployment process with 2 run a script steps as child steps\nconst childStepExample = new octopusdeploy.DeploymentProcess(\"childStepExample\", {\n    projectId: \"Projects-123\",\n    steps: [{\n        condition: \"Success\",\n        name: \"Hello world (using PowerShell)\",\n        packageRequirement: \"LetOctopusDecide\",\n        runScriptActions: [\n            {\n                canBeUsedForProjectVersioning: false,\n                condition: \"Success\",\n                isDisabled: false,\n                isRequired: true,\n                name: \"Hello world (using PowerShell)\",\n                scriptBody: `  Write-Host 'Hello world, using PowerShell'\n  #TODO: Experiment with steps of your own :)\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n`,\n                sortOrder: 1,\n            },\n            {\n                canBeUsedForProjectVersioning: false,\n                condition: \"Success\",\n                isDisabled: false,\n                isRequired: true,\n                name: \"Hello world (using Bash)\",\n                scriptBody: `  echo 'Hello world, using Bash'\n  #TODO: Experiment with steps of your own :)\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n`,\n                sortOrder: 2,\n            },\n        ],\n        startTrigger: \"StartAfterPrevious\",\n        targetRoles: [\"hello-world\"],\n    }],\n});\n// rolling deployment process with a step with 2 run a script steps as child steps deploying to 2 targets in parallel\nconst childStepRollingDeploymentExample = new octopusdeploy.DeploymentProcess(\"childStepRollingDeploymentExample\", {\n    projectId: \"Projects-123\",\n    steps: [{\n        condition: \"Success\",\n        name: \"Hello world (using PowerShell)\",\n        packageRequirement: \"LetOctopusDecide\",\n        runScriptActions: [\n            {\n                canBeUsedForProjectVersioning: false,\n                condition: \"Success\",\n                isDisabled: false,\n                isRequired: true,\n                name: \"Hello world (using PowerShell)\",\n                scriptBody: `  Write-Host 'Hello world, using PowerShell'\n  #TODO: Experiment with steps of your own :)\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n`,\n                sortOrder: 1,\n            },\n            {\n                canBeUsedForProjectVersioning: false,\n                condition: \"Success\",\n                isDisabled: false,\n                isRequired: true,\n                name: \"Hello world (using Bash)\",\n                scriptBody: `  echo 'Hello world, using Bash'\n  #TODO: Experiment with steps of your own :)\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n`,\n                sortOrder: 2,\n            },\n        ],\n        startTrigger: \"StartAfterPrevious\",\n        targetRoles: [\"hello-world\"],\n        windowSize: \"2\",\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\n# basic deployment process with 2 run a script steps\nexample = octopusdeploy.DeploymentProcess(\"example\",\n    project_id=\"Projects-123\",\n    steps=[\n        octopusdeploy.DeploymentProcessStepArgs(\n            condition=\"Success\",\n            name=\"Hello world (using PowerShell)\",\n            package_requirement=\"LetOctopusDecide\",\n            run_script_actions=[octopusdeploy.DeploymentProcessStepRunScriptActionArgs(\n                can_be_used_for_project_versioning=False,\n                condition=\"Success\",\n                is_disabled=False,\n                is_required=True,\n                name=\"Hello world (using PowerShell)\",\n                run_on_server=True,\n                script_body=\"\"\"  Write-Host 'Hello world, using PowerShell'\n  #TODO: Experiment with steps of your own :)\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n\"\"\",\n            )],\n            start_trigger=\"StartAfterPrevious\",\n        ),\n        octopusdeploy.DeploymentProcessStepArgs(\n            condition=\"Success\",\n            name=\"Hello world (using Bash)\",\n            package_requirement=\"LetOctopusDecide\",\n            run_script_actions=[octopusdeploy.DeploymentProcessStepRunScriptActionArgs(\n                can_be_used_for_project_versioning=False,\n                condition=\"Success\",\n                is_disabled=False,\n                is_required=True,\n                name=\"Hello world (using Bash)\",\n                run_on_server=True,\n                script_body=\"\"\"  echo 'Hello world, using Bash'\n  #TODO: Experiment with steps of your own :)\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n\"\"\",\n            )],\n            start_trigger=\"StartWithPrevious\",\n        ),\n    ])\n# basic deployment process with 2 run a script steps as child steps\nchild_step_example = octopusdeploy.DeploymentProcess(\"childStepExample\",\n    project_id=\"Projects-123\",\n    steps=[octopusdeploy.DeploymentProcessStepArgs(\n        condition=\"Success\",\n        name=\"Hello world (using PowerShell)\",\n        package_requirement=\"LetOctopusDecide\",\n        run_script_actions=[\n            octopusdeploy.DeploymentProcessStepRunScriptActionArgs(\n                can_be_used_for_project_versioning=False,\n                condition=\"Success\",\n                is_disabled=False,\n                is_required=True,\n                name=\"Hello world (using PowerShell)\",\n                script_body=\"\"\"  Write-Host 'Hello world, using PowerShell'\n  #TODO: Experiment with steps of your own :)\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n\"\"\",\n                sort_order=1,\n            ),\n            octopusdeploy.DeploymentProcessStepRunScriptActionArgs(\n                can_be_used_for_project_versioning=False,\n                condition=\"Success\",\n                is_disabled=False,\n                is_required=True,\n                name=\"Hello world (using Bash)\",\n                script_body=\"\"\"  echo 'Hello world, using Bash'\n  #TODO: Experiment with steps of your own :)\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n\"\"\",\n                sort_order=2,\n            ),\n        ],\n        start_trigger=\"StartAfterPrevious\",\n        target_roles=[\"hello-world\"],\n    )])\n# rolling deployment process with a step with 2 run a script steps as child steps deploying to 2 targets in parallel\nchild_step_rolling_deployment_example = octopusdeploy.DeploymentProcess(\"childStepRollingDeploymentExample\",\n    project_id=\"Projects-123\",\n    steps=[octopusdeploy.DeploymentProcessStepArgs(\n        condition=\"Success\",\n        name=\"Hello world (using PowerShell)\",\n        package_requirement=\"LetOctopusDecide\",\n        run_script_actions=[\n            octopusdeploy.DeploymentProcessStepRunScriptActionArgs(\n                can_be_used_for_project_versioning=False,\n                condition=\"Success\",\n                is_disabled=False,\n                is_required=True,\n                name=\"Hello world (using PowerShell)\",\n                script_body=\"\"\"  Write-Host 'Hello world, using PowerShell'\n  #TODO: Experiment with steps of your own :)\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n\"\"\",\n                sort_order=1,\n            ),\n            octopusdeploy.DeploymentProcessStepRunScriptActionArgs(\n                can_be_used_for_project_versioning=False,\n                condition=\"Success\",\n                is_disabled=False,\n                is_required=True,\n                name=\"Hello world (using Bash)\",\n                script_body=\"\"\"  echo 'Hello world, using Bash'\n  #TODO: Experiment with steps of your own :)\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n\"\"\",\n                sort_order=2,\n            ),\n        ],\n        start_trigger=\"StartAfterPrevious\",\n        target_roles=[\"hello-world\"],\n        window_size=\"2\",\n    )])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // basic deployment process with 2 run a script steps\n    var example = new Octopusdeploy.DeploymentProcess(\"example\", new()\n    {\n        ProjectId = \"Projects-123\",\n        Steps = new[]\n        {\n            new Octopusdeploy.Inputs.DeploymentProcessStepArgs\n            {\n                Condition = \"Success\",\n                Name = \"Hello world (using PowerShell)\",\n                PackageRequirement = \"LetOctopusDecide\",\n                RunScriptActions = new[]\n                {\n                    new Octopusdeploy.Inputs.DeploymentProcessStepRunScriptActionArgs\n                    {\n                        CanBeUsedForProjectVersioning = false,\n                        Condition = \"Success\",\n                        IsDisabled = false,\n                        IsRequired = true,\n                        Name = \"Hello world (using PowerShell)\",\n                        RunOnServer = true,\n                        ScriptBody = @\"  Write-Host 'Hello world, using PowerShell'\n  #TODO: Experiment with steps of your own :)\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n\",\n                    },\n                },\n                StartTrigger = \"StartAfterPrevious\",\n            },\n            new Octopusdeploy.Inputs.DeploymentProcessStepArgs\n            {\n                Condition = \"Success\",\n                Name = \"Hello world (using Bash)\",\n                PackageRequirement = \"LetOctopusDecide\",\n                RunScriptActions = new[]\n                {\n                    new Octopusdeploy.Inputs.DeploymentProcessStepRunScriptActionArgs\n                    {\n                        CanBeUsedForProjectVersioning = false,\n                        Condition = \"Success\",\n                        IsDisabled = false,\n                        IsRequired = true,\n                        Name = \"Hello world (using Bash)\",\n                        RunOnServer = true,\n                        ScriptBody = @\"  echo 'Hello world, using Bash'\n  #TODO: Experiment with steps of your own :)\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n\",\n                    },\n                },\n                StartTrigger = \"StartWithPrevious\",\n            },\n        },\n    });\n\n    // basic deployment process with 2 run a script steps as child steps\n    var childStepExample = new Octopusdeploy.DeploymentProcess(\"childStepExample\", new()\n    {\n        ProjectId = \"Projects-123\",\n        Steps = new[]\n        {\n            new Octopusdeploy.Inputs.DeploymentProcessStepArgs\n            {\n                Condition = \"Success\",\n                Name = \"Hello world (using PowerShell)\",\n                PackageRequirement = \"LetOctopusDecide\",\n                RunScriptActions = new[]\n                {\n                    new Octopusdeploy.Inputs.DeploymentProcessStepRunScriptActionArgs\n                    {\n                        CanBeUsedForProjectVersioning = false,\n                        Condition = \"Success\",\n                        IsDisabled = false,\n                        IsRequired = true,\n                        Name = \"Hello world (using PowerShell)\",\n                        ScriptBody = @\"  Write-Host 'Hello world, using PowerShell'\n  #TODO: Experiment with steps of your own :)\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n\",\n                        SortOrder = 1,\n                    },\n                    new Octopusdeploy.Inputs.DeploymentProcessStepRunScriptActionArgs\n                    {\n                        CanBeUsedForProjectVersioning = false,\n                        Condition = \"Success\",\n                        IsDisabled = false,\n                        IsRequired = true,\n                        Name = \"Hello world (using Bash)\",\n                        ScriptBody = @\"  echo 'Hello world, using Bash'\n  #TODO: Experiment with steps of your own :)\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n\",\n                        SortOrder = 2,\n                    },\n                },\n                StartTrigger = \"StartAfterPrevious\",\n                TargetRoles = new[]\n                {\n                    \"hello-world\",\n                },\n            },\n        },\n    });\n\n    // rolling deployment process with a step with 2 run a script steps as child steps deploying to 2 targets in parallel\n    var childStepRollingDeploymentExample = new Octopusdeploy.DeploymentProcess(\"childStepRollingDeploymentExample\", new()\n    {\n        ProjectId = \"Projects-123\",\n        Steps = new[]\n        {\n            new Octopusdeploy.Inputs.DeploymentProcessStepArgs\n            {\n                Condition = \"Success\",\n                Name = \"Hello world (using PowerShell)\",\n                PackageRequirement = \"LetOctopusDecide\",\n                RunScriptActions = new[]\n                {\n                    new Octopusdeploy.Inputs.DeploymentProcessStepRunScriptActionArgs\n                    {\n                        CanBeUsedForProjectVersioning = false,\n                        Condition = \"Success\",\n                        IsDisabled = false,\n                        IsRequired = true,\n                        Name = \"Hello world (using PowerShell)\",\n                        ScriptBody = @\"  Write-Host 'Hello world, using PowerShell'\n  #TODO: Experiment with steps of your own :)\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n\",\n                        SortOrder = 1,\n                    },\n                    new Octopusdeploy.Inputs.DeploymentProcessStepRunScriptActionArgs\n                    {\n                        CanBeUsedForProjectVersioning = false,\n                        Condition = \"Success\",\n                        IsDisabled = false,\n                        IsRequired = true,\n                        Name = \"Hello world (using Bash)\",\n                        ScriptBody = @\"  echo 'Hello world, using Bash'\n  #TODO: Experiment with steps of your own :)\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n\",\n                        SortOrder = 2,\n                    },\n                },\n                StartTrigger = \"StartAfterPrevious\",\n                TargetRoles = new[]\n                {\n                    \"hello-world\",\n                },\n                WindowSize = \"2\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// basic deployment process with 2 run a script steps\n\t\t_, err := octopusdeploy.NewDeploymentProcess(ctx, \"example\", \u0026octopusdeploy.DeploymentProcessArgs{\n\t\t\tProjectId: pulumi.String(\"Projects-123\"),\n\t\t\tSteps: octopusdeploy.DeploymentProcessStepArray{\n\t\t\t\t\u0026octopusdeploy.DeploymentProcessStepArgs{\n\t\t\t\t\tCondition:          pulumi.String(\"Success\"),\n\t\t\t\t\tName:               pulumi.String(\"Hello world (using PowerShell)\"),\n\t\t\t\t\tPackageRequirement: pulumi.String(\"LetOctopusDecide\"),\n\t\t\t\t\tRunScriptActions: octopusdeploy.DeploymentProcessStepRunScriptActionArray{\n\t\t\t\t\t\t\u0026octopusdeploy.DeploymentProcessStepRunScriptActionArgs{\n\t\t\t\t\t\t\tCanBeUsedForProjectVersioning: pulumi.Bool(false),\n\t\t\t\t\t\t\tCondition:                     pulumi.String(\"Success\"),\n\t\t\t\t\t\t\tIsDisabled:                    pulumi.Bool(false),\n\t\t\t\t\t\t\tIsRequired:                    pulumi.Bool(true),\n\t\t\t\t\t\t\tName:                          pulumi.String(\"Hello world (using PowerShell)\"),\n\t\t\t\t\t\t\tRunOnServer:                   pulumi.Bool(true),\n\t\t\t\t\t\t\tScriptBody:                    pulumi.String(\"  Write-Host 'Hello world, using PowerShell'\\n  #TODO: Experiment with steps of your own :)\\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\\n\\n\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tStartTrigger: pulumi.String(\"StartAfterPrevious\"),\n\t\t\t\t},\n\t\t\t\t\u0026octopusdeploy.DeploymentProcessStepArgs{\n\t\t\t\t\tCondition:          pulumi.String(\"Success\"),\n\t\t\t\t\tName:               pulumi.String(\"Hello world (using Bash)\"),\n\t\t\t\t\tPackageRequirement: pulumi.String(\"LetOctopusDecide\"),\n\t\t\t\t\tRunScriptActions: octopusdeploy.DeploymentProcessStepRunScriptActionArray{\n\t\t\t\t\t\t\u0026octopusdeploy.DeploymentProcessStepRunScriptActionArgs{\n\t\t\t\t\t\t\tCanBeUsedForProjectVersioning: pulumi.Bool(false),\n\t\t\t\t\t\t\tCondition:                     pulumi.String(\"Success\"),\n\t\t\t\t\t\t\tIsDisabled:                    pulumi.Bool(false),\n\t\t\t\t\t\t\tIsRequired:                    pulumi.Bool(true),\n\t\t\t\t\t\t\tName:                          pulumi.String(\"Hello world (using Bash)\"),\n\t\t\t\t\t\t\tRunOnServer:                   pulumi.Bool(true),\n\t\t\t\t\t\t\tScriptBody:                    pulumi.String(\"  echo 'Hello world, using Bash'\\n  #TODO: Experiment with steps of your own :)\\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\\n\\n\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tStartTrigger: pulumi.String(\"StartWithPrevious\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// basic deployment process with 2 run a script steps as child steps\n\t\t_, err = octopusdeploy.NewDeploymentProcess(ctx, \"childStepExample\", \u0026octopusdeploy.DeploymentProcessArgs{\n\t\t\tProjectId: pulumi.String(\"Projects-123\"),\n\t\t\tSteps: octopusdeploy.DeploymentProcessStepArray{\n\t\t\t\t\u0026octopusdeploy.DeploymentProcessStepArgs{\n\t\t\t\t\tCondition:          pulumi.String(\"Success\"),\n\t\t\t\t\tName:               pulumi.String(\"Hello world (using PowerShell)\"),\n\t\t\t\t\tPackageRequirement: pulumi.String(\"LetOctopusDecide\"),\n\t\t\t\t\tRunScriptActions: octopusdeploy.DeploymentProcessStepRunScriptActionArray{\n\t\t\t\t\t\t\u0026octopusdeploy.DeploymentProcessStepRunScriptActionArgs{\n\t\t\t\t\t\t\tCanBeUsedForProjectVersioning: pulumi.Bool(false),\n\t\t\t\t\t\t\tCondition:                     pulumi.String(\"Success\"),\n\t\t\t\t\t\t\tIsDisabled:                    pulumi.Bool(false),\n\t\t\t\t\t\t\tIsRequired:                    pulumi.Bool(true),\n\t\t\t\t\t\t\tName:                          pulumi.String(\"Hello world (using PowerShell)\"),\n\t\t\t\t\t\t\tScriptBody:                    pulumi.String(\"  Write-Host 'Hello world, using PowerShell'\\n  #TODO: Experiment with steps of your own :)\\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\\n\\n\"),\n\t\t\t\t\t\t\tSortOrder:                     pulumi.Int(1),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026octopusdeploy.DeploymentProcessStepRunScriptActionArgs{\n\t\t\t\t\t\t\tCanBeUsedForProjectVersioning: pulumi.Bool(false),\n\t\t\t\t\t\t\tCondition:                     pulumi.String(\"Success\"),\n\t\t\t\t\t\t\tIsDisabled:                    pulumi.Bool(false),\n\t\t\t\t\t\t\tIsRequired:                    pulumi.Bool(true),\n\t\t\t\t\t\t\tName:                          pulumi.String(\"Hello world (using Bash)\"),\n\t\t\t\t\t\t\tScriptBody:                    pulumi.String(\"  echo 'Hello world, using Bash'\\n  #TODO: Experiment with steps of your own :)\\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\\n\\n\"),\n\t\t\t\t\t\t\tSortOrder:                     pulumi.Int(2),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tStartTrigger: pulumi.String(\"StartAfterPrevious\"),\n\t\t\t\t\tTargetRoles: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"hello-world\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// rolling deployment process with a step with 2 run a script steps as child steps deploying to 2 targets in parallel\n\t\t_, err = octopusdeploy.NewDeploymentProcess(ctx, \"childStepRollingDeploymentExample\", \u0026octopusdeploy.DeploymentProcessArgs{\n\t\t\tProjectId: pulumi.String(\"Projects-123\"),\n\t\t\tSteps: octopusdeploy.DeploymentProcessStepArray{\n\t\t\t\t\u0026octopusdeploy.DeploymentProcessStepArgs{\n\t\t\t\t\tCondition:          pulumi.String(\"Success\"),\n\t\t\t\t\tName:               pulumi.String(\"Hello world (using PowerShell)\"),\n\t\t\t\t\tPackageRequirement: pulumi.String(\"LetOctopusDecide\"),\n\t\t\t\t\tRunScriptActions: octopusdeploy.DeploymentProcessStepRunScriptActionArray{\n\t\t\t\t\t\t\u0026octopusdeploy.DeploymentProcessStepRunScriptActionArgs{\n\t\t\t\t\t\t\tCanBeUsedForProjectVersioning: pulumi.Bool(false),\n\t\t\t\t\t\t\tCondition:                     pulumi.String(\"Success\"),\n\t\t\t\t\t\t\tIsDisabled:                    pulumi.Bool(false),\n\t\t\t\t\t\t\tIsRequired:                    pulumi.Bool(true),\n\t\t\t\t\t\t\tName:                          pulumi.String(\"Hello world (using PowerShell)\"),\n\t\t\t\t\t\t\tScriptBody:                    pulumi.String(\"  Write-Host 'Hello world, using PowerShell'\\n  #TODO: Experiment with steps of your own :)\\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\\n\\n\"),\n\t\t\t\t\t\t\tSortOrder:                     pulumi.Int(1),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026octopusdeploy.DeploymentProcessStepRunScriptActionArgs{\n\t\t\t\t\t\t\tCanBeUsedForProjectVersioning: pulumi.Bool(false),\n\t\t\t\t\t\t\tCondition:                     pulumi.String(\"Success\"),\n\t\t\t\t\t\t\tIsDisabled:                    pulumi.Bool(false),\n\t\t\t\t\t\t\tIsRequired:                    pulumi.Bool(true),\n\t\t\t\t\t\t\tName:                          pulumi.String(\"Hello world (using Bash)\"),\n\t\t\t\t\t\t\tScriptBody:                    pulumi.String(\"  echo 'Hello world, using Bash'\\n  #TODO: Experiment with steps of your own :)\\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\\n\\n\"),\n\t\t\t\t\t\t\tSortOrder:                     pulumi.Int(2),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tStartTrigger: pulumi.String(\"StartAfterPrevious\"),\n\t\t\t\t\tTargetRoles: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"hello-world\"),\n\t\t\t\t\t},\n\t\t\t\t\tWindowSize: pulumi.String(\"2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.DeploymentProcess;\nimport com.pulumi.octopusdeploy.DeploymentProcessArgs;\nimport com.pulumi.octopusdeploy.inputs.DeploymentProcessStepArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // basic deployment process with 2 run a script steps\n        var example = new DeploymentProcess(\"example\", DeploymentProcessArgs.builder()        \n            .projectId(\"Projects-123\")\n            .steps(            \n                DeploymentProcessStepArgs.builder()\n                    .condition(\"Success\")\n                    .name(\"Hello world (using PowerShell)\")\n                    .packageRequirement(\"LetOctopusDecide\")\n                    .runScriptActions(DeploymentProcessStepRunScriptActionArgs.builder()\n                        .canBeUsedForProjectVersioning(false)\n                        .condition(\"Success\")\n                        .isDisabled(false)\n                        .isRequired(true)\n                        .name(\"Hello world (using PowerShell)\")\n                        .runOnServer(true)\n                        .scriptBody(\"\"\"\n  Write-Host 'Hello world, using PowerShell'\n  #TODO: Experiment with steps of your own :)\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n                        \"\"\")\n                        .build())\n                    .startTrigger(\"StartAfterPrevious\")\n                    .build(),\n                DeploymentProcessStepArgs.builder()\n                    .condition(\"Success\")\n                    .name(\"Hello world (using Bash)\")\n                    .packageRequirement(\"LetOctopusDecide\")\n                    .runScriptActions(DeploymentProcessStepRunScriptActionArgs.builder()\n                        .canBeUsedForProjectVersioning(false)\n                        .condition(\"Success\")\n                        .isDisabled(false)\n                        .isRequired(true)\n                        .name(\"Hello world (using Bash)\")\n                        .runOnServer(true)\n                        .scriptBody(\"\"\"\n  echo 'Hello world, using Bash'\n  #TODO: Experiment with steps of your own :)\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n                        \"\"\")\n                        .build())\n                    .startTrigger(\"StartWithPrevious\")\n                    .build())\n            .build());\n\n        // basic deployment process with 2 run a script steps as child steps\n        var childStepExample = new DeploymentProcess(\"childStepExample\", DeploymentProcessArgs.builder()        \n            .projectId(\"Projects-123\")\n            .steps(DeploymentProcessStepArgs.builder()\n                .condition(\"Success\")\n                .name(\"Hello world (using PowerShell)\")\n                .packageRequirement(\"LetOctopusDecide\")\n                .runScriptActions(                \n                    DeploymentProcessStepRunScriptActionArgs.builder()\n                        .canBeUsedForProjectVersioning(false)\n                        .condition(\"Success\")\n                        .isDisabled(false)\n                        .isRequired(true)\n                        .name(\"Hello world (using PowerShell)\")\n                        .scriptBody(\"\"\"\n  Write-Host 'Hello world, using PowerShell'\n  #TODO: Experiment with steps of your own :)\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n                        \"\"\")\n                        .sortOrder(1)\n                        .build(),\n                    DeploymentProcessStepRunScriptActionArgs.builder()\n                        .canBeUsedForProjectVersioning(false)\n                        .condition(\"Success\")\n                        .isDisabled(false)\n                        .isRequired(true)\n                        .name(\"Hello world (using Bash)\")\n                        .scriptBody(\"\"\"\n  echo 'Hello world, using Bash'\n  #TODO: Experiment with steps of your own :)\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n                        \"\"\")\n                        .sortOrder(2)\n                        .build())\n                .startTrigger(\"StartAfterPrevious\")\n                .targetRoles(\"hello-world\")\n                .build())\n            .build());\n\n        // rolling deployment process with a step with 2 run a script steps as child steps deploying to 2 targets in parallel\n        var childStepRollingDeploymentExample = new DeploymentProcess(\"childStepRollingDeploymentExample\", DeploymentProcessArgs.builder()        \n            .projectId(\"Projects-123\")\n            .steps(DeploymentProcessStepArgs.builder()\n                .condition(\"Success\")\n                .name(\"Hello world (using PowerShell)\")\n                .packageRequirement(\"LetOctopusDecide\")\n                .runScriptActions(                \n                    DeploymentProcessStepRunScriptActionArgs.builder()\n                        .canBeUsedForProjectVersioning(false)\n                        .condition(\"Success\")\n                        .isDisabled(false)\n                        .isRequired(true)\n                        .name(\"Hello world (using PowerShell)\")\n                        .scriptBody(\"\"\"\n  Write-Host 'Hello world, using PowerShell'\n  #TODO: Experiment with steps of your own :)\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n                        \"\"\")\n                        .sortOrder(1)\n                        .build(),\n                    DeploymentProcessStepRunScriptActionArgs.builder()\n                        .canBeUsedForProjectVersioning(false)\n                        .condition(\"Success\")\n                        .isDisabled(false)\n                        .isRequired(true)\n                        .name(\"Hello world (using Bash)\")\n                        .scriptBody(\"\"\"\n  echo 'Hello world, using Bash'\n  #TODO: Experiment with steps of your own :)\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n                        \"\"\")\n                        .sortOrder(2)\n                        .build())\n                .startTrigger(\"StartAfterPrevious\")\n                .targetRoles(\"hello-world\")\n                .windowSize(2)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # basic deployment process with 2 run a script steps\n  example:\n    type: octopusdeploy:DeploymentProcess\n    properties:\n      projectId: Projects-123\n      steps:\n        - condition: Success\n          name: Hello world (using PowerShell)\n          packageRequirement: LetOctopusDecide\n          runScriptActions:\n            - canBeUsedForProjectVersioning: false\n              condition: Success\n              isDisabled: false\n              isRequired: true\n              name: Hello world (using PowerShell)\n              runOnServer: true\n              scriptBody: |2+\n                  Write-Host 'Hello world, using PowerShell'\n                  #TODO: Experiment with steps of your own :)\n                  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n          startTrigger: StartAfterPrevious\n        - condition: Success\n          name: Hello world (using Bash)\n          packageRequirement: LetOctopusDecide\n          runScriptActions:\n            - canBeUsedForProjectVersioning: false\n              condition: Success\n              isDisabled: false\n              isRequired: true\n              name: Hello world (using Bash)\n              runOnServer: true\n              scriptBody: |2+\n                  echo 'Hello world, using Bash'\n                  #TODO: Experiment with steps of your own :)\n                  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n          startTrigger: StartWithPrevious\n  # basic deployment process with 2 run a script steps as child steps\n  childStepExample:\n    type: octopusdeploy:DeploymentProcess\n    properties:\n      projectId: Projects-123\n      steps:\n        - condition: Success\n          name: Hello world (using PowerShell)\n          packageRequirement: LetOctopusDecide\n          runScriptActions:\n            - canBeUsedForProjectVersioning: false\n              condition: Success\n              isDisabled: false\n              isRequired: true\n              name: Hello world (using PowerShell)\n              scriptBody: |2+\n                  Write-Host 'Hello world, using PowerShell'\n                  #TODO: Experiment with steps of your own :)\n                  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n              sortOrder: 1\n            - canBeUsedForProjectVersioning: false\n              condition: Success\n              isDisabled: false\n              isRequired: true\n              name: Hello world (using Bash)\n              scriptBody: |2+\n                  echo 'Hello world, using Bash'\n                  #TODO: Experiment with steps of your own :)\n                  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n              sortOrder: 2\n          startTrigger: StartAfterPrevious\n          targetRoles:\n            - hello-world\n  # rolling deployment process with a step with 2 run a script steps as child steps deploying to 2 targets in parallel\n  childStepRollingDeploymentExample:\n    type: octopusdeploy:DeploymentProcess\n    properties:\n      projectId: Projects-123\n      steps:\n        - condition: Success\n          name: Hello world (using PowerShell)\n          packageRequirement: LetOctopusDecide\n          runScriptActions:\n            - canBeUsedForProjectVersioning: false\n              condition: Success\n              isDisabled: false\n              isRequired: true\n              name: Hello world (using PowerShell)\n              scriptBody: |2+\n                  Write-Host 'Hello world, using PowerShell'\n                  #TODO: Experiment with steps of your own :)\n                  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n              sortOrder: 1\n            - canBeUsedForProjectVersioning: false\n              condition: Success\n              isDisabled: false\n              isRequired: true\n              name: Hello world (using Bash)\n              scriptBody: |2+\n                  echo 'Hello world, using Bash'\n                  #TODO: Experiment with steps of your own :)\n                  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n              sortOrder: 2\n          startTrigger: StartAfterPrevious\n          targetRoles:\n            - hello-world\n          windowSize: 2\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/deploymentProcess:DeploymentProcess [options] octopusdeploy_deployment_process.\u003cname\u003e \u003cdeployment-process-id\u003e\n```\n\n",
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The branch name associated with this deployment process (i.e. `main`). This value is optional and only applies to associated projects that are stored in version control.\n"
                },
                "lastSnapshotId": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project ID associated with this deployment process.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStep:DeploymentProcessStep"
                    }
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this deployment process.\n"
                }
            },
            "required": [
                "branch",
                "projectId",
                "spaceId",
                "version"
            ],
            "inputProperties": {
                "branch": {
                    "type": "string",
                    "description": "The branch name associated with this deployment process (i.e. `main`). This value is optional and only applies to associated projects that are stored in version control.\n"
                },
                "lastSnapshotId": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project ID associated with this deployment process.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStep:DeploymentProcessStep"
                    }
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this deployment process.\n"
                }
            },
            "requiredInputs": [
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DeploymentProcess resources.\n",
                "properties": {
                    "branch": {
                        "type": "string",
                        "description": "The branch name associated with this deployment process (i.e. `main`). This value is optional and only applies to associated projects that are stored in version control.\n"
                    },
                    "lastSnapshotId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project ID associated with this deployment process.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "steps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/DeploymentProcessStep:DeploymentProcessStep"
                        }
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version number of this deployment process.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/dynamicWorkerPool:DynamicWorkerPool": {
            "description": "This resource manages dynamic worker pools in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.DynamicWorkerPool(\"example\", {\n    description: \"Description for the dynamic worker pool.\",\n    isDefault: true,\n    sortOrder: 5,\n    workerType: \"UbuntuDefault\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.DynamicWorkerPool(\"example\",\n    description=\"Description for the dynamic worker pool.\",\n    is_default=True,\n    sort_order=5,\n    worker_type=\"UbuntuDefault\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.DynamicWorkerPool(\"example\", new()\n    {\n        Description = \"Description for the dynamic worker pool.\",\n        IsDefault = true,\n        SortOrder = 5,\n        WorkerType = \"UbuntuDefault\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewDynamicWorkerPool(ctx, \"example\", \u0026octopusdeploy.DynamicWorkerPoolArgs{\n\t\t\tDescription: pulumi.String(\"Description for the dynamic worker pool.\"),\n\t\t\tIsDefault:   pulumi.Bool(true),\n\t\t\tSortOrder:   pulumi.Int(5),\n\t\t\tWorkerType:  pulumi.String(\"UbuntuDefault\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.DynamicWorkerPool;\nimport com.pulumi.octopusdeploy.DynamicWorkerPoolArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DynamicWorkerPool(\"example\", DynamicWorkerPoolArgs.builder()        \n            .description(\"Description for the dynamic worker pool.\")\n            .isDefault(true)\n            .sortOrder(5)\n            .workerType(\"UbuntuDefault\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:DynamicWorkerPool\n    properties:\n      description: Description for the dynamic worker pool.\n      isDefault: true\n      sortOrder: 5\n      workerType: UbuntuDefault\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "canAddWorkers": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this dynamic worker pool.\n"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "sortOrder": {
                    "type": "integer",
                    "description": "The order number to sort a dynamic worker pool.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "workerType": {
                    "type": "string"
                }
            },
            "required": [
                "canAddWorkers",
                "name",
                "sortOrder",
                "spaceId",
                "workerType"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this dynamic worker pool.\n"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "sortOrder": {
                    "type": "integer",
                    "description": "The order number to sort a dynamic worker pool.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                },
                "workerType": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "workerType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DynamicWorkerPool resources.\n",
                "properties": {
                    "canAddWorkers": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this dynamic worker pool.\n"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "sortOrder": {
                        "type": "integer",
                        "description": "The order number to sort a dynamic worker pool.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "workerType": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/externalFeedCreateReleaseTrigger:ExternalFeedCreateReleaseTrigger": {
            "description": "This resource manages External feed triggers (release creation type) in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.ExternalFeedCreateReleaseTrigger;\nimport com.pulumi.octopusdeploy.ExternalFeedCreateReleaseTriggerArgs;\nimport com.pulumi.octopusdeploy.inputs.ExternalFeedCreateReleaseTriggerPackageArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myTrigger = new ExternalFeedCreateReleaseTrigger(\"myTrigger\", ExternalFeedCreateReleaseTriggerArgs.builder()        \n            .channelId(\"Channels-21\")\n            .packages(            \n                ExternalFeedCreateReleaseTriggerPackageArgs.builder()\n                    .deploymentAction(\"My Helm step\")\n                    .packageReference(\"nginx\")\n                    .build(),\n                ExternalFeedCreateReleaseTriggerPackageArgs.builder()\n                    .deploymentAction(\"My container step\")\n                    .packageReference(\"busybox\")\n                    .build())\n            .projectId(\"Projects-2\")\n            .spaceId(\"Spaces-1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myTrigger:\n    type: octopusdeploy:ExternalFeedCreateReleaseTrigger\n    properties:\n      channelId: Channels-21\n      packages:\n        - deploymentAction: My Helm step\n          packageReference: nginx\n        - deploymentAction: My container step\n          packageReference: busybox\n      projectId: Projects-2\n      spaceId: Spaces-1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/externalFeedCreateReleaseTrigger:ExternalFeedCreateReleaseTrigger [options] octopusdeploy_external_feed_create_release_trigger.\u003cname\u003e \u003ctrigger-id\u003e\n```\n\n",
            "properties": {
                "channelId": {
                    "type": "string",
                    "description": "The ID of the channel in which the release will be created if the action type is CreateRelease.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Disables the trigger from being run when set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ExternalFeedCreateReleaseTriggerPackage:ExternalFeedCreateReleaseTriggerPackage"
                    },
                    "description": "List of referenced packages that will cause the trigger to fire. New versions of any of the packages you select will trigger release creation.\n"
                },
                "primaryPackages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ExternalFeedCreateReleaseTriggerPrimaryPackage:ExternalFeedCreateReleaseTriggerPrimaryPackage"
                    },
                    "description": "List of deployment actions for which the primary packages will cause the trigger to fire. New versions of any of the packages you select will trigger release creation.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project to attach the trigger.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with the project to attach the trigger.\n"
                }
            },
            "required": [
                "channelId",
                "name",
                "projectId"
            ],
            "inputProperties": {
                "channelId": {
                    "type": "string",
                    "description": "The ID of the channel in which the release will be created if the action type is CreateRelease.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Disables the trigger from being run when set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ExternalFeedCreateReleaseTriggerPackage:ExternalFeedCreateReleaseTriggerPackage"
                    },
                    "description": "List of referenced packages that will cause the trigger to fire. New versions of any of the packages you select will trigger release creation.\n"
                },
                "primaryPackages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ExternalFeedCreateReleaseTriggerPrimaryPackage:ExternalFeedCreateReleaseTriggerPrimaryPackage"
                    },
                    "description": "List of deployment actions for which the primary packages will cause the trigger to fire. New versions of any of the packages you select will trigger release creation.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project to attach the trigger.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with the project to attach the trigger.\n"
                }
            },
            "requiredInputs": [
                "channelId",
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ExternalFeedCreateReleaseTrigger resources.\n",
                "properties": {
                    "channelId": {
                        "type": "string",
                        "description": "The ID of the channel in which the release will be created if the action type is CreateRelease.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "Disables the trigger from being run when set.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "packages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/ExternalFeedCreateReleaseTriggerPackage:ExternalFeedCreateReleaseTriggerPackage"
                        },
                        "description": "List of referenced packages that will cause the trigger to fire. New versions of any of the packages you select will trigger release creation.\n"
                    },
                    "primaryPackages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/ExternalFeedCreateReleaseTriggerPrimaryPackage:ExternalFeedCreateReleaseTriggerPrimaryPackage"
                        },
                        "description": "List of deployment actions for which the primary packages will cause the trigger to fire. New versions of any of the packages you select will trigger release creation.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The ID of the project to attach the trigger.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with the project to attach the trigger.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/gcpAccount:GcpAccount": {
            "description": "This resource manages GCP accounts in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.GcpAccount(\"example\", {jsonKey: \"json-key\"});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.GcpAccount(\"example\", json_key=\"json-key\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.GcpAccount(\"example\", new()\n    {\n        JsonKey = \"json-key\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewGcpAccount(ctx, \"example\", \u0026octopusdeploy.GcpAccountArgs{\n\t\t\tJsonKey: pulumi.String(\"json-key\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.GcpAccount;\nimport com.pulumi.octopusdeploy.GcpAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new GcpAccount(\"example\", GcpAccountArgs.builder()        \n            .jsonKey(\"json-key\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:GcpAccount\n    properties:\n      jsonKey: json-key\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/gcpAccount:GcpAccount [options] octopusdeploy_gcp_account.\u003cname\u003e \u003caccount-id\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A user-friendly description of this GCP account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "jsonKey": {
                    "type": "string",
                    "description": "The JSON key associated with this GCP account.\n",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of this GCP account.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                }
            },
            "required": [
                "environments",
                "jsonKey",
                "name",
                "spaceId",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A user-friendly description of this GCP account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "jsonKey": {
                    "type": "string",
                    "description": "The JSON key associated with this GCP account.\n",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of this GCP account.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                }
            },
            "requiredInputs": [
                "jsonKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GcpAccount resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A user-friendly description of this GCP account.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "jsonKey": {
                        "type": "string",
                        "description": "The JSON key associated with this GCP account.\n",
                        "secret": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this GCP account.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/kubernetesAgentDeploymentTarget:KubernetesAgentDeploymentTarget": {
            "description": "This resource manages Kubernetes agent deployment targets in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst minimal = new octopusdeploy.KubernetesAgentDeploymentTarget(\"minimal\", {\n    environments: [\"environments-1\"],\n    roles: [\n        \"role-1\",\n        \"role-2\",\n    ],\n    thumbprint: \"96203ED84246201C26A2F4360D7CBC36AC1D232D\",\n    uri: \"poll://kcxzcv2fpsxkn6tk9u6d/\",\n});\nconst optionals = new octopusdeploy.KubernetesAgentDeploymentTarget(\"optionals\", {\n    defaultNamespace: \"kubernetes-namespace\",\n    environments: [\"environments-1\"],\n    isDisabled: true,\n    machinePolicyId: \"machinepolicies-1\",\n    roles: [\n        \"role-1\",\n        \"role-2\",\n    ],\n    thumbprint: \"96203ED84246201C26A2F4360D7CBC36AC1D232D\",\n    upgradeLocked: true,\n    uri: \"poll://kcxzcv2fpsxkn6tk9u6d/\",\n});\nconst tenantedAgent = new octopusdeploy.KubernetesAgentDeploymentTarget(\"tenantedAgent\", {\n    environments: [\"environments-1\"],\n    roles: [\n        \"role-1\",\n        \"role-2\",\n    ],\n    tenantTags: [\"TagSets-1/Tags-1\"],\n    tenantedDeploymentParticipation: \"Tenanted\",\n    tenants: [\"tenants-1\"],\n    thumbprint: \"96203ED84246201C26A2F4360D7CBC36AC1D232D\",\n    uri: \"poll://kcxzcv2fpsxkn6tk9u6d/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nminimal = octopusdeploy.KubernetesAgentDeploymentTarget(\"minimal\",\n    environments=[\"environments-1\"],\n    roles=[\n        \"role-1\",\n        \"role-2\",\n    ],\n    thumbprint=\"96203ED84246201C26A2F4360D7CBC36AC1D232D\",\n    uri=\"poll://kcxzcv2fpsxkn6tk9u6d/\")\noptionals = octopusdeploy.KubernetesAgentDeploymentTarget(\"optionals\",\n    default_namespace=\"kubernetes-namespace\",\n    environments=[\"environments-1\"],\n    is_disabled=True,\n    machine_policy_id=\"machinepolicies-1\",\n    roles=[\n        \"role-1\",\n        \"role-2\",\n    ],\n    thumbprint=\"96203ED84246201C26A2F4360D7CBC36AC1D232D\",\n    upgrade_locked=True,\n    uri=\"poll://kcxzcv2fpsxkn6tk9u6d/\")\ntenanted_agent = octopusdeploy.KubernetesAgentDeploymentTarget(\"tenantedAgent\",\n    environments=[\"environments-1\"],\n    roles=[\n        \"role-1\",\n        \"role-2\",\n    ],\n    tenant_tags=[\"TagSets-1/Tags-1\"],\n    tenanted_deployment_participation=\"Tenanted\",\n    tenants=[\"tenants-1\"],\n    thumbprint=\"96203ED84246201C26A2F4360D7CBC36AC1D232D\",\n    uri=\"poll://kcxzcv2fpsxkn6tk9u6d/\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var minimal = new Octopusdeploy.KubernetesAgentDeploymentTarget(\"minimal\", new()\n    {\n        Environments = new[]\n        {\n            \"environments-1\",\n        },\n        Roles = new[]\n        {\n            \"role-1\",\n            \"role-2\",\n        },\n        Thumbprint = \"96203ED84246201C26A2F4360D7CBC36AC1D232D\",\n        Uri = \"poll://kcxzcv2fpsxkn6tk9u6d/\",\n    });\n\n    var optionals = new Octopusdeploy.KubernetesAgentDeploymentTarget(\"optionals\", new()\n    {\n        DefaultNamespace = \"kubernetes-namespace\",\n        Environments = new[]\n        {\n            \"environments-1\",\n        },\n        IsDisabled = true,\n        MachinePolicyId = \"machinepolicies-1\",\n        Roles = new[]\n        {\n            \"role-1\",\n            \"role-2\",\n        },\n        Thumbprint = \"96203ED84246201C26A2F4360D7CBC36AC1D232D\",\n        UpgradeLocked = true,\n        Uri = \"poll://kcxzcv2fpsxkn6tk9u6d/\",\n    });\n\n    var tenantedAgent = new Octopusdeploy.KubernetesAgentDeploymentTarget(\"tenantedAgent\", new()\n    {\n        Environments = new[]\n        {\n            \"environments-1\",\n        },\n        Roles = new[]\n        {\n            \"role-1\",\n            \"role-2\",\n        },\n        TenantTags = new[]\n        {\n            \"TagSets-1/Tags-1\",\n        },\n        TenantedDeploymentParticipation = \"Tenanted\",\n        Tenants = new[]\n        {\n            \"tenants-1\",\n        },\n        Thumbprint = \"96203ED84246201C26A2F4360D7CBC36AC1D232D\",\n        Uri = \"poll://kcxzcv2fpsxkn6tk9u6d/\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewKubernetesAgentDeploymentTarget(ctx, \"minimal\", \u0026octopusdeploy.KubernetesAgentDeploymentTargetArgs{\n\t\t\tEnvironments: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"environments-1\"),\n\t\t\t},\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"role-1\"),\n\t\t\t\tpulumi.String(\"role-2\"),\n\t\t\t},\n\t\t\tThumbprint: pulumi.String(\"96203ED84246201C26A2F4360D7CBC36AC1D232D\"),\n\t\t\tUri:        pulumi.String(\"poll://kcxzcv2fpsxkn6tk9u6d/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = octopusdeploy.NewKubernetesAgentDeploymentTarget(ctx, \"optionals\", \u0026octopusdeploy.KubernetesAgentDeploymentTargetArgs{\n\t\t\tDefaultNamespace: pulumi.String(\"kubernetes-namespace\"),\n\t\t\tEnvironments: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"environments-1\"),\n\t\t\t},\n\t\t\tIsDisabled:      pulumi.Bool(true),\n\t\t\tMachinePolicyId: pulumi.String(\"machinepolicies-1\"),\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"role-1\"),\n\t\t\t\tpulumi.String(\"role-2\"),\n\t\t\t},\n\t\t\tThumbprint:    pulumi.String(\"96203ED84246201C26A2F4360D7CBC36AC1D232D\"),\n\t\t\tUpgradeLocked: pulumi.Bool(true),\n\t\t\tUri:           pulumi.String(\"poll://kcxzcv2fpsxkn6tk9u6d/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = octopusdeploy.NewKubernetesAgentDeploymentTarget(ctx, \"tenantedAgent\", \u0026octopusdeploy.KubernetesAgentDeploymentTargetArgs{\n\t\t\tEnvironments: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"environments-1\"),\n\t\t\t},\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"role-1\"),\n\t\t\t\tpulumi.String(\"role-2\"),\n\t\t\t},\n\t\t\tTenantTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"TagSets-1/Tags-1\"),\n\t\t\t},\n\t\t\tTenantedDeploymentParticipation: pulumi.String(\"Tenanted\"),\n\t\t\tTenants: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"tenants-1\"),\n\t\t\t},\n\t\t\tThumbprint: pulumi.String(\"96203ED84246201C26A2F4360D7CBC36AC1D232D\"),\n\t\t\tUri:        pulumi.String(\"poll://kcxzcv2fpsxkn6tk9u6d/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.KubernetesAgentDeploymentTarget;\nimport com.pulumi.octopusdeploy.KubernetesAgentDeploymentTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var minimal = new KubernetesAgentDeploymentTarget(\"minimal\", KubernetesAgentDeploymentTargetArgs.builder()        \n            .environments(\"environments-1\")\n            .roles(            \n                \"role-1\",\n                \"role-2\")\n            .thumbprint(\"96203ED84246201C26A2F4360D7CBC36AC1D232D\")\n            .uri(\"poll://kcxzcv2fpsxkn6tk9u6d/\")\n            .build());\n\n        var optionals = new KubernetesAgentDeploymentTarget(\"optionals\", KubernetesAgentDeploymentTargetArgs.builder()        \n            .defaultNamespace(\"kubernetes-namespace\")\n            .environments(\"environments-1\")\n            .isDisabled(true)\n            .machinePolicyId(\"machinepolicies-1\")\n            .roles(            \n                \"role-1\",\n                \"role-2\")\n            .thumbprint(\"96203ED84246201C26A2F4360D7CBC36AC1D232D\")\n            .upgradeLocked(true)\n            .uri(\"poll://kcxzcv2fpsxkn6tk9u6d/\")\n            .build());\n\n        var tenantedAgent = new KubernetesAgentDeploymentTarget(\"tenantedAgent\", KubernetesAgentDeploymentTargetArgs.builder()        \n            .environments(\"environments-1\")\n            .roles(            \n                \"role-1\",\n                \"role-2\")\n            .tenantTags(\"TagSets-1/Tags-1\")\n            .tenantedDeploymentParticipation(\"Tenanted\")\n            .tenants(\"tenants-1\")\n            .thumbprint(\"96203ED84246201C26A2F4360D7CBC36AC1D232D\")\n            .uri(\"poll://kcxzcv2fpsxkn6tk9u6d/\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  minimal:\n    type: octopusdeploy:KubernetesAgentDeploymentTarget\n    properties:\n      environments:\n        - environments-1\n      roles:\n        - role-1\n        - role-2\n      thumbprint: 96203ED84246201C26A2F4360D7CBC36AC1D232D\n      uri: poll://kcxzcv2fpsxkn6tk9u6d/\n  optionals:\n    type: octopusdeploy:KubernetesAgentDeploymentTarget\n    properties:\n      defaultNamespace: kubernetes-namespace\n      environments:\n        - environments-1\n      isDisabled: true\n      machinePolicyId: machinepolicies-1\n      roles:\n        - role-1\n        - role-2\n      thumbprint: 96203ED84246201C26A2F4360D7CBC36AC1D232D\n      upgradeLocked: true\n      uri: poll://kcxzcv2fpsxkn6tk9u6d/\n  tenantedAgent:\n    type: octopusdeploy:KubernetesAgentDeploymentTarget\n    properties:\n      environments:\n        - environments-1\n      roles:\n        - role-1\n        - role-2\n      tenantTags:\n        - TagSets-1/Tags-1\n      tenantedDeploymentParticipation: Tenanted\n      tenants:\n        - tenants-1\n      thumbprint: 96203ED84246201C26A2F4360D7CBC36AC1D232D\n      uri: poll://kcxzcv2fpsxkn6tk9u6d/\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/kubernetesAgentDeploymentTarget:KubernetesAgentDeploymentTarget [options] octopusdeploy_kubernetes_agent_deployment_target.\u003cname\u003e \u003cmachine-id\u003e\n```\n\n",
            "properties": {
                "agentHelmReleaseName": {
                    "type": "string",
                    "description": "Name of the Helm release that the agent belongs to.\n"
                },
                "agentKubernetesNamespace": {
                    "type": "string",
                    "description": "Name of the Kubernetes namespace where the agent is installed.\n"
                },
                "agentTentacleVersion": {
                    "type": "string",
                    "description": "Current Tentacle version of the agent\n"
                },
                "agentUpgradeStatus": {
                    "type": "string",
                    "description": "Current upgrade availability status of the agent. One of 'NoUpgrades', 'UpgradeAvailable', 'UpgradeSuggested', 'UpgradeRequired'\n"
                },
                "agentVersion": {
                    "type": "string",
                    "description": "Current Helm chart version of the agent.\n"
                },
                "communicationMode": {
                    "type": "string",
                    "description": "The communication mode used by the Kubernetes agent to communicate with Octopus Server. Currently, the only supported value is 'Polling'.\n"
                },
                "defaultNamespace": {
                    "type": "string",
                    "description": "Optional default namespace that will be used when using Kubernetes deployment steps, can be overrides within step configurations.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs this Kubernetes agent can deploy to.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Whether the Kubernetes agent is disabled. If the agent is disabled, it will not be included in any deployments.\n"
                },
                "machinePolicyId": {
                    "type": "string",
                    "description": "Optional ID of the machine policy that the Kubernetes agent will use. If not provided the default machine policy will be used.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of target roles that are associated to this Kubernetes agent.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the Kubernetes agent's certificate used by server to verify the identity of the agent. This is the same thumbprint that was used when installing the agent.\n"
                },
                "upgradeLocked": {
                    "type": "boolean",
                    "description": "If enabled the Kubernetes agent will not automatically upgrade and will stay on the currently installed version, even if the associated machine policy is configured to automatically upgrade.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "The URI of the Kubernetes agent's used by the server to queue messages. This is the same subscription uri that was used when installing the agent.\n"
                }
            },
            "required": [
                "agentHelmReleaseName",
                "agentKubernetesNamespace",
                "agentTentacleVersion",
                "agentUpgradeStatus",
                "agentVersion",
                "defaultNamespace",
                "environments",
                "machinePolicyId",
                "name",
                "roles",
                "spaceId",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri"
            ],
            "inputProperties": {
                "communicationMode": {
                    "type": "string",
                    "description": "The communication mode used by the Kubernetes agent to communicate with Octopus Server. Currently, the only supported value is 'Polling'.\n"
                },
                "defaultNamespace": {
                    "type": "string",
                    "description": "Optional default namespace that will be used when using Kubernetes deployment steps, can be overrides within step configurations.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs this Kubernetes agent can deploy to.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Whether the Kubernetes agent is disabled. If the agent is disabled, it will not be included in any deployments.\n"
                },
                "machinePolicyId": {
                    "type": "string",
                    "description": "Optional ID of the machine policy that the Kubernetes agent will use. If not provided the default machine policy will be used.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of target roles that are associated to this Kubernetes agent.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the Kubernetes agent's certificate used by server to verify the identity of the agent. This is the same thumbprint that was used when installing the agent.\n"
                },
                "upgradeLocked": {
                    "type": "boolean",
                    "description": "If enabled the Kubernetes agent will not automatically upgrade and will stay on the currently installed version, even if the associated machine policy is configured to automatically upgrade.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "The URI of the Kubernetes agent's used by the server to queue messages. This is the same subscription uri that was used when installing the agent.\n"
                }
            },
            "requiredInputs": [
                "environments",
                "roles",
                "thumbprint",
                "uri"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KubernetesAgentDeploymentTarget resources.\n",
                "properties": {
                    "agentHelmReleaseName": {
                        "type": "string",
                        "description": "Name of the Helm release that the agent belongs to.\n"
                    },
                    "agentKubernetesNamespace": {
                        "type": "string",
                        "description": "Name of the Kubernetes namespace where the agent is installed.\n"
                    },
                    "agentTentacleVersion": {
                        "type": "string",
                        "description": "Current Tentacle version of the agent\n"
                    },
                    "agentUpgradeStatus": {
                        "type": "string",
                        "description": "Current upgrade availability status of the agent. One of 'NoUpgrades', 'UpgradeAvailable', 'UpgradeSuggested', 'UpgradeRequired'\n"
                    },
                    "agentVersion": {
                        "type": "string",
                        "description": "Current Helm chart version of the agent.\n"
                    },
                    "communicationMode": {
                        "type": "string",
                        "description": "The communication mode used by the Kubernetes agent to communicate with Octopus Server. Currently, the only supported value is 'Polling'.\n"
                    },
                    "defaultNamespace": {
                        "type": "string",
                        "description": "Optional default namespace that will be used when using Kubernetes deployment steps, can be overrides within step configurations.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs this Kubernetes agent can deploy to.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "Whether the Kubernetes agent is disabled. If the agent is disabled, it will not be included in any deployments.\n"
                    },
                    "machinePolicyId": {
                        "type": "string",
                        "description": "Optional ID of the machine policy that the Kubernetes agent will use. If not provided the default machine policy will be used.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of target roles that are associated to this Kubernetes agent.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the Kubernetes agent's certificate used by server to verify the identity of the agent. This is the same thumbprint that was used when installing the agent.\n"
                    },
                    "upgradeLocked": {
                        "type": "boolean",
                        "description": "If enabled the Kubernetes agent will not automatically upgrade and will stay on the currently installed version, even if the associated machine policy is configured to automatically upgrade.\n"
                    },
                    "uri": {
                        "type": "string",
                        "description": "The URI of the Kubernetes agent's used by the server to queue messages. This is the same subscription uri that was used when installing the agent.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/kubernetesAgentWorker:KubernetesAgentWorker": {
            "description": "This resource manages Kubernetes agent workers in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.KubernetesAgentWorker;\nimport com.pulumi.octopusdeploy.KubernetesAgentWorkerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var minimal = new KubernetesAgentWorker(\"minimal\", KubernetesAgentWorkerArgs.builder()        \n            .thumbprint(\"96203ED84246201C26A2F4360D7CBC36AC1D232D\")\n            .uri(\"poll://kcxzcv2fpsxkn6tk9u6d/\")\n            .workerPools(\"worker-pools-1\")\n            .build());\n\n        var optionals = new KubernetesAgentWorker(\"optionals\", KubernetesAgentWorkerArgs.builder()        \n            .isDisabled(true)\n            .machinePolicyId(\"machinepolicies-1\")\n            .thumbprint(\"96203ED84246201C26A2F4360D7CBC36AC1D232D\")\n            .upgradeLocked(true)\n            .uri(\"poll://kcxzcv2fpsxkn6tk9u6d/\")\n            .workerPools(            \n                \"worker-pools-1\",\n                \"worker-pools-3\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  minimal:\n    type: octopusdeploy:KubernetesAgentWorker\n    properties:\n      thumbprint: 96203ED84246201C26A2F4360D7CBC36AC1D232D\n      uri: poll://kcxzcv2fpsxkn6tk9u6d/\n      workerPools:\n        - worker-pools-1\n  optionals:\n    type: octopusdeploy:KubernetesAgentWorker\n    properties:\n      isDisabled: true\n      machinePolicyId: machinepolicies-1\n      thumbprint: 96203ED84246201C26A2F4360D7CBC36AC1D232D\n      upgradeLocked: true\n      uri: poll://kcxzcv2fpsxkn6tk9u6d/\n      workerPools:\n        - worker-pools-1\n        - worker-pools-3\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/kubernetesAgentWorker:KubernetesAgentWorker [options] octopusdeploy_kubernetes_agent_worker.\u003cname\u003e \u003cmachine-id\u003e\n```\n\n",
            "properties": {
                "agentHelmReleaseName": {
                    "type": "string",
                    "description": "Name of the Helm release that the agent belongs to.\n"
                },
                "agentKubernetesNamespace": {
                    "type": "string",
                    "description": "Name of the Kubernetes namespace where the agent is installed.\n"
                },
                "agentTentacleVersion": {
                    "type": "string",
                    "description": "Current Tentacle version of the agent\n"
                },
                "agentUpgradeStatus": {
                    "type": "string",
                    "description": "Current upgrade availability status of the agent. One of 'NoUpgrades', 'UpgradeAvailable', 'UpgradeSuggested', 'UpgradeRequired'\n"
                },
                "agentVersion": {
                    "type": "string",
                    "description": "Current Helm chart version of the agent.\n"
                },
                "communicationMode": {
                    "type": "string",
                    "description": "The communication mode used by the Kubernetes agent to communicate with Octopus Server. Currently, the only supported value is 'Polling'.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Whether the Kubernetes agent is disabled. If the agent is disabled, it will not be included in any deployments.\n"
                },
                "machinePolicyId": {
                    "type": "string",
                    "description": "Optional ID of the machine policy that the Kubernetes agent will use. If not provided the default machine policy will be used.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the Kubernetes agent's certificate used by server to verify the identity of the agent. This is the same thumbprint that was used when installing the agent.\n"
                },
                "upgradeLocked": {
                    "type": "boolean",
                    "description": "If enabled the Kubernetes agent will not automatically upgrade and will stay on the currently installed version, even if the associated machine policy is configured to automatically upgrade.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "The URI of the Kubernetes agent's used by the server to queue messages. This is the same subscription uri that was used when installing the agent.\n"
                },
                "workerPoolIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of worker pool Ids specifying the pools in which this worker belongs\n"
                }
            },
            "required": [
                "agentHelmReleaseName",
                "agentKubernetesNamespace",
                "agentTentacleVersion",
                "agentUpgradeStatus",
                "agentVersion",
                "machinePolicyId",
                "name",
                "spaceId",
                "thumbprint",
                "uri",
                "workerPoolIds"
            ],
            "inputProperties": {
                "communicationMode": {
                    "type": "string",
                    "description": "The communication mode used by the Kubernetes agent to communicate with Octopus Server. Currently, the only supported value is 'Polling'.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Whether the Kubernetes agent is disabled. If the agent is disabled, it will not be included in any deployments.\n"
                },
                "machinePolicyId": {
                    "type": "string",
                    "description": "Optional ID of the machine policy that the Kubernetes agent will use. If not provided the default machine policy will be used.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the Kubernetes agent's certificate used by server to verify the identity of the agent. This is the same thumbprint that was used when installing the agent.\n"
                },
                "upgradeLocked": {
                    "type": "boolean",
                    "description": "If enabled the Kubernetes agent will not automatically upgrade and will stay on the currently installed version, even if the associated machine policy is configured to automatically upgrade.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "The URI of the Kubernetes agent's used by the server to queue messages. This is the same subscription uri that was used when installing the agent.\n"
                },
                "workerPoolIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of worker pool Ids specifying the pools in which this worker belongs\n"
                }
            },
            "requiredInputs": [
                "thumbprint",
                "uri",
                "workerPoolIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KubernetesAgentWorker resources.\n",
                "properties": {
                    "agentHelmReleaseName": {
                        "type": "string",
                        "description": "Name of the Helm release that the agent belongs to.\n"
                    },
                    "agentKubernetesNamespace": {
                        "type": "string",
                        "description": "Name of the Kubernetes namespace where the agent is installed.\n"
                    },
                    "agentTentacleVersion": {
                        "type": "string",
                        "description": "Current Tentacle version of the agent\n"
                    },
                    "agentUpgradeStatus": {
                        "type": "string",
                        "description": "Current upgrade availability status of the agent. One of 'NoUpgrades', 'UpgradeAvailable', 'UpgradeSuggested', 'UpgradeRequired'\n"
                    },
                    "agentVersion": {
                        "type": "string",
                        "description": "Current Helm chart version of the agent.\n"
                    },
                    "communicationMode": {
                        "type": "string",
                        "description": "The communication mode used by the Kubernetes agent to communicate with Octopus Server. Currently, the only supported value is 'Polling'.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "Whether the Kubernetes agent is disabled. If the agent is disabled, it will not be included in any deployments.\n"
                    },
                    "machinePolicyId": {
                        "type": "string",
                        "description": "Optional ID of the machine policy that the Kubernetes agent will use. If not provided the default machine policy will be used.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the Kubernetes agent's certificate used by server to verify the identity of the agent. This is the same thumbprint that was used when installing the agent.\n"
                    },
                    "upgradeLocked": {
                        "type": "boolean",
                        "description": "If enabled the Kubernetes agent will not automatically upgrade and will stay on the currently installed version, even if the associated machine policy is configured to automatically upgrade.\n"
                    },
                    "uri": {
                        "type": "string",
                        "description": "The URI of the Kubernetes agent's used by the server to queue messages. This is the same subscription uri that was used when installing the agent.\n"
                    },
                    "workerPoolIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of worker pool Ids specifying the pools in which this worker belongs\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/kubernetesClusterDeploymentTarget:KubernetesClusterDeploymentTarget": {
            "description": "This resource manages Kubernetes cluster deployment targets in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst k8s_target = new octopusdeploy.KubernetesClusterDeploymentTarget(\"k8s-target\", {\n    awsAccountAuthentication: {\n        accountId: \"Accounts-123\",\n        clusterName: \"cluster-name\",\n    },\n    clusterUrl: \"https://example.com:1234/\",\n    environments: [\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    roles: [\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    tenantedDeploymentParticipation: \"Untenanted\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nk8s_target = octopusdeploy.KubernetesClusterDeploymentTarget(\"k8s-target\",\n    aws_account_authentication=octopusdeploy.KubernetesClusterDeploymentTargetAwsAccountAuthenticationArgs(\n        account_id=\"Accounts-123\",\n        cluster_name=\"cluster-name\",\n    ),\n    cluster_url=\"https://example.com:1234/\",\n    environments=[\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    roles=[\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    tenanted_deployment_participation=\"Untenanted\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var k8s_target = new Octopusdeploy.KubernetesClusterDeploymentTarget(\"k8s-target\", new()\n    {\n        AwsAccountAuthentication = new Octopusdeploy.Inputs.KubernetesClusterDeploymentTargetAwsAccountAuthenticationArgs\n        {\n            AccountId = \"Accounts-123\",\n            ClusterName = \"cluster-name\",\n        },\n        ClusterUrl = \"https://example.com:1234/\",\n        Environments = new[]\n        {\n            \"Environments-123\",\n            \"Environment-321\",\n        },\n        Roles = new[]\n        {\n            \"Development Team\",\n            \"System Administrators\",\n        },\n        TenantedDeploymentParticipation = \"Untenanted\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewKubernetesClusterDeploymentTarget(ctx, \"k8s-target\", \u0026octopusdeploy.KubernetesClusterDeploymentTargetArgs{\n\t\t\tAwsAccountAuthentication: \u0026octopusdeploy.KubernetesClusterDeploymentTargetAwsAccountAuthenticationArgs{\n\t\t\t\tAccountId:   pulumi.String(\"Accounts-123\"),\n\t\t\t\tClusterName: pulumi.String(\"cluster-name\"),\n\t\t\t},\n\t\t\tClusterUrl: pulumi.String(\"https://example.com:1234/\"),\n\t\t\tEnvironments: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Environments-123\"),\n\t\t\t\tpulumi.String(\"Environment-321\"),\n\t\t\t},\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Development Team\"),\n\t\t\t\tpulumi.String(\"System Administrators\"),\n\t\t\t},\n\t\t\tTenantedDeploymentParticipation: pulumi.String(\"Untenanted\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.KubernetesClusterDeploymentTarget;\nimport com.pulumi.octopusdeploy.KubernetesClusterDeploymentTargetArgs;\nimport com.pulumi.octopusdeploy.inputs.KubernetesClusterDeploymentTargetAwsAccountAuthenticationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var k8s_target = new KubernetesClusterDeploymentTarget(\"k8s-target\", KubernetesClusterDeploymentTargetArgs.builder()        \n            .awsAccountAuthentication(KubernetesClusterDeploymentTargetAwsAccountAuthenticationArgs.builder()\n                .accountId(\"Accounts-123\")\n                .clusterName(\"cluster-name\")\n                .build())\n            .clusterUrl(\"https://example.com:1234/\")\n            .environments(            \n                \"Environments-123\",\n                \"Environment-321\")\n            .roles(            \n                \"Development Team\",\n                \"System Administrators\")\n            .tenantedDeploymentParticipation(\"Untenanted\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  k8s-target:\n    type: octopusdeploy:KubernetesClusterDeploymentTarget\n    properties:\n      awsAccountAuthentication:\n        accountId: Accounts-123\n        clusterName: cluster-name\n      clusterUrl: https://example.com:1234/\n      environments:\n        - Environments-123\n        - Environment-321\n      roles:\n        - Development Team\n        - System Administrators\n      tenantedDeploymentParticipation: Untenanted\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/kubernetesClusterDeploymentTarget:KubernetesClusterDeploymentTarget [options] octopusdeploy_kubernetes_cluster_deployment_target.\u003cname\u003e \u003cmachine-id\u003e\n```\n\n",
            "properties": {
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetAuthentication:KubernetesClusterDeploymentTargetAuthentication"
                },
                "awsAccountAuthentication": {
                    "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetAwsAccountAuthentication:KubernetesClusterDeploymentTargetAwsAccountAuthentication"
                },
                "azureServicePrincipalAuthentication": {
                    "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetAzureServicePrincipalAuthentication:KubernetesClusterDeploymentTargetAzureServicePrincipalAuthentication"
                },
                "certificateAuthentication": {
                    "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetCertificateAuthentication:KubernetesClusterDeploymentTargetCertificateAuthentication"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterCertificatePath": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "containerOptions": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetContainer:KubernetesClusterDeploymentTargetContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetEndpoint:KubernetesClusterDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "gcpAccountAuthentication": {
                    "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetGcpAccountAuthentication:KubernetesClusterDeploymentTargetGcpAccountAuthentication"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "podAuthentication": {
                    "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetPodAuthentication:KubernetesClusterDeploymentTargetPodAuthentication"
                },
                "proxyId": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "required": [
                "authentication",
                "awsAccountAuthentication",
                "azureServicePrincipalAuthentication",
                "certificateAuthentication",
                "clusterUrl",
                "containers",
                "endpoints",
                "environments",
                "gcpAccountAuthentication",
                "hasLatestCalamari",
                "healthStatus",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "podAuthentication",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri"
            ],
            "inputProperties": {
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetAuthentication:KubernetesClusterDeploymentTargetAuthentication"
                },
                "awsAccountAuthentication": {
                    "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetAwsAccountAuthentication:KubernetesClusterDeploymentTargetAwsAccountAuthentication"
                },
                "azureServicePrincipalAuthentication": {
                    "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetAzureServicePrincipalAuthentication:KubernetesClusterDeploymentTargetAzureServicePrincipalAuthentication"
                },
                "certificateAuthentication": {
                    "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetCertificateAuthentication:KubernetesClusterDeploymentTargetCertificateAuthentication"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterCertificatePath": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "containerOptions": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetContainer:KubernetesClusterDeploymentTargetContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetEndpoint:KubernetesClusterDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "gcpAccountAuthentication": {
                    "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetGcpAccountAuthentication:KubernetesClusterDeploymentTargetGcpAccountAuthentication"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "podAuthentication": {
                    "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetPodAuthentication:KubernetesClusterDeploymentTargetPodAuthentication"
                },
                "proxyId": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "clusterUrl",
                "environments",
                "roles"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KubernetesClusterDeploymentTarget resources.\n",
                "properties": {
                    "authentication": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetAuthentication:KubernetesClusterDeploymentTargetAuthentication"
                    },
                    "awsAccountAuthentication": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetAwsAccountAuthentication:KubernetesClusterDeploymentTargetAwsAccountAuthentication"
                    },
                    "azureServicePrincipalAuthentication": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetAzureServicePrincipalAuthentication:KubernetesClusterDeploymentTargetAzureServicePrincipalAuthentication"
                    },
                    "certificateAuthentication": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetCertificateAuthentication:KubernetesClusterDeploymentTargetCertificateAuthentication"
                    },
                    "clusterCertificate": {
                        "type": "string"
                    },
                    "clusterCertificatePath": {
                        "type": "string"
                    },
                    "clusterUrl": {
                        "type": "string"
                    },
                    "containerOptions": {
                        "type": "string"
                    },
                    "containers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetContainer:KubernetesClusterDeploymentTargetContainer"
                        }
                    },
                    "defaultWorkerPoolId": {
                        "type": "string"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetEndpoint:KubernetesClusterDeploymentTargetEndpoint"
                        }
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "gcpAccountAuthentication": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetGcpAccountAuthentication:KubernetesClusterDeploymentTargetGcpAccountAuthentication"
                    },
                    "hasLatestCalamari": {
                        "type": "boolean"
                    },
                    "healthStatus": {
                        "type": "string",
                        "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "isInProcess": {
                        "type": "boolean"
                    },
                    "machinePolicyId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "operatingSystem": {
                        "type": "string"
                    },
                    "podAuthentication": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetPodAuthentication:KubernetesClusterDeploymentTargetPodAuthentication"
                    },
                    "proxyId": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "runningInContainer": {
                        "type": "boolean"
                    },
                    "shellName": {
                        "type": "string"
                    },
                    "shellVersion": {
                        "type": "string"
                    },
                    "skipTlsVerification": {
                        "type": "boolean"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                    },
                    "statusSummary": {
                        "type": "string",
                        "description": "A summary elaborating on the status of this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "thumbprint": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/listeningTentacleDeploymentTarget:ListeningTentacleDeploymentTarget": {
            "description": "This resource manages listening tentacle deployment targets in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.ListeningTentacleDeploymentTarget(\"example\", {\n    environments: [\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    isDisabled: true,\n    machinePolicyId: \"MachinePolicies-123\",\n    roles: [\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    tenantedDeploymentParticipation: \"Untenanted\",\n    tentacleUrl: \"https://example.com:1234/\",\n    thumbprint: \"\u003cthumbprint\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.ListeningTentacleDeploymentTarget(\"example\",\n    environments=[\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    is_disabled=True,\n    machine_policy_id=\"MachinePolicies-123\",\n    roles=[\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    tenanted_deployment_participation=\"Untenanted\",\n    tentacle_url=\"https://example.com:1234/\",\n    thumbprint=\"\u003cthumbprint\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.ListeningTentacleDeploymentTarget(\"example\", new()\n    {\n        Environments = new[]\n        {\n            \"Environments-123\",\n            \"Environment-321\",\n        },\n        IsDisabled = true,\n        MachinePolicyId = \"MachinePolicies-123\",\n        Roles = new[]\n        {\n            \"Development Team\",\n            \"System Administrators\",\n        },\n        TenantedDeploymentParticipation = \"Untenanted\",\n        TentacleUrl = \"https://example.com:1234/\",\n        Thumbprint = \"\u003cthumbprint\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewListeningTentacleDeploymentTarget(ctx, \"example\", \u0026octopusdeploy.ListeningTentacleDeploymentTargetArgs{\n\t\t\tEnvironments: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Environments-123\"),\n\t\t\t\tpulumi.String(\"Environment-321\"),\n\t\t\t},\n\t\t\tIsDisabled:      pulumi.Bool(true),\n\t\t\tMachinePolicyId: pulumi.String(\"MachinePolicies-123\"),\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Development Team\"),\n\t\t\t\tpulumi.String(\"System Administrators\"),\n\t\t\t},\n\t\t\tTenantedDeploymentParticipation: pulumi.String(\"Untenanted\"),\n\t\t\tTentacleUrl:                     pulumi.String(\"https://example.com:1234/\"),\n\t\t\tThumbprint:                      pulumi.String(\"\u003cthumbprint\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.ListeningTentacleDeploymentTarget;\nimport com.pulumi.octopusdeploy.ListeningTentacleDeploymentTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ListeningTentacleDeploymentTarget(\"example\", ListeningTentacleDeploymentTargetArgs.builder()        \n            .environments(            \n                \"Environments-123\",\n                \"Environment-321\")\n            .isDisabled(true)\n            .machinePolicyId(\"MachinePolicies-123\")\n            .roles(            \n                \"Development Team\",\n                \"System Administrators\")\n            .tenantedDeploymentParticipation(\"Untenanted\")\n            .tentacleUrl(\"https://example.com:1234/\")\n            .thumbprint(\"\u003cthumbprint\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:ListeningTentacleDeploymentTarget\n    properties:\n      environments:\n        - Environments-123\n        - Environment-321\n      isDisabled: true\n      machinePolicyId: MachinePolicies-123\n      roles:\n        - Development Team\n        - System Administrators\n      tenantedDeploymentParticipation: Untenanted\n      tentacleUrl: https://example.com:1234/\n      thumbprint: \u003cthumbprint\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/listeningTentacleDeploymentTarget:ListeningTentacleDeploymentTarget [options] octopusdeploy_listening_tentacle_deployment_target.\u003cname\u003e \u003cmachine-id\u003e\n```\n\n",
            "properties": {
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this listening tentacle.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Represents the disabled status of this deployment target.\n"
                },
                "isInProcess": {
                    "type": "boolean",
                    "description": "Represents the in-process status of this deployment target.\n"
                },
                "machinePolicyId": {
                    "type": "string",
                    "description": "The machine policy ID that is associated with this deployment target.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string",
                    "description": "The operating system that is associated with this deployment target.\n"
                },
                "proxyId": {
                    "type": "string",
                    "description": "The proxy ID that is associated with this deployment target.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role IDs that are associated with this deployment target.\n"
                },
                "shellName": {
                    "type": "string",
                    "description": "The shell name associated with this deployment target.\n"
                },
                "shellVersion": {
                    "type": "string",
                    "description": "The shell version associated with this deployment target.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "tentacleUrl": {
                    "type": "string",
                    "description": "The tenant URL of this deployment target.\n"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ListeningTentacleDeploymentTargetTentacleVersionDetail:ListeningTentacleDeploymentTargetTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of this deployment target.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "The URI of this deployment target.\n"
                }
            },
            "required": [
                "certificateSignatureAlgorithm",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "proxyId",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "tentacleUrl",
                "tentacleVersionDetails",
                "thumbprint",
                "uri"
            ],
            "inputProperties": {
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this listening tentacle.\n"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Represents the disabled status of this deployment target.\n"
                },
                "isInProcess": {
                    "type": "boolean",
                    "description": "Represents the in-process status of this deployment target.\n"
                },
                "machinePolicyId": {
                    "type": "string",
                    "description": "The machine policy ID that is associated with this deployment target.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string",
                    "description": "The operating system that is associated with this deployment target.\n"
                },
                "proxyId": {
                    "type": "string",
                    "description": "The proxy ID that is associated with this deployment target.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role IDs that are associated with this deployment target.\n"
                },
                "shellName": {
                    "type": "string",
                    "description": "The shell name associated with this deployment target.\n"
                },
                "shellVersion": {
                    "type": "string",
                    "description": "The shell version associated with this deployment target.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "tentacleUrl": {
                    "type": "string",
                    "description": "The tenant URL of this deployment target.\n"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ListeningTentacleDeploymentTargetTentacleVersionDetail:ListeningTentacleDeploymentTargetTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of this deployment target.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "The URI of this deployment target.\n"
                }
            },
            "requiredInputs": [
                "environments",
                "roles",
                "tentacleUrl",
                "thumbprint"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ListeningTentacleDeploymentTarget resources.\n",
                "properties": {
                    "certificateSignatureAlgorithm": {
                        "type": "string"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this listening tentacle.\n"
                    },
                    "hasLatestCalamari": {
                        "type": "boolean"
                    },
                    "healthStatus": {
                        "type": "string",
                        "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "Represents the disabled status of this deployment target.\n"
                    },
                    "isInProcess": {
                        "type": "boolean",
                        "description": "Represents the in-process status of this deployment target.\n"
                    },
                    "machinePolicyId": {
                        "type": "string",
                        "description": "The machine policy ID that is associated with this deployment target.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "operatingSystem": {
                        "type": "string",
                        "description": "The operating system that is associated with this deployment target.\n"
                    },
                    "proxyId": {
                        "type": "string",
                        "description": "The proxy ID that is associated with this deployment target.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of role IDs that are associated with this deployment target.\n"
                    },
                    "shellName": {
                        "type": "string",
                        "description": "The shell name associated with this deployment target.\n"
                    },
                    "shellVersion": {
                        "type": "string",
                        "description": "The shell version associated with this deployment target.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                    },
                    "statusSummary": {
                        "type": "string",
                        "description": "A summary elaborating on the status of this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "tentacleUrl": {
                        "type": "string",
                        "description": "The tenant URL of this deployment target.\n"
                    },
                    "tentacleVersionDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/ListeningTentacleDeploymentTargetTentacleVersionDetail:ListeningTentacleDeploymentTargetTentacleVersionDetail"
                        }
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of this deployment target.\n"
                    },
                    "uri": {
                        "type": "string",
                        "description": "The URI of this deployment target.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/machinePolicy:MachinePolicy": {
            "description": "This resource manages machine policies in Octopus Deploy.\n",
            "properties": {
                "connectionConnectTimeout": {
                    "type": "integer",
                    "description": "In nanoseconds. Minimum value: 10000000000 (10 seconds).\n"
                },
                "connectionRetryCountLimit": {
                    "type": "integer"
                },
                "connectionRetrySleepInterval": {
                    "type": "integer",
                    "description": "In nanoseconds.\n"
                },
                "connectionRetryTimeLimit": {
                    "type": "integer",
                    "description": "In nanoseconds.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this machine policy.\n"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "machineCleanupPolicy": {
                    "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineCleanupPolicy:MachinePolicyMachineCleanupPolicy"
                },
                "machineConnectivityPolicy": {
                    "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineConnectivityPolicy:MachinePolicyMachineConnectivityPolicy"
                },
                "machineHealthCheckPolicy": {
                    "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineHealthCheckPolicy:MachinePolicyMachineHealthCheckPolicy"
                },
                "machineUpdatePolicy": {
                    "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineUpdatePolicy:MachinePolicyMachineUpdatePolicy"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "pollingRequestQueueTimeout": {
                    "type": "integer",
                    "description": "In nanoseconds.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                }
            },
            "required": [
                "isDefault",
                "machineCleanupPolicy",
                "machineConnectivityPolicy",
                "machineHealthCheckPolicy",
                "machineUpdatePolicy",
                "name",
                "spaceId"
            ],
            "inputProperties": {
                "connectionConnectTimeout": {
                    "type": "integer",
                    "description": "In nanoseconds. Minimum value: 10000000000 (10 seconds).\n"
                },
                "connectionRetryCountLimit": {
                    "type": "integer"
                },
                "connectionRetrySleepInterval": {
                    "type": "integer",
                    "description": "In nanoseconds.\n"
                },
                "connectionRetryTimeLimit": {
                    "type": "integer",
                    "description": "In nanoseconds.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this machine policy.\n"
                },
                "machineCleanupPolicy": {
                    "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineCleanupPolicy:MachinePolicyMachineCleanupPolicy"
                },
                "machineConnectivityPolicy": {
                    "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineConnectivityPolicy:MachinePolicyMachineConnectivityPolicy"
                },
                "machineHealthCheckPolicy": {
                    "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineHealthCheckPolicy:MachinePolicyMachineHealthCheckPolicy"
                },
                "machineUpdatePolicy": {
                    "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineUpdatePolicy:MachinePolicyMachineUpdatePolicy"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "pollingRequestQueueTimeout": {
                    "type": "integer",
                    "description": "In nanoseconds.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MachinePolicy resources.\n",
                "properties": {
                    "connectionConnectTimeout": {
                        "type": "integer",
                        "description": "In nanoseconds. Minimum value: 10000000000 (10 seconds).\n"
                    },
                    "connectionRetryCountLimit": {
                        "type": "integer"
                    },
                    "connectionRetrySleepInterval": {
                        "type": "integer",
                        "description": "In nanoseconds.\n"
                    },
                    "connectionRetryTimeLimit": {
                        "type": "integer",
                        "description": "In nanoseconds.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this machine policy.\n"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "machineCleanupPolicy": {
                        "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineCleanupPolicy:MachinePolicyMachineCleanupPolicy"
                    },
                    "machineConnectivityPolicy": {
                        "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineConnectivityPolicy:MachinePolicyMachineConnectivityPolicy"
                    },
                    "machineHealthCheckPolicy": {
                        "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineHealthCheckPolicy:MachinePolicyMachineHealthCheckPolicy"
                    },
                    "machineUpdatePolicy": {
                        "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineUpdatePolicy:MachinePolicyMachineUpdatePolicy"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "pollingRequestQueueTimeout": {
                        "type": "integer",
                        "description": "In nanoseconds.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/offlinePackageDropDeploymentTarget:OfflinePackageDropDeploymentTarget": {
            "description": "This resource manages offline package drop deployment targets in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.OfflinePackageDropDeploymentTarget(\"example\", {\n    applicationsDirectory: \"\u003capplications directory\u003e\",\n    environments: [\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    isDisabled: true,\n    machinePolicyId: \"MachinePolicies-123\",\n    roles: [\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    tenantedDeploymentParticipation: \"Untenanted\",\n    thumbprint: \"\u003cthumbprint\u003e\",\n    workingDirectory: \"\u003cworking directory\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.OfflinePackageDropDeploymentTarget(\"example\",\n    applications_directory=\"\u003capplications directory\u003e\",\n    environments=[\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    is_disabled=True,\n    machine_policy_id=\"MachinePolicies-123\",\n    roles=[\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    tenanted_deployment_participation=\"Untenanted\",\n    thumbprint=\"\u003cthumbprint\u003e\",\n    working_directory=\"\u003cworking directory\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.OfflinePackageDropDeploymentTarget(\"example\", new()\n    {\n        ApplicationsDirectory = \"\u003capplications directory\u003e\",\n        Environments = new[]\n        {\n            \"Environments-123\",\n            \"Environment-321\",\n        },\n        IsDisabled = true,\n        MachinePolicyId = \"MachinePolicies-123\",\n        Roles = new[]\n        {\n            \"Development Team\",\n            \"System Administrators\",\n        },\n        TenantedDeploymentParticipation = \"Untenanted\",\n        Thumbprint = \"\u003cthumbprint\u003e\",\n        WorkingDirectory = \"\u003cworking directory\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewOfflinePackageDropDeploymentTarget(ctx, \"example\", \u0026octopusdeploy.OfflinePackageDropDeploymentTargetArgs{\n\t\t\tApplicationsDirectory: pulumi.String(\"\u003capplications directory\u003e\"),\n\t\t\tEnvironments: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Environments-123\"),\n\t\t\t\tpulumi.String(\"Environment-321\"),\n\t\t\t},\n\t\t\tIsDisabled:      pulumi.Bool(true),\n\t\t\tMachinePolicyId: pulumi.String(\"MachinePolicies-123\"),\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Development Team\"),\n\t\t\t\tpulumi.String(\"System Administrators\"),\n\t\t\t},\n\t\t\tTenantedDeploymentParticipation: pulumi.String(\"Untenanted\"),\n\t\t\tThumbprint:                      pulumi.String(\"\u003cthumbprint\u003e\"),\n\t\t\tWorkingDirectory:                pulumi.String(\"\u003cworking directory\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OfflinePackageDropDeploymentTarget;\nimport com.pulumi.octopusdeploy.OfflinePackageDropDeploymentTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new OfflinePackageDropDeploymentTarget(\"example\", OfflinePackageDropDeploymentTargetArgs.builder()        \n            .applicationsDirectory(\"\u003capplications directory\u003e\")\n            .environments(            \n                \"Environments-123\",\n                \"Environment-321\")\n            .isDisabled(true)\n            .machinePolicyId(\"MachinePolicies-123\")\n            .roles(            \n                \"Development Team\",\n                \"System Administrators\")\n            .tenantedDeploymentParticipation(\"Untenanted\")\n            .thumbprint(\"\u003cthumbprint\u003e\")\n            .workingDirectory(\"\u003cworking directory\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:OfflinePackageDropDeploymentTarget\n    properties:\n      applicationsDirectory: \u003capplications directory\u003e\n      environments:\n        - Environments-123\n        - Environment-321\n      isDisabled: true\n      machinePolicyId: MachinePolicies-123\n      roles:\n        - Development Team\n        - System Administrators\n      tenantedDeploymentParticipation: Untenanted\n      thumbprint: \u003cthumbprint\u003e\n      workingDirectory: \u003cworking directory\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/offlinePackageDropDeploymentTarget:OfflinePackageDropDeploymentTarget [options] octopusdeploy_listening_tentacle_deployment_target.\u003cname\u003e \u003cmachine-id\u003e\n```\n\n",
            "properties": {
                "applicationsDirectory": {
                    "type": "string"
                },
                "destination": {
                    "$ref": "#/types/octopusdeploy:index/OfflinePackageDropDeploymentTargetDestination:OfflinePackageDropDeploymentTargetDestination"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/OfflinePackageDropDeploymentTargetEndpoint:OfflinePackageDropDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "required": [
                "applicationsDirectory",
                "destination",
                "endpoints",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri",
                "workingDirectory"
            ],
            "inputProperties": {
                "applicationsDirectory": {
                    "type": "string"
                },
                "destination": {
                    "$ref": "#/types/octopusdeploy:index/OfflinePackageDropDeploymentTargetDestination:OfflinePackageDropDeploymentTargetDestination"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/OfflinePackageDropDeploymentTargetEndpoint:OfflinePackageDropDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "applicationsDirectory",
                "environments",
                "roles",
                "workingDirectory"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OfflinePackageDropDeploymentTarget resources.\n",
                "properties": {
                    "applicationsDirectory": {
                        "type": "string"
                    },
                    "destination": {
                        "$ref": "#/types/octopusdeploy:index/OfflinePackageDropDeploymentTargetDestination:OfflinePackageDropDeploymentTargetDestination"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/OfflinePackageDropDeploymentTargetEndpoint:OfflinePackageDropDeploymentTargetEndpoint"
                        }
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "hasLatestCalamari": {
                        "type": "boolean"
                    },
                    "healthStatus": {
                        "type": "string",
                        "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "isInProcess": {
                        "type": "boolean"
                    },
                    "machinePolicyId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "operatingSystem": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shellName": {
                        "type": "string"
                    },
                    "shellVersion": {
                        "type": "string"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                    },
                    "statusSummary": {
                        "type": "string",
                        "description": "A summary elaborating on the status of this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "thumbprint": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    },
                    "workingDirectory": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/pollingSubscriptionId:PollingSubscriptionId": {
            "description": "A unique polling subscription ID that can be used by polling tentacles.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.PollingSubscriptionId(\"example\", {});\nconst exampleWithDependencies = new octopusdeploy.PollingSubscriptionId(\"exampleWithDependencies\", {dependencies: {\n    target: octopusdeploy_kubernetes_agent_deployment_target.example.id,\n}});\n// Usage\nconst agent = new octopusdeploy.KubernetesAgentDeploymentTarget(\"agent\", {\n    environments: [\"environments-1\"],\n    roles: [\n        \"role-1\",\n        \"role-2\",\n    ],\n    thumbprint: \"96203ED84246201C26A2F4360D7CBC36AC1D232D\",\n    uri: exampleWithDependencies.pollingUri,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.PollingSubscriptionId(\"example\")\nexample_with_dependencies = octopusdeploy.PollingSubscriptionId(\"exampleWithDependencies\", dependencies={\n    \"target\": octopusdeploy_kubernetes_agent_deployment_target[\"example\"][\"id\"],\n})\n# Usage\nagent = octopusdeploy.KubernetesAgentDeploymentTarget(\"agent\",\n    environments=[\"environments-1\"],\n    roles=[\n        \"role-1\",\n        \"role-2\",\n    ],\n    thumbprint=\"96203ED84246201C26A2F4360D7CBC36AC1D232D\",\n    uri=example_with_dependencies.polling_uri)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.PollingSubscriptionId(\"example\");\n\n    var exampleWithDependencies = new Octopusdeploy.PollingSubscriptionId(\"exampleWithDependencies\", new()\n    {\n        Dependencies = \n        {\n            { \"target\", octopusdeploy_kubernetes_agent_deployment_target.Example.Id },\n        },\n    });\n\n    // Usage\n    var agent = new Octopusdeploy.KubernetesAgentDeploymentTarget(\"agent\", new()\n    {\n        Environments = new[]\n        {\n            \"environments-1\",\n        },\n        Roles = new[]\n        {\n            \"role-1\",\n            \"role-2\",\n        },\n        Thumbprint = \"96203ED84246201C26A2F4360D7CBC36AC1D232D\",\n        Uri = exampleWithDependencies.PollingUri,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewPollingSubscriptionId(ctx, \"example\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleWithDependencies, err := octopusdeploy.NewPollingSubscriptionId(ctx, \"exampleWithDependencies\", \u0026octopusdeploy.PollingSubscriptionIdArgs{\n\t\t\tDependencies: pulumi.Map{\n\t\t\t\t\"target\": pulumi.Any(octopusdeploy_kubernetes_agent_deployment_target.Example.Id),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Usage\n\t\t_, err = octopusdeploy.NewKubernetesAgentDeploymentTarget(ctx, \"agent\", \u0026octopusdeploy.KubernetesAgentDeploymentTargetArgs{\n\t\t\tEnvironments: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"environments-1\"),\n\t\t\t},\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"role-1\"),\n\t\t\t\tpulumi.String(\"role-2\"),\n\t\t\t},\n\t\t\tThumbprint: pulumi.String(\"96203ED84246201C26A2F4360D7CBC36AC1D232D\"),\n\t\t\tUri:        exampleWithDependencies.PollingUri,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.PollingSubscriptionId;\nimport com.pulumi.octopusdeploy.PollingSubscriptionIdArgs;\nimport com.pulumi.octopusdeploy.KubernetesAgentDeploymentTarget;\nimport com.pulumi.octopusdeploy.KubernetesAgentDeploymentTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PollingSubscriptionId(\"example\");\n\n        var exampleWithDependencies = new PollingSubscriptionId(\"exampleWithDependencies\", PollingSubscriptionIdArgs.builder()        \n            .dependencies(Map.of(\"target\", octopusdeploy_kubernetes_agent_deployment_target.example().id()))\n            .build());\n\n        // Usage\n        var agent = new KubernetesAgentDeploymentTarget(\"agent\", KubernetesAgentDeploymentTargetArgs.builder()        \n            .environments(\"environments-1\")\n            .roles(            \n                \"role-1\",\n                \"role-2\")\n            .thumbprint(\"96203ED84246201C26A2F4360D7CBC36AC1D232D\")\n            .uri(exampleWithDependencies.pollingUri())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:PollingSubscriptionId\n  exampleWithDependencies:\n    type: octopusdeploy:PollingSubscriptionId\n    properties:\n      dependencies:\n        target: ${octopusdeploy_kubernetes_agent_deployment_target.example.id}\n  # Usage\n  agent:\n    type: octopusdeploy:KubernetesAgentDeploymentTarget\n    properties:\n      environments:\n        - environments-1\n      roles:\n        - role-1\n        - role-2\n      thumbprint: 96203ED84246201C26A2F4360D7CBC36AC1D232D\n      uri: ${exampleWithDependencies.pollingUri}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "dependencies": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Optional map of dependencies that when modified will trigger a re-creation of this resource.\n"
                },
                "pollingUri": {
                    "type": "string",
                    "description": "The URI of the polling subscription ID.\n"
                }
            },
            "required": [
                "pollingUri"
            ],
            "inputProperties": {
                "dependencies": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Optional map of dependencies that when modified will trigger a re-creation of this resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PollingSubscriptionId resources.\n",
                "properties": {
                    "dependencies": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Optional map of dependencies that when modified will trigger a re-creation of this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "pollingUri": {
                        "type": "string",
                        "description": "The URI of the polling subscription ID.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/pollingTentacleDeploymentTarget:PollingTentacleDeploymentTarget": {
            "description": "This resource manages polling tentacle deployment targets in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.PollingTentacleDeploymentTarget(\"example\", {\n    environments: [\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    isDisabled: true,\n    machinePolicyId: \"MachinePolicies-123\",\n    roles: [\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    tenantedDeploymentParticipation: \"Untenanted\",\n    tentacleUrl: \"https://example.com:1234/\",\n    thumbprint: \"\u003cthumbprint\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.PollingTentacleDeploymentTarget(\"example\",\n    environments=[\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    is_disabled=True,\n    machine_policy_id=\"MachinePolicies-123\",\n    roles=[\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    tenanted_deployment_participation=\"Untenanted\",\n    tentacle_url=\"https://example.com:1234/\",\n    thumbprint=\"\u003cthumbprint\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.PollingTentacleDeploymentTarget(\"example\", new()\n    {\n        Environments = new[]\n        {\n            \"Environments-123\",\n            \"Environment-321\",\n        },\n        IsDisabled = true,\n        MachinePolicyId = \"MachinePolicies-123\",\n        Roles = new[]\n        {\n            \"Development Team\",\n            \"System Administrators\",\n        },\n        TenantedDeploymentParticipation = \"Untenanted\",\n        TentacleUrl = \"https://example.com:1234/\",\n        Thumbprint = \"\u003cthumbprint\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewPollingTentacleDeploymentTarget(ctx, \"example\", \u0026octopusdeploy.PollingTentacleDeploymentTargetArgs{\n\t\t\tEnvironments: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Environments-123\"),\n\t\t\t\tpulumi.String(\"Environment-321\"),\n\t\t\t},\n\t\t\tIsDisabled:      pulumi.Bool(true),\n\t\t\tMachinePolicyId: pulumi.String(\"MachinePolicies-123\"),\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Development Team\"),\n\t\t\t\tpulumi.String(\"System Administrators\"),\n\t\t\t},\n\t\t\tTenantedDeploymentParticipation: pulumi.String(\"Untenanted\"),\n\t\t\tTentacleUrl:                     pulumi.String(\"https://example.com:1234/\"),\n\t\t\tThumbprint:                      pulumi.String(\"\u003cthumbprint\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.PollingTentacleDeploymentTarget;\nimport com.pulumi.octopusdeploy.PollingTentacleDeploymentTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PollingTentacleDeploymentTarget(\"example\", PollingTentacleDeploymentTargetArgs.builder()        \n            .environments(            \n                \"Environments-123\",\n                \"Environment-321\")\n            .isDisabled(true)\n            .machinePolicyId(\"MachinePolicies-123\")\n            .roles(            \n                \"Development Team\",\n                \"System Administrators\")\n            .tenantedDeploymentParticipation(\"Untenanted\")\n            .tentacleUrl(\"https://example.com:1234/\")\n            .thumbprint(\"\u003cthumbprint\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:PollingTentacleDeploymentTarget\n    properties:\n      environments:\n        - Environments-123\n        - Environment-321\n      isDisabled: true\n      machinePolicyId: MachinePolicies-123\n      roles:\n        - Development Team\n        - System Administrators\n      tenantedDeploymentParticipation: Untenanted\n      tentacleUrl: https://example.com:1234/\n      thumbprint: \u003cthumbprint\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/pollingTentacleDeploymentTarget:PollingTentacleDeploymentTarget [options] octopusdeploy_listening_tentacle_deployment_target.\u003cname\u003e \u003cmachine-id\u003e\n```\n\n",
            "properties": {
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/PollingTentacleDeploymentTargetEndpoint:PollingTentacleDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "tentacleUrl": {
                    "type": "string"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/PollingTentacleDeploymentTargetTentacleVersionDetail:PollingTentacleDeploymentTargetTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "required": [
                "endpoints",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "tentacleUrl",
                "tentacleVersionDetails",
                "thumbprint",
                "uri"
            ],
            "inputProperties": {
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/PollingTentacleDeploymentTargetEndpoint:PollingTentacleDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "tentacleUrl": {
                    "type": "string"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/PollingTentacleDeploymentTargetTentacleVersionDetail:PollingTentacleDeploymentTargetTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "environments",
                "roles",
                "tentacleUrl"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PollingTentacleDeploymentTarget resources.\n",
                "properties": {
                    "certificateSignatureAlgorithm": {
                        "type": "string"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/PollingTentacleDeploymentTargetEndpoint:PollingTentacleDeploymentTargetEndpoint"
                        }
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "hasLatestCalamari": {
                        "type": "boolean"
                    },
                    "healthStatus": {
                        "type": "string",
                        "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "isInProcess": {
                        "type": "boolean"
                    },
                    "machinePolicyId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "operatingSystem": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shellName": {
                        "type": "string"
                    },
                    "shellVersion": {
                        "type": "string"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                    },
                    "statusSummary": {
                        "type": "string",
                        "description": "A summary elaborating on the status of this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "tentacleUrl": {
                        "type": "string"
                    },
                    "tentacleVersionDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/PollingTentacleDeploymentTargetTentacleVersionDetail:PollingTentacleDeploymentTargetTentacleVersionDetail"
                        }
                    },
                    "thumbprint": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/projectDeploymentTargetTrigger:ProjectDeploymentTargetTrigger": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.ProjectDeploymentTargetTrigger(\"example\", {\n    eventCategories: [\"MachineUnhealthy\"],\n    projectId: \"Projects-123\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.ProjectDeploymentTargetTrigger(\"example\",\n    event_categories=[\"MachineUnhealthy\"],\n    project_id=\"Projects-123\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.ProjectDeploymentTargetTrigger(\"example\", new()\n    {\n        EventCategories = new[]\n        {\n            \"MachineUnhealthy\",\n        },\n        ProjectId = \"Projects-123\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewProjectDeploymentTargetTrigger(ctx, \"example\", \u0026octopusdeploy.ProjectDeploymentTargetTriggerArgs{\n\t\t\tEventCategories: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"MachineUnhealthy\"),\n\t\t\t},\n\t\t\tProjectId: pulumi.String(\"Projects-123\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.ProjectDeploymentTargetTrigger;\nimport com.pulumi.octopusdeploy.ProjectDeploymentTargetTriggerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ProjectDeploymentTargetTrigger(\"example\", ProjectDeploymentTargetTriggerArgs.builder()        \n            .eventCategories(\"MachineUnhealthy\")\n            .projectId(\"Projects-123\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:ProjectDeploymentTargetTrigger\n    properties:\n      eventCategories:\n        - MachineUnhealthy\n      projectId: Projects-123\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/projectDeploymentTargetTrigger:ProjectDeploymentTargetTrigger [options] octopusdeploy_project_deployment_target_trigger.\u003cname\u003e \u003cproject_deployment_target_trigger-id\u003e\n```\n\n",
            "properties": {
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Apply environment id filters to restrict which deployment targets will actually cause the trigger to fire, and consequently, which deployment targets will be automatically deployed to.\n"
                },
                "eventCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Apply event category filters to restrict which deployment targets will actually cause the trigger to fire, and consequently, which deployment targets will be automatically deployed to.\n"
                },
                "eventGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Apply event group filters to restrict which deployment targets will actually cause the trigger to fire, and consequently, which deployment targets will be automatically deployed to.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project to attach the trigger.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Apply event role filters to restrict which deployment targets will actually cause the trigger to fire, and consequently, which deployment targets will be automatically deployed to.\n"
                },
                "shouldRedeploy": {
                    "type": "boolean",
                    "description": "Enable to re-deploy to the deployment targets even if they are already up-to-date with the current deployment.\n"
                }
            },
            "required": [
                "name",
                "projectId"
            ],
            "inputProperties": {
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Apply environment id filters to restrict which deployment targets will actually cause the trigger to fire, and consequently, which deployment targets will be automatically deployed to.\n"
                },
                "eventCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Apply event category filters to restrict which deployment targets will actually cause the trigger to fire, and consequently, which deployment targets will be automatically deployed to.\n"
                },
                "eventGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Apply event group filters to restrict which deployment targets will actually cause the trigger to fire, and consequently, which deployment targets will be automatically deployed to.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project to attach the trigger.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Apply event role filters to restrict which deployment targets will actually cause the trigger to fire, and consequently, which deployment targets will be automatically deployed to.\n"
                },
                "shouldRedeploy": {
                    "type": "boolean",
                    "description": "Enable to re-deploy to the deployment targets even if they are already up-to-date with the current deployment.\n"
                }
            },
            "requiredInputs": [
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProjectDeploymentTargetTrigger resources.\n",
                "properties": {
                    "environmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Apply environment id filters to restrict which deployment targets will actually cause the trigger to fire, and consequently, which deployment targets will be automatically deployed to.\n"
                    },
                    "eventCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Apply event category filters to restrict which deployment targets will actually cause the trigger to fire, and consequently, which deployment targets will be automatically deployed to.\n"
                    },
                    "eventGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Apply event group filters to restrict which deployment targets will actually cause the trigger to fire, and consequently, which deployment targets will be automatically deployed to.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The ID of the project to attach the trigger.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Apply event role filters to restrict which deployment targets will actually cause the trigger to fire, and consequently, which deployment targets will be automatically deployed to.\n"
                    },
                    "shouldRedeploy": {
                        "type": "boolean",
                        "description": "Enable to re-deploy to the deployment targets even if they are already up-to-date with the current deployment.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/projectScheduledTrigger:ProjectScheduledTrigger": {
            "description": "This resource manages a scheduled trigger for a project or runbook in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst onceDailyExample = new octopusdeploy.ProjectScheduledTrigger(\"onceDailyExample\", {\n    deployNewReleaseAction: {\n        destinationEnvironmentId: \"environments-123\",\n    },\n    description: \"This is a once daily schedule\",\n    onceDailySchedule: {\n        daysOfWeeks: [\n            \"Tuesday\",\n            \"Wednesday\",\n            \"Monday\",\n        ],\n        startTime: \"2024-03-22T09:00:00\",\n    },\n    projectId: \"projects-123\",\n    spaceId: \"spaces-123\",\n});\nconst continuousExample = new octopusdeploy.ProjectScheduledTrigger(\"continuousExample\", {\n    continuousDailySchedule: {\n        daysOfWeeks: [\n            \"Monday\",\n            \"Tuesday\",\n            \"Friday\",\n        ],\n        hourInterval: 3,\n        interval: \"OnceHourly\",\n        runAfter: \"2024-03-22T09:00:00\",\n        runUntil: \"2024-03-29T13:00:00\",\n    },\n    deployNewReleaseAction: {\n        destinationEnvironmentId: \"environments-123\",\n    },\n    description: \"This is a continuous daily schedule\",\n    projectId: \"projects-123\",\n    spaceId: \"spaces-123\",\n});\nconst deployLatestExample = new octopusdeploy.ProjectScheduledTrigger(\"deployLatestExample\", {\n    cronExpressionSchedule: {\n        cronExpression: \"0 0 06 * * Mon-Fri\",\n    },\n    deployLatestReleaseAction: {\n        destinationEnvironmentId: \"environments-123\",\n        shouldRedeploy: true,\n        sourceEnvironmentId: \"environments-321\",\n    },\n    projectId: \"projects-123\",\n    spaceId: \"spaces-123\",\n});\nconst deployNewExample = new octopusdeploy.ProjectScheduledTrigger(\"deployNewExample\", {\n    cronExpressionSchedule: {\n        cronExpression: \"0 0 06 * * Mon-Fri\",\n    },\n    deployNewReleaseAction: {\n        destinationEnvironmentId: \"environments-123\",\n    },\n    projectId: \"projects-123\",\n    spaceId: \"spaces-123\",\n});\nconst runbookExample = new octopusdeploy.ProjectScheduledTrigger(\"runbookExample\", {\n    cronExpressionSchedule: {\n        cronExpression: \"0 0 06 * * Mon-Fri\",\n    },\n    description: \"This is a Cron schedule\",\n    projectId: \"projects-123\",\n    runRunbookAction: {\n        runbookId: \"runbooks-123\",\n        targetEnvironmentIds: [\n            \"environments-123\",\n            \"environments-321\",\n        ],\n    },\n    spaceId: \"spaces-123\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nonce_daily_example = octopusdeploy.ProjectScheduledTrigger(\"onceDailyExample\",\n    deploy_new_release_action=octopusdeploy.ProjectScheduledTriggerDeployNewReleaseActionArgs(\n        destination_environment_id=\"environments-123\",\n    ),\n    description=\"This is a once daily schedule\",\n    once_daily_schedule=octopusdeploy.ProjectScheduledTriggerOnceDailyScheduleArgs(\n        days_of_weeks=[\n            \"Tuesday\",\n            \"Wednesday\",\n            \"Monday\",\n        ],\n        start_time=\"2024-03-22T09:00:00\",\n    ),\n    project_id=\"projects-123\",\n    space_id=\"spaces-123\")\ncontinuous_example = octopusdeploy.ProjectScheduledTrigger(\"continuousExample\",\n    continuous_daily_schedule=octopusdeploy.ProjectScheduledTriggerContinuousDailyScheduleArgs(\n        days_of_weeks=[\n            \"Monday\",\n            \"Tuesday\",\n            \"Friday\",\n        ],\n        hour_interval=3,\n        interval=\"OnceHourly\",\n        run_after=\"2024-03-22T09:00:00\",\n        run_until=\"2024-03-29T13:00:00\",\n    ),\n    deploy_new_release_action=octopusdeploy.ProjectScheduledTriggerDeployNewReleaseActionArgs(\n        destination_environment_id=\"environments-123\",\n    ),\n    description=\"This is a continuous daily schedule\",\n    project_id=\"projects-123\",\n    space_id=\"spaces-123\")\ndeploy_latest_example = octopusdeploy.ProjectScheduledTrigger(\"deployLatestExample\",\n    cron_expression_schedule=octopusdeploy.ProjectScheduledTriggerCronExpressionScheduleArgs(\n        cron_expression=\"0 0 06 * * Mon-Fri\",\n    ),\n    deploy_latest_release_action=octopusdeploy.ProjectScheduledTriggerDeployLatestReleaseActionArgs(\n        destination_environment_id=\"environments-123\",\n        should_redeploy=True,\n        source_environment_id=\"environments-321\",\n    ),\n    project_id=\"projects-123\",\n    space_id=\"spaces-123\")\ndeploy_new_example = octopusdeploy.ProjectScheduledTrigger(\"deployNewExample\",\n    cron_expression_schedule=octopusdeploy.ProjectScheduledTriggerCronExpressionScheduleArgs(\n        cron_expression=\"0 0 06 * * Mon-Fri\",\n    ),\n    deploy_new_release_action=octopusdeploy.ProjectScheduledTriggerDeployNewReleaseActionArgs(\n        destination_environment_id=\"environments-123\",\n    ),\n    project_id=\"projects-123\",\n    space_id=\"spaces-123\")\nrunbook_example = octopusdeploy.ProjectScheduledTrigger(\"runbookExample\",\n    cron_expression_schedule=octopusdeploy.ProjectScheduledTriggerCronExpressionScheduleArgs(\n        cron_expression=\"0 0 06 * * Mon-Fri\",\n    ),\n    description=\"This is a Cron schedule\",\n    project_id=\"projects-123\",\n    run_runbook_action=octopusdeploy.ProjectScheduledTriggerRunRunbookActionArgs(\n        runbook_id=\"runbooks-123\",\n        target_environment_ids=[\n            \"environments-123\",\n            \"environments-321\",\n        ],\n    ),\n    space_id=\"spaces-123\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var onceDailyExample = new Octopusdeploy.ProjectScheduledTrigger(\"onceDailyExample\", new()\n    {\n        DeployNewReleaseAction = new Octopusdeploy.Inputs.ProjectScheduledTriggerDeployNewReleaseActionArgs\n        {\n            DestinationEnvironmentId = \"environments-123\",\n        },\n        Description = \"This is a once daily schedule\",\n        OnceDailySchedule = new Octopusdeploy.Inputs.ProjectScheduledTriggerOnceDailyScheduleArgs\n        {\n            DaysOfWeeks = new[]\n            {\n                \"Tuesday\",\n                \"Wednesday\",\n                \"Monday\",\n            },\n            StartTime = \"2024-03-22T09:00:00\",\n        },\n        ProjectId = \"projects-123\",\n        SpaceId = \"spaces-123\",\n    });\n\n    var continuousExample = new Octopusdeploy.ProjectScheduledTrigger(\"continuousExample\", new()\n    {\n        ContinuousDailySchedule = new Octopusdeploy.Inputs.ProjectScheduledTriggerContinuousDailyScheduleArgs\n        {\n            DaysOfWeeks = new[]\n            {\n                \"Monday\",\n                \"Tuesday\",\n                \"Friday\",\n            },\n            HourInterval = 3,\n            Interval = \"OnceHourly\",\n            RunAfter = \"2024-03-22T09:00:00\",\n            RunUntil = \"2024-03-29T13:00:00\",\n        },\n        DeployNewReleaseAction = new Octopusdeploy.Inputs.ProjectScheduledTriggerDeployNewReleaseActionArgs\n        {\n            DestinationEnvironmentId = \"environments-123\",\n        },\n        Description = \"This is a continuous daily schedule\",\n        ProjectId = \"projects-123\",\n        SpaceId = \"spaces-123\",\n    });\n\n    var deployLatestExample = new Octopusdeploy.ProjectScheduledTrigger(\"deployLatestExample\", new()\n    {\n        CronExpressionSchedule = new Octopusdeploy.Inputs.ProjectScheduledTriggerCronExpressionScheduleArgs\n        {\n            CronExpression = \"0 0 06 * * Mon-Fri\",\n        },\n        DeployLatestReleaseAction = new Octopusdeploy.Inputs.ProjectScheduledTriggerDeployLatestReleaseActionArgs\n        {\n            DestinationEnvironmentId = \"environments-123\",\n            ShouldRedeploy = true,\n            SourceEnvironmentId = \"environments-321\",\n        },\n        ProjectId = \"projects-123\",\n        SpaceId = \"spaces-123\",\n    });\n\n    var deployNewExample = new Octopusdeploy.ProjectScheduledTrigger(\"deployNewExample\", new()\n    {\n        CronExpressionSchedule = new Octopusdeploy.Inputs.ProjectScheduledTriggerCronExpressionScheduleArgs\n        {\n            CronExpression = \"0 0 06 * * Mon-Fri\",\n        },\n        DeployNewReleaseAction = new Octopusdeploy.Inputs.ProjectScheduledTriggerDeployNewReleaseActionArgs\n        {\n            DestinationEnvironmentId = \"environments-123\",\n        },\n        ProjectId = \"projects-123\",\n        SpaceId = \"spaces-123\",\n    });\n\n    var runbookExample = new Octopusdeploy.ProjectScheduledTrigger(\"runbookExample\", new()\n    {\n        CronExpressionSchedule = new Octopusdeploy.Inputs.ProjectScheduledTriggerCronExpressionScheduleArgs\n        {\n            CronExpression = \"0 0 06 * * Mon-Fri\",\n        },\n        Description = \"This is a Cron schedule\",\n        ProjectId = \"projects-123\",\n        RunRunbookAction = new Octopusdeploy.Inputs.ProjectScheduledTriggerRunRunbookActionArgs\n        {\n            RunbookId = \"runbooks-123\",\n            TargetEnvironmentIds = new[]\n            {\n                \"environments-123\",\n                \"environments-321\",\n            },\n        },\n        SpaceId = \"spaces-123\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewProjectScheduledTrigger(ctx, \"onceDailyExample\", \u0026octopusdeploy.ProjectScheduledTriggerArgs{\n\t\t\tDeployNewReleaseAction: \u0026octopusdeploy.ProjectScheduledTriggerDeployNewReleaseActionArgs{\n\t\t\t\tDestinationEnvironmentId: pulumi.String(\"environments-123\"),\n\t\t\t},\n\t\t\tDescription: pulumi.String(\"This is a once daily schedule\"),\n\t\t\tOnceDailySchedule: \u0026octopusdeploy.ProjectScheduledTriggerOnceDailyScheduleArgs{\n\t\t\t\tDaysOfWeeks: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"Tuesday\"),\n\t\t\t\t\tpulumi.String(\"Wednesday\"),\n\t\t\t\t\tpulumi.String(\"Monday\"),\n\t\t\t\t},\n\t\t\t\tStartTime: pulumi.String(\"2024-03-22T09:00:00\"),\n\t\t\t},\n\t\t\tProjectId: pulumi.String(\"projects-123\"),\n\t\t\tSpaceId:   pulumi.String(\"spaces-123\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = octopusdeploy.NewProjectScheduledTrigger(ctx, \"continuousExample\", \u0026octopusdeploy.ProjectScheduledTriggerArgs{\n\t\t\tContinuousDailySchedule: \u0026octopusdeploy.ProjectScheduledTriggerContinuousDailyScheduleArgs{\n\t\t\t\tDaysOfWeeks: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"Monday\"),\n\t\t\t\t\tpulumi.String(\"Tuesday\"),\n\t\t\t\t\tpulumi.String(\"Friday\"),\n\t\t\t\t},\n\t\t\t\tHourInterval: pulumi.Int(3),\n\t\t\t\tInterval:     pulumi.String(\"OnceHourly\"),\n\t\t\t\tRunAfter:     pulumi.String(\"2024-03-22T09:00:00\"),\n\t\t\t\tRunUntil:     pulumi.String(\"2024-03-29T13:00:00\"),\n\t\t\t},\n\t\t\tDeployNewReleaseAction: \u0026octopusdeploy.ProjectScheduledTriggerDeployNewReleaseActionArgs{\n\t\t\t\tDestinationEnvironmentId: pulumi.String(\"environments-123\"),\n\t\t\t},\n\t\t\tDescription: pulumi.String(\"This is a continuous daily schedule\"),\n\t\t\tProjectId:   pulumi.String(\"projects-123\"),\n\t\t\tSpaceId:     pulumi.String(\"spaces-123\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = octopusdeploy.NewProjectScheduledTrigger(ctx, \"deployLatestExample\", \u0026octopusdeploy.ProjectScheduledTriggerArgs{\n\t\t\tCronExpressionSchedule: \u0026octopusdeploy.ProjectScheduledTriggerCronExpressionScheduleArgs{\n\t\t\t\tCronExpression: pulumi.String(\"0 0 06 * * Mon-Fri\"),\n\t\t\t},\n\t\t\tDeployLatestReleaseAction: \u0026octopusdeploy.ProjectScheduledTriggerDeployLatestReleaseActionArgs{\n\t\t\t\tDestinationEnvironmentId: pulumi.String(\"environments-123\"),\n\t\t\t\tShouldRedeploy:           pulumi.Bool(true),\n\t\t\t\tSourceEnvironmentId:      pulumi.String(\"environments-321\"),\n\t\t\t},\n\t\t\tProjectId: pulumi.String(\"projects-123\"),\n\t\t\tSpaceId:   pulumi.String(\"spaces-123\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = octopusdeploy.NewProjectScheduledTrigger(ctx, \"deployNewExample\", \u0026octopusdeploy.ProjectScheduledTriggerArgs{\n\t\t\tCronExpressionSchedule: \u0026octopusdeploy.ProjectScheduledTriggerCronExpressionScheduleArgs{\n\t\t\t\tCronExpression: pulumi.String(\"0 0 06 * * Mon-Fri\"),\n\t\t\t},\n\t\t\tDeployNewReleaseAction: \u0026octopusdeploy.ProjectScheduledTriggerDeployNewReleaseActionArgs{\n\t\t\t\tDestinationEnvironmentId: pulumi.String(\"environments-123\"),\n\t\t\t},\n\t\t\tProjectId: pulumi.String(\"projects-123\"),\n\t\t\tSpaceId:   pulumi.String(\"spaces-123\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = octopusdeploy.NewProjectScheduledTrigger(ctx, \"runbookExample\", \u0026octopusdeploy.ProjectScheduledTriggerArgs{\n\t\t\tCronExpressionSchedule: \u0026octopusdeploy.ProjectScheduledTriggerCronExpressionScheduleArgs{\n\t\t\t\tCronExpression: pulumi.String(\"0 0 06 * * Mon-Fri\"),\n\t\t\t},\n\t\t\tDescription: pulumi.String(\"This is a Cron schedule\"),\n\t\t\tProjectId:   pulumi.String(\"projects-123\"),\n\t\t\tRunRunbookAction: \u0026octopusdeploy.ProjectScheduledTriggerRunRunbookActionArgs{\n\t\t\t\tRunbookId: pulumi.String(\"runbooks-123\"),\n\t\t\t\tTargetEnvironmentIds: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"environments-123\"),\n\t\t\t\t\tpulumi.String(\"environments-321\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tSpaceId: pulumi.String(\"spaces-123\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.ProjectScheduledTrigger;\nimport com.pulumi.octopusdeploy.ProjectScheduledTriggerArgs;\nimport com.pulumi.octopusdeploy.inputs.ProjectScheduledTriggerDeployNewReleaseActionArgs;\nimport com.pulumi.octopusdeploy.inputs.ProjectScheduledTriggerOnceDailyScheduleArgs;\nimport com.pulumi.octopusdeploy.inputs.ProjectScheduledTriggerContinuousDailyScheduleArgs;\nimport com.pulumi.octopusdeploy.inputs.ProjectScheduledTriggerCronExpressionScheduleArgs;\nimport com.pulumi.octopusdeploy.inputs.ProjectScheduledTriggerDeployLatestReleaseActionArgs;\nimport com.pulumi.octopusdeploy.inputs.ProjectScheduledTriggerRunRunbookActionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var onceDailyExample = new ProjectScheduledTrigger(\"onceDailyExample\", ProjectScheduledTriggerArgs.builder()        \n            .deployNewReleaseAction(ProjectScheduledTriggerDeployNewReleaseActionArgs.builder()\n                .destinationEnvironmentId(\"environments-123\")\n                .build())\n            .description(\"This is a once daily schedule\")\n            .onceDailySchedule(ProjectScheduledTriggerOnceDailyScheduleArgs.builder()\n                .daysOfWeeks(                \n                    \"Tuesday\",\n                    \"Wednesday\",\n                    \"Monday\")\n                .startTime(\"2024-03-22T09:00:00\")\n                .build())\n            .projectId(\"projects-123\")\n            .spaceId(\"spaces-123\")\n            .build());\n\n        var continuousExample = new ProjectScheduledTrigger(\"continuousExample\", ProjectScheduledTriggerArgs.builder()        \n            .continuousDailySchedule(ProjectScheduledTriggerContinuousDailyScheduleArgs.builder()\n                .daysOfWeeks(                \n                    \"Monday\",\n                    \"Tuesday\",\n                    \"Friday\")\n                .hourInterval(3)\n                .interval(\"OnceHourly\")\n                .runAfter(\"2024-03-22T09:00:00\")\n                .runUntil(\"2024-03-29T13:00:00\")\n                .build())\n            .deployNewReleaseAction(ProjectScheduledTriggerDeployNewReleaseActionArgs.builder()\n                .destinationEnvironmentId(\"environments-123\")\n                .build())\n            .description(\"This is a continuous daily schedule\")\n            .projectId(\"projects-123\")\n            .spaceId(\"spaces-123\")\n            .build());\n\n        var deployLatestExample = new ProjectScheduledTrigger(\"deployLatestExample\", ProjectScheduledTriggerArgs.builder()        \n            .cronExpressionSchedule(ProjectScheduledTriggerCronExpressionScheduleArgs.builder()\n                .cronExpression(\"0 0 06 * * Mon-Fri\")\n                .build())\n            .deployLatestReleaseAction(ProjectScheduledTriggerDeployLatestReleaseActionArgs.builder()\n                .destinationEnvironmentId(\"environments-123\")\n                .shouldRedeploy(true)\n                .sourceEnvironmentId(\"environments-321\")\n                .build())\n            .projectId(\"projects-123\")\n            .spaceId(\"spaces-123\")\n            .build());\n\n        var deployNewExample = new ProjectScheduledTrigger(\"deployNewExample\", ProjectScheduledTriggerArgs.builder()        \n            .cronExpressionSchedule(ProjectScheduledTriggerCronExpressionScheduleArgs.builder()\n                .cronExpression(\"0 0 06 * * Mon-Fri\")\n                .build())\n            .deployNewReleaseAction(ProjectScheduledTriggerDeployNewReleaseActionArgs.builder()\n                .destinationEnvironmentId(\"environments-123\")\n                .build())\n            .projectId(\"projects-123\")\n            .spaceId(\"spaces-123\")\n            .build());\n\n        var runbookExample = new ProjectScheduledTrigger(\"runbookExample\", ProjectScheduledTriggerArgs.builder()        \n            .cronExpressionSchedule(ProjectScheduledTriggerCronExpressionScheduleArgs.builder()\n                .cronExpression(\"0 0 06 * * Mon-Fri\")\n                .build())\n            .description(\"This is a Cron schedule\")\n            .projectId(\"projects-123\")\n            .runRunbookAction(ProjectScheduledTriggerRunRunbookActionArgs.builder()\n                .runbookId(\"runbooks-123\")\n                .targetEnvironmentIds(                \n                    \"environments-123\",\n                    \"environments-321\")\n                .build())\n            .spaceId(\"spaces-123\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  onceDailyExample:\n    type: octopusdeploy:ProjectScheduledTrigger\n    properties:\n      deployNewReleaseAction:\n        destinationEnvironmentId: environments-123\n      description: This is a once daily schedule\n      onceDailySchedule:\n        daysOfWeeks:\n          - Tuesday\n          - Wednesday\n          - Monday\n        startTime: 2024-03-22T09:00:00\n      projectId: projects-123\n      spaceId: spaces-123\n  continuousExample:\n    type: octopusdeploy:ProjectScheduledTrigger\n    properties:\n      continuousDailySchedule:\n        daysOfWeeks:\n          - Monday\n          - Tuesday\n          - Friday\n        hourInterval: 3\n        interval: OnceHourly\n        runAfter: 2024-03-22T09:00:00\n        runUntil: 2024-03-29T13:00:00\n      deployNewReleaseAction:\n        destinationEnvironmentId: environments-123\n      description: This is a continuous daily schedule\n      projectId: projects-123\n      spaceId: spaces-123\n  deployLatestExample:\n    type: octopusdeploy:ProjectScheduledTrigger\n    properties:\n      cronExpressionSchedule:\n        cronExpression: 0 0 06 * * Mon-Fri\n      deployLatestReleaseAction:\n        destinationEnvironmentId: environments-123\n        shouldRedeploy: true\n        sourceEnvironmentId: environments-321\n      projectId: projects-123\n      spaceId: spaces-123\n  deployNewExample:\n    type: octopusdeploy:ProjectScheduledTrigger\n    properties:\n      cronExpressionSchedule:\n        cronExpression: 0 0 06 * * Mon-Fri\n      deployNewReleaseAction:\n        destinationEnvironmentId: environments-123\n      projectId: projects-123\n      spaceId: spaces-123\n  runbookExample:\n    type: octopusdeploy:ProjectScheduledTrigger\n    properties:\n      cronExpressionSchedule:\n        cronExpression: 0 0 06 * * Mon-Fri\n      description: This is a Cron schedule\n      projectId: projects-123\n      runRunbookAction:\n        runbookId: runbooks-123\n        targetEnvironmentIds:\n          - environments-123\n          - environments-321\n      spaceId: spaces-123\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/projectScheduledTrigger:ProjectScheduledTrigger [options] octopusdeploy_project_scheduled_trigger.\u003cname\u003e \u003ctrigger-id\u003e\n```\n\n",
            "properties": {
                "channelId": {
                    "type": "string",
                    "description": "The channel ID to use when creating the release. Will use the default channel if left blank.\n"
                },
                "continuousDailySchedule": {
                    "$ref": "#/types/octopusdeploy:index/ProjectScheduledTriggerContinuousDailySchedule:ProjectScheduledTriggerContinuousDailySchedule",
                    "description": "The daily schedule for the trigger.\n"
                },
                "cronExpressionSchedule": {
                    "$ref": "#/types/octopusdeploy:index/ProjectScheduledTriggerCronExpressionSchedule:ProjectScheduledTriggerCronExpressionSchedule",
                    "description": "The cron expression schedule for the trigger.\n"
                },
                "daysPerMonthSchedule": {
                    "$ref": "#/types/octopusdeploy:index/ProjectScheduledTriggerDaysPerMonthSchedule:ProjectScheduledTriggerDaysPerMonthSchedule",
                    "description": "The daily schedule for the trigger.\n"
                },
                "deployLatestReleaseAction": {
                    "$ref": "#/types/octopusdeploy:index/ProjectScheduledTriggerDeployLatestReleaseAction:ProjectScheduledTriggerDeployLatestReleaseAction",
                    "description": "Configuration for deploying the latest release. Can not be used with 'deploy*new*release*action' or 'run*runbook*action'.\n"
                },
                "deployNewReleaseAction": {
                    "$ref": "#/types/octopusdeploy:index/ProjectScheduledTriggerDeployNewReleaseAction:ProjectScheduledTriggerDeployNewReleaseAction",
                    "description": "Configuration for deploying a new release. Can not be used with 'deploy*latest*release*action' or 'run*runbook*action'.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the trigger.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Indicates whether the trigger is disabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "onceDailySchedule": {
                    "$ref": "#/types/octopusdeploy:index/ProjectScheduledTriggerOnceDailySchedule:ProjectScheduledTriggerOnceDailySchedule",
                    "description": "The daily schedule for the trigger.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project to attach the trigger.\n"
                },
                "runRunbookAction": {
                    "$ref": "#/types/octopusdeploy:index/ProjectScheduledTriggerRunRunbookAction:ProjectScheduledTriggerRunRunbookAction",
                    "description": "Configuration for running a runbook. Can not be used with 'deploy*latest*release*action' or 'deploy*new*release*action'.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID where this trigger's project exists.\n"
                },
                "tenantIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IDs of the tenants to deploy to.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "The timezone for the trigger.\n"
                }
            },
            "required": [
                "name",
                "projectId",
                "spaceId"
            ],
            "inputProperties": {
                "channelId": {
                    "type": "string",
                    "description": "The channel ID to use when creating the release. Will use the default channel if left blank.\n"
                },
                "continuousDailySchedule": {
                    "$ref": "#/types/octopusdeploy:index/ProjectScheduledTriggerContinuousDailySchedule:ProjectScheduledTriggerContinuousDailySchedule",
                    "description": "The daily schedule for the trigger.\n"
                },
                "cronExpressionSchedule": {
                    "$ref": "#/types/octopusdeploy:index/ProjectScheduledTriggerCronExpressionSchedule:ProjectScheduledTriggerCronExpressionSchedule",
                    "description": "The cron expression schedule for the trigger.\n"
                },
                "daysPerMonthSchedule": {
                    "$ref": "#/types/octopusdeploy:index/ProjectScheduledTriggerDaysPerMonthSchedule:ProjectScheduledTriggerDaysPerMonthSchedule",
                    "description": "The daily schedule for the trigger.\n"
                },
                "deployLatestReleaseAction": {
                    "$ref": "#/types/octopusdeploy:index/ProjectScheduledTriggerDeployLatestReleaseAction:ProjectScheduledTriggerDeployLatestReleaseAction",
                    "description": "Configuration for deploying the latest release. Can not be used with 'deploy*new*release*action' or 'run*runbook*action'.\n"
                },
                "deployNewReleaseAction": {
                    "$ref": "#/types/octopusdeploy:index/ProjectScheduledTriggerDeployNewReleaseAction:ProjectScheduledTriggerDeployNewReleaseAction",
                    "description": "Configuration for deploying a new release. Can not be used with 'deploy*latest*release*action' or 'run*runbook*action'.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the trigger.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Indicates whether the trigger is disabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "onceDailySchedule": {
                    "$ref": "#/types/octopusdeploy:index/ProjectScheduledTriggerOnceDailySchedule:ProjectScheduledTriggerOnceDailySchedule",
                    "description": "The daily schedule for the trigger.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project to attach the trigger.\n",
                    "willReplaceOnChanges": true
                },
                "runRunbookAction": {
                    "$ref": "#/types/octopusdeploy:index/ProjectScheduledTriggerRunRunbookAction:ProjectScheduledTriggerRunRunbookAction",
                    "description": "Configuration for running a runbook. Can not be used with 'deploy*latest*release*action' or 'deploy*new*release*action'.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID where this trigger's project exists.\n",
                    "willReplaceOnChanges": true
                },
                "tenantIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IDs of the tenants to deploy to.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "The timezone for the trigger.\n"
                }
            },
            "requiredInputs": [
                "projectId",
                "spaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProjectScheduledTrigger resources.\n",
                "properties": {
                    "channelId": {
                        "type": "string",
                        "description": "The channel ID to use when creating the release. Will use the default channel if left blank.\n"
                    },
                    "continuousDailySchedule": {
                        "$ref": "#/types/octopusdeploy:index/ProjectScheduledTriggerContinuousDailySchedule:ProjectScheduledTriggerContinuousDailySchedule",
                        "description": "The daily schedule for the trigger.\n"
                    },
                    "cronExpressionSchedule": {
                        "$ref": "#/types/octopusdeploy:index/ProjectScheduledTriggerCronExpressionSchedule:ProjectScheduledTriggerCronExpressionSchedule",
                        "description": "The cron expression schedule for the trigger.\n"
                    },
                    "daysPerMonthSchedule": {
                        "$ref": "#/types/octopusdeploy:index/ProjectScheduledTriggerDaysPerMonthSchedule:ProjectScheduledTriggerDaysPerMonthSchedule",
                        "description": "The daily schedule for the trigger.\n"
                    },
                    "deployLatestReleaseAction": {
                        "$ref": "#/types/octopusdeploy:index/ProjectScheduledTriggerDeployLatestReleaseAction:ProjectScheduledTriggerDeployLatestReleaseAction",
                        "description": "Configuration for deploying the latest release. Can not be used with 'deploy*new*release*action' or 'run*runbook*action'.\n"
                    },
                    "deployNewReleaseAction": {
                        "$ref": "#/types/octopusdeploy:index/ProjectScheduledTriggerDeployNewReleaseAction:ProjectScheduledTriggerDeployNewReleaseAction",
                        "description": "Configuration for deploying a new release. Can not be used with 'deploy*latest*release*action' or 'run*runbook*action'.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the trigger.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "Indicates whether the trigger is disabled.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "onceDailySchedule": {
                        "$ref": "#/types/octopusdeploy:index/ProjectScheduledTriggerOnceDailySchedule:ProjectScheduledTriggerOnceDailySchedule",
                        "description": "The daily schedule for the trigger.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The ID of the project to attach the trigger.\n",
                        "willReplaceOnChanges": true
                    },
                    "runRunbookAction": {
                        "$ref": "#/types/octopusdeploy:index/ProjectScheduledTriggerRunRunbookAction:ProjectScheduledTriggerRunRunbookAction",
                        "description": "Configuration for running a runbook. Can not be used with 'deploy*latest*release*action' or 'deploy*new*release*action'.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID where this trigger's project exists.\n",
                        "willReplaceOnChanges": true
                    },
                    "tenantIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The IDs of the tenants to deploy to.\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "The timezone for the trigger.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/runbookProcess:RunbookProcess": {
            "description": "This resource manages runbook processes in Octopus Deploy.\n",
            "properties": {
                "lastSnapshotId": {
                    "type": "string",
                    "description": "Read only value containing the last snapshot ID.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project ID associated with this runbook process.\n"
                },
                "runbookId": {
                    "type": "string",
                    "description": "The runbook ID associated with this runbook process.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStep:RunbookProcessStep"
                    }
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this runbook process.\n"
                }
            },
            "required": [
                "projectId",
                "runbookId",
                "spaceId",
                "version"
            ],
            "inputProperties": {
                "lastSnapshotId": {
                    "type": "string",
                    "description": "Read only value containing the last snapshot ID.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project ID associated with this runbook process.\n"
                },
                "runbookId": {
                    "type": "string",
                    "description": "The runbook ID associated with this runbook process.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStep:RunbookProcessStep"
                    }
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this runbook process.\n"
                }
            },
            "requiredInputs": [
                "runbookId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RunbookProcess resources.\n",
                "properties": {
                    "lastSnapshotId": {
                        "type": "string",
                        "description": "Read only value containing the last snapshot ID.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project ID associated with this runbook process.\n"
                    },
                    "runbookId": {
                        "type": "string",
                        "description": "The runbook ID associated with this runbook process.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "steps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/RunbookProcessStep:RunbookProcessStep"
                        }
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version number of this runbook process.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/scopedUserRole:ScopedUserRole": {
            "description": "This resource manages scoped user roles in Octopus Deploy.\n\n\u003e **NOTE on Team User Roles and Scoped User Roles:** We currently\nprovides both a standalone Scoped User Role resource\nand a Team resource with `user_roles` blocks defined in-line. At this time you \ncannot use a Team with in-line user_roles in conjunction with any Scoped User Role \nresources. Doing so will cause a conflict of user role settings and will overwrite \nuser roles.\n",
            "properties": {
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "projectGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "projectIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "spaceId": {
                    "type": "string"
                },
                "teamId": {
                    "type": "string"
                },
                "tenantIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userRoleId": {
                    "type": "string"
                }
            },
            "required": [
                "spaceId",
                "teamId",
                "userRoleId"
            ],
            "inputProperties": {
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "projectGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "projectIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "spaceId": {
                    "type": "string"
                },
                "teamId": {
                    "type": "string"
                },
                "tenantIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userRoleId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "spaceId",
                "teamId",
                "userRoleId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ScopedUserRole resources.\n",
                "properties": {
                    "environmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "projectGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "projectIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "spaceId": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    },
                    "tenantIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "userRoleId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/sshConnectionDeploymentTarget:SshConnectionDeploymentTarget": {
            "description": "This resource manages SSH connection deployment targets in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.SshConnectionDeploymentTarget(\"example\", {\n    accountId: \"Accounts-1\",\n    environments: [\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    fingerprint: \"\u003cfingerprint\u003e\",\n    host: \"\u003chost\u003e\",\n    port: 22,\n    roles: [\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.SshConnectionDeploymentTarget(\"example\",\n    account_id=\"Accounts-1\",\n    environments=[\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    fingerprint=\"\u003cfingerprint\u003e\",\n    host=\"\u003chost\u003e\",\n    port=22,\n    roles=[\n        \"Development Team\",\n        \"System Administrators\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.SshConnectionDeploymentTarget(\"example\", new()\n    {\n        AccountId = \"Accounts-1\",\n        Environments = new[]\n        {\n            \"Environments-123\",\n            \"Environment-321\",\n        },\n        Fingerprint = \"\u003cfingerprint\u003e\",\n        Host = \"\u003chost\u003e\",\n        Port = 22,\n        Roles = new[]\n        {\n            \"Development Team\",\n            \"System Administrators\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewSshConnectionDeploymentTarget(ctx, \"example\", \u0026octopusdeploy.SshConnectionDeploymentTargetArgs{\n\t\t\tAccountId: pulumi.String(\"Accounts-1\"),\n\t\t\tEnvironments: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Environments-123\"),\n\t\t\t\tpulumi.String(\"Environment-321\"),\n\t\t\t},\n\t\t\tFingerprint: pulumi.String(\"\u003cfingerprint\u003e\"),\n\t\t\tHost:        pulumi.String(\"\u003chost\u003e\"),\n\t\t\tPort:        pulumi.Int(22),\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Development Team\"),\n\t\t\t\tpulumi.String(\"System Administrators\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.SshConnectionDeploymentTarget;\nimport com.pulumi.octopusdeploy.SshConnectionDeploymentTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new SshConnectionDeploymentTarget(\"example\", SshConnectionDeploymentTargetArgs.builder()        \n            .accountId(\"Accounts-1\")\n            .environments(            \n                \"Environments-123\",\n                \"Environment-321\")\n            .fingerprint(\"\u003cfingerprint\u003e\")\n            .host(\"\u003chost\u003e\")\n            .port(22)\n            .roles(            \n                \"Development Team\",\n                \"System Administrators\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:SshConnectionDeploymentTarget\n    properties:\n      accountId: Accounts-1\n      environments:\n        - Environments-123\n        - Environment-321\n      fingerprint: \u003cfingerprint\u003e\n      host: \u003chost\u003e\n      port: 22\n      roles:\n        - Development Team\n        - System Administrators\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/sshConnectionDeploymentTarget:SshConnectionDeploymentTarget [options] octopusdeploy_ssh_connection_deployment_target.\u003cname\u003e \u003caccount-id\u003e\n```\n\n",
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/SshConnectionDeploymentTargetEndpoint:SshConnectionDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "fingerprint": {
                    "type": "string"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "host": {
                    "type": "string"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "required": [
                "accountId",
                "endpoints",
                "environments",
                "fingerprint",
                "hasLatestCalamari",
                "healthStatus",
                "host",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string"
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/SshConnectionDeploymentTargetEndpoint:SshConnectionDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "fingerprint": {
                    "type": "string"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "host": {
                    "type": "string"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "accountId",
                "environments",
                "fingerprint",
                "host",
                "roles"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SshConnectionDeploymentTarget resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "dotNetCorePlatform": {
                        "type": "string"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/SshConnectionDeploymentTargetEndpoint:SshConnectionDeploymentTargetEndpoint"
                        }
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "fingerprint": {
                        "type": "string"
                    },
                    "hasLatestCalamari": {
                        "type": "boolean"
                    },
                    "healthStatus": {
                        "type": "string",
                        "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "host": {
                        "type": "string"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "isInProcess": {
                        "type": "boolean"
                    },
                    "machinePolicyId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "operatingSystem": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "proxyId": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shellName": {
                        "type": "string"
                    },
                    "shellVersion": {
                        "type": "string"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                    },
                    "statusSummary": {
                        "type": "string",
                        "description": "A summary elaborating on the status of this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "thumbprint": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/sshKeyAccount:SshKeyAccount": {
            "description": "This resource manages SSH key accounts in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.SshKeyAccount(\"example\", {\n    privateKeyFile: \"[private_key_file]\",\n    username: \"[username]\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.SshKeyAccount(\"example\",\n    private_key_file=\"[private_key_file]\",\n    username=\"[username]\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.SshKeyAccount(\"example\", new()\n    {\n        PrivateKeyFile = \"[private_key_file]\",\n        Username = \"[username]\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewSshKeyAccount(ctx, \"example\", \u0026octopusdeploy.SshKeyAccountArgs{\n\t\t\tPrivateKeyFile: pulumi.String(\"[private_key_file]\"),\n\t\t\tUsername:       pulumi.String(\"[username]\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.SshKeyAccount;\nimport com.pulumi.octopusdeploy.SshKeyAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new SshKeyAccount(\"example\", SshKeyAccountArgs.builder()        \n            .privateKeyFile(\"[private_key_file]\")\n            .username(\"[username]\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:SshKeyAccount\n    properties:\n      privateKeyFile: '[private_key_file]'\n      username: '[username]'\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/sshKeyAccount:SshKeyAccount [options] octopusdeploy_ssh_key_account.\u003cname\u003e \u003caccount-id\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this SSH key account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "privateKeyFile": {
                    "type": "string",
                    "secret": true
                },
                "privateKeyPassphrase": {
                    "type": "string",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "required": [
                "environments",
                "name",
                "privateKeyFile",
                "spaceId",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "username"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this SSH key account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "privateKeyFile": {
                    "type": "string",
                    "secret": true
                },
                "privateKeyPassphrase": {
                    "type": "string",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "privateKeyFile",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SshKeyAccount resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this SSH key account.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "privateKeyFile": {
                        "type": "string",
                        "secret": true
                    },
                    "privateKeyPassphrase": {
                        "type": "string",
                        "secret": true
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username associated with this resource.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/staticWorkerPool:StaticWorkerPool": {
            "description": "This resource manages static worker pools in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.StaticWorkerPool(\"example\", {\n    description: \"Description for the static worker pool.\",\n    isDefault: true,\n    sortOrder: 5,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.StaticWorkerPool(\"example\",\n    description=\"Description for the static worker pool.\",\n    is_default=True,\n    sort_order=5)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.StaticWorkerPool(\"example\", new()\n    {\n        Description = \"Description for the static worker pool.\",\n        IsDefault = true,\n        SortOrder = 5,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewStaticWorkerPool(ctx, \"example\", \u0026octopusdeploy.StaticWorkerPoolArgs{\n\t\t\tDescription: pulumi.String(\"Description for the static worker pool.\"),\n\t\t\tIsDefault:   pulumi.Bool(true),\n\t\t\tSortOrder:   pulumi.Int(5),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.StaticWorkerPool;\nimport com.pulumi.octopusdeploy.StaticWorkerPoolArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new StaticWorkerPool(\"example\", StaticWorkerPoolArgs.builder()        \n            .description(\"Description for the static worker pool.\")\n            .isDefault(true)\n            .sortOrder(5)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:StaticWorkerPool\n    properties:\n      description: Description for the static worker pool.\n      isDefault: true\n      sortOrder: 5\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "canAddWorkers": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this static worker pool.\n"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "sortOrder": {
                    "type": "integer",
                    "description": "The order number to sort a dynamic worker pool.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                }
            },
            "required": [
                "canAddWorkers",
                "name",
                "sortOrder",
                "spaceId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this static worker pool.\n"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "sortOrder": {
                    "type": "integer",
                    "description": "The order number to sort a dynamic worker pool.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StaticWorkerPool resources.\n",
                "properties": {
                    "canAddWorkers": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this static worker pool.\n"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "sortOrder": {
                        "type": "integer",
                        "description": "The order number to sort a dynamic worker pool.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/team:Team": {
            "description": "This resource manages teams in Octopus Deploy.\n\n\u003e **NOTE on Team User Roles and Scoped User Roles:** We currently\nprovides both a standalone Scoped User Role resource\nand a Team resource with `user_roles` blocks defined in-line. At this time you \ncannot use a Team with in-line user_roles in conjunction with any Scoped User Role \nresources. Doing so will cause a conflict of user role settings and will overwrite \nuser roles.\n",
            "properties": {
                "canBeDeleted": {
                    "type": "boolean"
                },
                "canBeRenamed": {
                    "type": "boolean"
                },
                "canChangeMembers": {
                    "type": "boolean"
                },
                "canChangeRoles": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The user-friendly description of this team.\n"
                },
                "externalSecurityGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/TeamExternalSecurityGroup:TeamExternalSecurityGroup"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of this team.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space associated with this team.\n"
                },
                "userRoles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/TeamUserRole:TeamUserRole"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of user IDs designated to be members of this team.\n"
                }
            },
            "required": [
                "canBeDeleted",
                "canBeRenamed",
                "canChangeMembers",
                "canChangeRoles",
                "name",
                "spaceId",
                "userRoles",
                "users"
            ],
            "inputProperties": {
                "canBeDeleted": {
                    "type": "boolean"
                },
                "canBeRenamed": {
                    "type": "boolean"
                },
                "canChangeMembers": {
                    "type": "boolean"
                },
                "canChangeRoles": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The user-friendly description of this team.\n"
                },
                "externalSecurityGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/TeamExternalSecurityGroup:TeamExternalSecurityGroup"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of this team.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space associated with this team.\n"
                },
                "userRoles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/TeamUserRole:TeamUserRole"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of user IDs designated to be members of this team.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Team resources.\n",
                "properties": {
                    "canBeDeleted": {
                        "type": "boolean"
                    },
                    "canBeRenamed": {
                        "type": "boolean"
                    },
                    "canChangeMembers": {
                        "type": "boolean"
                    },
                    "canChangeRoles": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string",
                        "description": "The user-friendly description of this team.\n"
                    },
                    "externalSecurityGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/TeamExternalSecurityGroup:TeamExternalSecurityGroup"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this team.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space associated with this team.\n"
                    },
                    "userRoles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/TeamUserRole:TeamUserRole"
                        }
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of user IDs designated to be members of this team.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/tokenAccount:TokenAccount": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.TokenAccount(\"example\", {token: \"[token]\"});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.TokenAccount(\"example\", token=\"[token]\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.TokenAccount(\"example\", new()\n    {\n        Token = \"[token]\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewTokenAccount(ctx, \"example\", \u0026octopusdeploy.TokenAccountArgs{\n\t\t\tToken: pulumi.String(\"[token]\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.TokenAccount;\nimport com.pulumi.octopusdeploy.TokenAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new TokenAccount(\"example\", TokenAccountArgs.builder()        \n            .token(\"[token]\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:TokenAccount\n    properties:\n      token: '[token]'\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/tokenAccount:TokenAccount [options] octopusdeploy_token_account.\u003cname\u003e \u003caccount-id\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this token account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "token": {
                    "type": "string",
                    "description": "The token of this resource.\n",
                    "secret": true
                }
            },
            "required": [
                "environments",
                "name",
                "spaceId",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "token"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this token account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n",
                    "willReplaceOnChanges": true
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "token": {
                    "type": "string",
                    "description": "The token of this resource.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "token"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TokenAccount resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this token account.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "token": {
                        "type": "string",
                        "description": "The token of this resource.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/user:User": {
            "description": "This resource manages users in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.User(\"example\", {\n    displayName: \"Bob Smith\",\n    emailAddress: \"bob.smith@example.com\",\n    identities: [{\n        claims: [\n            {\n                isIdentifyingClaim: true,\n                name: \"email\",\n                value: \"bob.smith@example.com\",\n            },\n            {\n                isIdentifyingClaim: false,\n                name: \"dn\",\n                value: \"Bob Smith\",\n            },\n        ],\n        provider: \"Octopus ID\",\n    }],\n    isActive: true,\n    isService: false,\n    password: \"###########\",\n    username: \"[username]\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.User(\"example\",\n    display_name=\"Bob Smith\",\n    email_address=\"bob.smith@example.com\",\n    identities=[octopusdeploy.UserIdentityArgs(\n        claims=[\n            octopusdeploy.UserIdentityClaimArgs(\n                is_identifying_claim=True,\n                name=\"email\",\n                value=\"bob.smith@example.com\",\n            ),\n            octopusdeploy.UserIdentityClaimArgs(\n                is_identifying_claim=False,\n                name=\"dn\",\n                value=\"Bob Smith\",\n            ),\n        ],\n        provider=\"Octopus ID\",\n    )],\n    is_active=True,\n    is_service=False,\n    password=\"###########\",\n    username=\"[username]\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.User(\"example\", new()\n    {\n        DisplayName = \"Bob Smith\",\n        EmailAddress = \"bob.smith@example.com\",\n        Identities = new[]\n        {\n            new Octopusdeploy.Inputs.UserIdentityArgs\n            {\n                Claims = new[]\n                {\n                    new Octopusdeploy.Inputs.UserIdentityClaimArgs\n                    {\n                        IsIdentifyingClaim = true,\n                        Name = \"email\",\n                        Value = \"bob.smith@example.com\",\n                    },\n                    new Octopusdeploy.Inputs.UserIdentityClaimArgs\n                    {\n                        IsIdentifyingClaim = false,\n                        Name = \"dn\",\n                        Value = \"Bob Smith\",\n                    },\n                },\n                Provider = \"Octopus ID\",\n            },\n        },\n        IsActive = true,\n        IsService = false,\n        Password = \"###########\",\n        Username = \"[username]\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewUser(ctx, \"example\", \u0026octopusdeploy.UserArgs{\n\t\t\tDisplayName:  pulumi.String(\"Bob Smith\"),\n\t\t\tEmailAddress: pulumi.String(\"bob.smith@example.com\"),\n\t\t\tIdentities: octopusdeploy.UserIdentityArray{\n\t\t\t\t\u0026octopusdeploy.UserIdentityArgs{\n\t\t\t\t\tClaims: octopusdeploy.UserIdentityClaimArray{\n\t\t\t\t\t\t\u0026octopusdeploy.UserIdentityClaimArgs{\n\t\t\t\t\t\t\tIsIdentifyingClaim: pulumi.Bool(true),\n\t\t\t\t\t\t\tName:               pulumi.String(\"email\"),\n\t\t\t\t\t\t\tValue:              pulumi.String(\"bob.smith@example.com\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026octopusdeploy.UserIdentityClaimArgs{\n\t\t\t\t\t\t\tIsIdentifyingClaim: pulumi.Bool(false),\n\t\t\t\t\t\t\tName:               pulumi.String(\"dn\"),\n\t\t\t\t\t\t\tValue:              pulumi.String(\"Bob Smith\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tProvider: pulumi.String(\"Octopus ID\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tIsActive:  pulumi.Bool(true),\n\t\t\tIsService: pulumi.Bool(false),\n\t\t\tPassword:  pulumi.String(\"###########\"),\n\t\t\tUsername:  pulumi.String(\"[username]\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.User;\nimport com.pulumi.octopusdeploy.UserArgs;\nimport com.pulumi.octopusdeploy.inputs.UserIdentityArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new User(\"example\", UserArgs.builder()        \n            .displayName(\"Bob Smith\")\n            .emailAddress(\"bob.smith@example.com\")\n            .identities(UserIdentityArgs.builder()\n                .claims(                \n                    UserIdentityClaimArgs.builder()\n                        .isIdentifyingClaim(true)\n                        .name(\"email\")\n                        .value(\"bob.smith@example.com\")\n                        .build(),\n                    UserIdentityClaimArgs.builder()\n                        .isIdentifyingClaim(false)\n                        .name(\"dn\")\n                        .value(\"Bob Smith\")\n                        .build())\n                .provider(\"Octopus ID\")\n                .build())\n            .isActive(true)\n            .isService(false)\n            .password(\"###########\")\n            .username(\"[username]\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:User\n    properties:\n      displayName: Bob Smith\n      emailAddress: bob.smith@example.com\n      identities:\n        - claims:\n            - isIdentifyingClaim: true\n              name: email\n              value: bob.smith@example.com\n            - isIdentifyingClaim: false\n              name: dn\n              value: Bob Smith\n          provider: Octopus ID\n      isActive: true\n      isService: false\n      password: '###########'\n      # get from secure environment/store\n      username: '[username]'\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/user:User [options] octopusdeploy_user.\u003cname\u003e \u003cuser-id\u003e\n```\n\n",
            "properties": {
                "canPasswordBeEdited": {
                    "type": "boolean"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource.\n"
                },
                "emailAddress": {
                    "type": "string",
                    "description": "The email address of this resource.\n"
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/UserIdentity:UserIdentity"
                    }
                },
                "isActive": {
                    "type": "boolean"
                },
                "isRequestor": {
                    "type": "boolean"
                },
                "isService": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "required": [
                "canPasswordBeEdited",
                "displayName",
                "isRequestor",
                "username"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource.\n"
                },
                "emailAddress": {
                    "type": "string",
                    "description": "The email address of this resource.\n"
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/UserIdentity:UserIdentity"
                    }
                },
                "isActive": {
                    "type": "boolean"
                },
                "isService": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "displayName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "canPasswordBeEdited": {
                        "type": "boolean"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource.\n"
                    },
                    "emailAddress": {
                        "type": "string",
                        "description": "The email address of this resource.\n"
                    },
                    "identities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/UserIdentity:UserIdentity"
                        }
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "isRequestor": {
                        "type": "boolean"
                    },
                    "isService": {
                        "type": "boolean"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password associated with this resource.\n",
                        "secret": true
                    },
                    "username": {
                        "type": "string",
                        "description": "The username associated with this resource.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/userRole:UserRole": {
            "description": "This resource manages user roles in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.UserRole(\"example\", {\n    canBeDeleted: true,\n    description: \"Responsible for all development-related operations.\",\n    grantedSpacePermissions: [\n        \"DeploymentCreate\",\n        \"DeploymentDelete\",\n        \"DeploymentView\",\n    ],\n    grantedSystemPermissions: [\"SpaceCreate\"],\n    spacePermissionDescriptions: [\n        \"Delete deployments (restrictable to Environments, Projects, Tenants)\",\n        \"Deploy releases to target environments (restrictable to Environments, Projects, Tenants)\",\n        \"View deployments (restrictable to Environments, Projects, Tenants)\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.UserRole(\"example\",\n    can_be_deleted=True,\n    description=\"Responsible for all development-related operations.\",\n    granted_space_permissions=[\n        \"DeploymentCreate\",\n        \"DeploymentDelete\",\n        \"DeploymentView\",\n    ],\n    granted_system_permissions=[\"SpaceCreate\"],\n    space_permission_descriptions=[\n        \"Delete deployments (restrictable to Environments, Projects, Tenants)\",\n        \"Deploy releases to target environments (restrictable to Environments, Projects, Tenants)\",\n        \"View deployments (restrictable to Environments, Projects, Tenants)\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.UserRole(\"example\", new()\n    {\n        CanBeDeleted = true,\n        Description = \"Responsible for all development-related operations.\",\n        GrantedSpacePermissions = new[]\n        {\n            \"DeploymentCreate\",\n            \"DeploymentDelete\",\n            \"DeploymentView\",\n        },\n        GrantedSystemPermissions = new[]\n        {\n            \"SpaceCreate\",\n        },\n        SpacePermissionDescriptions = new[]\n        {\n            \"Delete deployments (restrictable to Environments, Projects, Tenants)\",\n            \"Deploy releases to target environments (restrictable to Environments, Projects, Tenants)\",\n            \"View deployments (restrictable to Environments, Projects, Tenants)\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewUserRole(ctx, \"example\", \u0026octopusdeploy.UserRoleArgs{\n\t\t\tCanBeDeleted: pulumi.Bool(true),\n\t\t\tDescription:  pulumi.String(\"Responsible for all development-related operations.\"),\n\t\t\tGrantedSpacePermissions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"DeploymentCreate\"),\n\t\t\t\tpulumi.String(\"DeploymentDelete\"),\n\t\t\t\tpulumi.String(\"DeploymentView\"),\n\t\t\t},\n\t\t\tGrantedSystemPermissions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"SpaceCreate\"),\n\t\t\t},\n\t\t\tSpacePermissionDescriptions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Delete deployments (restrictable to Environments, Projects, Tenants)\"),\n\t\t\t\tpulumi.String(\"Deploy releases to target environments (restrictable to Environments, Projects, Tenants)\"),\n\t\t\t\tpulumi.String(\"View deployments (restrictable to Environments, Projects, Tenants)\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.UserRole;\nimport com.pulumi.octopusdeploy.UserRoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new UserRole(\"example\", UserRoleArgs.builder()        \n            .canBeDeleted(true)\n            .description(\"Responsible for all development-related operations.\")\n            .grantedSpacePermissions(            \n                \"DeploymentCreate\",\n                \"DeploymentDelete\",\n                \"DeploymentView\")\n            .grantedSystemPermissions(\"SpaceCreate\")\n            .spacePermissionDescriptions(            \n                \"Delete deployments (restrictable to Environments, Projects, Tenants)\",\n                \"Deploy releases to target environments (restrictable to Environments, Projects, Tenants)\",\n                \"View deployments (restrictable to Environments, Projects, Tenants)\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:UserRole\n    properties:\n      canBeDeleted: true\n      description: Responsible for all development-related operations.\n      grantedSpacePermissions:\n        - DeploymentCreate\n        - DeploymentDelete\n        - DeploymentView\n      grantedSystemPermissions:\n        - SpaceCreate\n      spacePermissionDescriptions:\n        - Delete deployments (restrictable to Environments, Projects, Tenants)\n        - Deploy releases to target environments (restrictable to Environments, Projects, Tenants)\n        - View deployments (restrictable to Environments, Projects, Tenants)\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/userRole:UserRole [options] octopusdeploy_user_role.\u003cname\u003e \u003cuser-role-id\u003e\n```\n\n",
            "properties": {
                "canBeDeleted": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this user role.\n"
                },
                "grantedSpacePermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "grantedSystemPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spacePermissionDescriptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "supportedRestrictions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "systemPermissionDescriptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "canBeDeleted",
                "name",
                "spacePermissionDescriptions",
                "systemPermissionDescriptions"
            ],
            "inputProperties": {
                "canBeDeleted": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this user role.\n"
                },
                "grantedSpacePermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "grantedSystemPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spacePermissionDescriptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "supportedRestrictions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "systemPermissionDescriptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserRole resources.\n",
                "properties": {
                    "canBeDeleted": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this user role.\n"
                    },
                    "grantedSpacePermissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "grantedSystemPermissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "spacePermissionDescriptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "supportedRestrictions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "systemPermissionDescriptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "octopusdeploy:index/getAccounts:getAccounts": {
            "description": "Provides information about existing accounts.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getAccounts({\n    accountType: \"UsernamePassword\",\n    ids: [\n        \"Accounts-123\",\n        \"Accounts-321\",\n    ],\n    partialName: \"Defau\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_accounts(account_type=\"UsernamePassword\",\n    ids=[\n        \"Accounts-123\",\n        \"Accounts-321\",\n    ],\n    partial_name=\"Defau\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetAccounts.Invoke(new()\n    {\n        AccountType = \"UsernamePassword\",\n        Ids = new[]\n        {\n            \"Accounts-123\",\n            \"Accounts-321\",\n        },\n        PartialName = \"Defau\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetAccounts(ctx, \u0026octopusdeploy.GetAccountsArgs{\n\t\t\tAccountType: pulumi.StringRef(\"UsernamePassword\"),\n\t\t\tIds: []string{\n\t\t\t\t\"Accounts-123\",\n\t\t\t\t\"Accounts-321\",\n\t\t\t},\n\t\t\tPartialName: pulumi.StringRef(\"Defau\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetAccountsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getAccounts(GetAccountsArgs.builder()\n            .accountType(\"UsernamePassword\")\n            .ids(            \n                \"Accounts-123\",\n                \"Accounts-321\")\n            .partialName(\"Defau\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getAccounts\n      Arguments:\n        accountType: UsernamePassword\n        ids:\n          - Accounts-123\n          - Accounts-321\n        partialName: Defau\n        skip: 5\n        take: 100\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAccounts.\n",
                "properties": {
                    "accountType": {
                        "type": "string"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAccounts.\n",
                "properties": {
                    "accountType": {
                        "type": "string",
                        "description": "A filter to search by a list of account types.  Valid account types are `AmazonWebServicesAccount`, `AmazonWebServicesRoleAccount`, `AmazonWebServicesOidcAccount`, `AzureServicePrincipal`, `AzureSubscription`, `None`, `SshKeyPair`, `Token`, or `UsernamePassword`.\n"
                    },
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getAccountsAccount:getAccountsAccount"
                        },
                        "description": "A list of accounts that match the filter(s).\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "A Space ID to filter by. Will revert what is specified on the provider if not set.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accounts",
                    "id"
                ]
            }
        },
        "octopusdeploy:index/getAzureCloudServiceDeploymentTargets:getAzureCloudServiceDeploymentTargets": {
            "description": "Provides information about existing Azure cloud service deployment targets.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getAzureCloudServiceDeploymentTargets({\n    healthStatuses: [\n        \"Healthy\",\n        \"Unavailable\",\n    ],\n    ids: [\n        \"Machines-123\",\n        \"Machines-321\",\n    ],\n    partialName: \"Defau\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_azure_cloud_service_deployment_targets(health_statuses=[\n        \"Healthy\",\n        \"Unavailable\",\n    ],\n    ids=[\n        \"Machines-123\",\n        \"Machines-321\",\n    ],\n    partial_name=\"Defau\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetAzureCloudServiceDeploymentTargets.Invoke(new()\n    {\n        HealthStatuses = new[]\n        {\n            \"Healthy\",\n            \"Unavailable\",\n        },\n        Ids = new[]\n        {\n            \"Machines-123\",\n            \"Machines-321\",\n        },\n        PartialName = \"Defau\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetAzureCloudServiceDeploymentTargets(ctx, \u0026octopusdeploy.GetAzureCloudServiceDeploymentTargetsArgs{\n\t\t\tHealthStatuses: []string{\n\t\t\t\t\"Healthy\",\n\t\t\t\t\"Unavailable\",\n\t\t\t},\n\t\t\tIds: []string{\n\t\t\t\t\"Machines-123\",\n\t\t\t\t\"Machines-321\",\n\t\t\t},\n\t\t\tPartialName: pulumi.StringRef(\"Defau\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetAzureCloudServiceDeploymentTargetsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getAzureCloudServiceDeploymentTargets(GetAzureCloudServiceDeploymentTargetsArgs.builder()\n            .healthStatuses(            \n                \"Healthy\",\n                \"Unavailable\")\n            .ids(            \n                \"Machines-123\",\n                \"Machines-321\")\n            .partialName(\"Defau\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getAzureCloudServiceDeploymentTargets\n      Arguments:\n        healthStatuses:\n          - Healthy\n          - Unavailable\n        ids:\n          - Machines-123\n          - Machines-321\n        partialName: Defau\n        skip: 5\n        take: 100\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAzureCloudServiceDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "thumbprint": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAzureCloudServiceDeploymentTargets.\n",
                "properties": {
                    "azureCloudServiceDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTarget:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTarget"
                        },
                        "description": "A list of Azure cloud service deployment targets that match the filter(s).\n"
                    },
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object",
                "required": [
                    "azureCloudServiceDeploymentTargets",
                    "id",
                    "spaceId"
                ]
            }
        },
        "octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargets:getAzureServiceFabricClusterDeploymentTargets": {
            "description": "Provides information about existing Azure service fabric cluster deployment targets.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getAzureServiceFabricClusterDeploymentTargets({\n    healthStatuses: [\n        \"Healthy\",\n        \"Unavailable\",\n    ],\n    ids: [\n        \"Machines-123\",\n        \"Machines-321\",\n    ],\n    partialName: \"Defau\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_azure_service_fabric_cluster_deployment_targets(health_statuses=[\n        \"Healthy\",\n        \"Unavailable\",\n    ],\n    ids=[\n        \"Machines-123\",\n        \"Machines-321\",\n    ],\n    partial_name=\"Defau\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetAzureServiceFabricClusterDeploymentTargets.Invoke(new()\n    {\n        HealthStatuses = new[]\n        {\n            \"Healthy\",\n            \"Unavailable\",\n        },\n        Ids = new[]\n        {\n            \"Machines-123\",\n            \"Machines-321\",\n        },\n        PartialName = \"Defau\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetAzureServiceFabricClusterDeploymentTargets(ctx, \u0026octopusdeploy.GetAzureServiceFabricClusterDeploymentTargetsArgs{\n\t\t\tHealthStatuses: []string{\n\t\t\t\t\"Healthy\",\n\t\t\t\t\"Unavailable\",\n\t\t\t},\n\t\t\tIds: []string{\n\t\t\t\t\"Machines-123\",\n\t\t\t\t\"Machines-321\",\n\t\t\t},\n\t\t\tPartialName: pulumi.StringRef(\"Defau\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetAzureServiceFabricClusterDeploymentTargetsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getAzureServiceFabricClusterDeploymentTargets(GetAzureServiceFabricClusterDeploymentTargetsArgs.builder()\n            .healthStatuses(            \n                \"Healthy\",\n                \"Unavailable\")\n            .ids(            \n                \"Machines-123\",\n                \"Machines-321\")\n            .partialName(\"Defau\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getAzureServiceFabricClusterDeploymentTargets\n      Arguments:\n        healthStatuses:\n          - Healthy\n          - Unavailable\n        ids:\n          - Machines-123\n          - Machines-321\n        partialName: Defau\n        skip: 5\n        take: 100\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAzureServiceFabricClusterDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "thumbprint": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAzureServiceFabricClusterDeploymentTargets.\n",
                "properties": {
                    "azureServiceFabricClusterDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTarget:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTarget"
                        },
                        "description": "A list of Azure service fabric cluster deployment targets that match the filter(s).\n"
                    },
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object",
                "required": [
                    "azureServiceFabricClusterDeploymentTargets",
                    "id",
                    "spaceId"
                ]
            }
        },
        "octopusdeploy:index/getAzureWebAppDeploymentTargets:getAzureWebAppDeploymentTargets": {
            "description": "Provides information about existing Azure web app deployment targets.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getAzureWebAppDeploymentTargets({\n    healthStatuses: [\n        \"Healthy\",\n        \"Unavailable\",\n    ],\n    ids: [\n        \"Machines-123\",\n        \"Machines-321\",\n    ],\n    partialName: \"Defau\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_azure_web_app_deployment_targets(health_statuses=[\n        \"Healthy\",\n        \"Unavailable\",\n    ],\n    ids=[\n        \"Machines-123\",\n        \"Machines-321\",\n    ],\n    partial_name=\"Defau\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetAzureWebAppDeploymentTargets.Invoke(new()\n    {\n        HealthStatuses = new[]\n        {\n            \"Healthy\",\n            \"Unavailable\",\n        },\n        Ids = new[]\n        {\n            \"Machines-123\",\n            \"Machines-321\",\n        },\n        PartialName = \"Defau\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetAzureWebAppDeploymentTargets(ctx, \u0026octopusdeploy.GetAzureWebAppDeploymentTargetsArgs{\n\t\t\tHealthStatuses: []string{\n\t\t\t\t\"Healthy\",\n\t\t\t\t\"Unavailable\",\n\t\t\t},\n\t\t\tIds: []string{\n\t\t\t\t\"Machines-123\",\n\t\t\t\t\"Machines-321\",\n\t\t\t},\n\t\t\tPartialName: pulumi.StringRef(\"Defau\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetAzureWebAppDeploymentTargetsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getAzureWebAppDeploymentTargets(GetAzureWebAppDeploymentTargetsArgs.builder()\n            .healthStatuses(            \n                \"Healthy\",\n                \"Unavailable\")\n            .ids(            \n                \"Machines-123\",\n                \"Machines-321\")\n            .partialName(\"Defau\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getAzureWebAppDeploymentTargets\n      Arguments:\n        healthStatuses:\n          - Healthy\n          - Unavailable\n        ids:\n          - Machines-123\n          - Machines-321\n        partialName: Defau\n        skip: 5\n        take: 100\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAzureWebAppDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "thumbprint": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAzureWebAppDeploymentTargets.\n",
                "properties": {
                    "azureWebAppDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTarget:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTarget"
                        },
                        "description": "A list of Azure web app deployment targets that match the filter(s).\n"
                    },
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object",
                "required": [
                    "azureWebAppDeploymentTargets",
                    "id",
                    "spaceId"
                ]
            }
        },
        "octopusdeploy:index/getCertificates:getCertificates": {
            "description": "Provides information about existing certificates.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getCertificates({\n    archived: \"false\",\n    ids: [\n        \"Certificates-123\",\n        \"Certificates-321\",\n    ],\n    partialName: \"Defau\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_certificates(archived=\"false\",\n    ids=[\n        \"Certificates-123\",\n        \"Certificates-321\",\n    ],\n    partial_name=\"Defau\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetCertificates.Invoke(new()\n    {\n        Archived = \"false\",\n        Ids = new[]\n        {\n            \"Certificates-123\",\n            \"Certificates-321\",\n        },\n        PartialName = \"Defau\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetCertificates(ctx, \u0026octopusdeploy.GetCertificatesArgs{\n\t\t\tArchived: pulumi.StringRef(\"false\"),\n\t\t\tIds: []string{\n\t\t\t\t\"Certificates-123\",\n\t\t\t\t\"Certificates-321\",\n\t\t\t},\n\t\t\tPartialName: pulumi.StringRef(\"Defau\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetCertificatesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getCertificates(GetCertificatesArgs.builder()\n            .archived(false)\n            .ids(            \n                \"Certificates-123\",\n                \"Certificates-321\")\n            .partialName(\"Defau\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getCertificates\n      Arguments:\n        archived: false\n        ids:\n          - Certificates-123\n          - Certificates-321\n        partialName: Defau\n        skip: 5\n        take: 100\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCertificates.\n",
                "properties": {
                    "archived": {
                        "type": "string"
                    },
                    "firstResult": {
                        "type": "string",
                        "description": "A filter to define the first result.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "orderBy": {
                        "type": "string",
                        "description": "A filter used to order the search results.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "search": {
                        "type": "string",
                        "description": "A filter of terms used the search operation.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "A filter to search by a tenant ID.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCertificates.\n",
                "properties": {
                    "archived": {
                        "type": "string",
                        "description": "A filter to search for resources that have been archived.\n"
                    },
                    "certificates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getCertificatesCertificate:getCertificatesCertificate"
                        },
                        "description": "A list of certificates that match the filter(s).\n"
                    },
                    "firstResult": {
                        "type": "string",
                        "description": "A filter to define the first result.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "orderBy": {
                        "type": "string",
                        "description": "A filter used to order the search results.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "search": {
                        "type": "string",
                        "description": "A filter of terms used the search operation.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "A filter to search by a tenant ID.\n"
                    }
                },
                "type": "object",
                "required": [
                    "certificates",
                    "id",
                    "spaceId"
                ]
            }
        },
        "octopusdeploy:index/getChannels:getChannels": {
            "description": "Provides information about existing channels.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getChannels({\n    ids: [\n        \"Channels-123\",\n        \"Channels-321\",\n    ],\n    partialName: \"Defau\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_channels(ids=[\n        \"Channels-123\",\n        \"Channels-321\",\n    ],\n    partial_name=\"Defau\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetChannels.Invoke(new()\n    {\n        Ids = new[]\n        {\n            \"Channels-123\",\n            \"Channels-321\",\n        },\n        PartialName = \"Defau\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetChannels(ctx, \u0026octopusdeploy.GetChannelsArgs{\n\t\t\tIds: []string{\n\t\t\t\t\"Channels-123\",\n\t\t\t\t\"Channels-321\",\n\t\t\t},\n\t\t\tPartialName: pulumi.StringRef(\"Defau\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetChannelsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getChannels(GetChannelsArgs.builder()\n            .ids(            \n                \"Channels-123\",\n                \"Channels-321\")\n            .partialName(\"Defau\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getChannels\n      Arguments:\n        ids:\n          - Channels-123\n          - Channels-321\n        partialName: Defau\n        skip: 5\n        take: 100\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getChannels.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getChannels.\n",
                "properties": {
                    "channels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getChannelsChannel:getChannelsChannel"
                        },
                        "description": "A channel that matches the specified filter(s).\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "channels",
                    "spaceId",
                    "id"
                ]
            }
        },
        "octopusdeploy:index/getCloudRegionDeploymentTargets:getCloudRegionDeploymentTargets": {
            "description": "Provides information about existing cloud region deployment targets.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getCloudRegionDeploymentTargets({\n    environments: [\n        \"Environments-123\",\n        \"Environments-321\",\n    ],\n    ids: [\"Machines-123\"],\n    name: \"Azure North America\",\n    partialName: \"Azure Nor\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_cloud_region_deployment_targets(environments=[\n        \"Environments-123\",\n        \"Environments-321\",\n    ],\n    ids=[\"Machines-123\"],\n    name=\"Azure North America\",\n    partial_name=\"Azure Nor\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetCloudRegionDeploymentTargets.Invoke(new()\n    {\n        Environments = new[]\n        {\n            \"Environments-123\",\n            \"Environments-321\",\n        },\n        Ids = new[]\n        {\n            \"Machines-123\",\n        },\n        Name = \"Azure North America\",\n        PartialName = \"Azure Nor\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetCloudRegionDeploymentTargets(ctx, \u0026octopusdeploy.GetCloudRegionDeploymentTargetsArgs{\n\t\t\tEnvironments: []string{\n\t\t\t\t\"Environments-123\",\n\t\t\t\t\"Environments-321\",\n\t\t\t},\n\t\t\tIds: []string{\n\t\t\t\t\"Machines-123\",\n\t\t\t},\n\t\t\tName:        pulumi.StringRef(\"Azure North America\"),\n\t\t\tPartialName: pulumi.StringRef(\"Azure Nor\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetCloudRegionDeploymentTargetsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getCloudRegionDeploymentTargets(GetCloudRegionDeploymentTargetsArgs.builder()\n            .environments(            \n                \"Environments-123\",\n                \"Environments-321\")\n            .ids(\"Machines-123\")\n            .name(\"Azure North America\")\n            .partialName(\"Azure Nor\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getCloudRegionDeploymentTargets\n      Arguments:\n        environments:\n          - Environments-123\n          - Environments-321\n        ids:\n          - Machines-123\n        name: Azure North America\n        partialName: Azure Nor\n        skip: 5\n        take: 100\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudRegionDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "thumbprint": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCloudRegionDeploymentTargets.\n",
                "properties": {
                    "cloudRegionDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getCloudRegionDeploymentTargetsCloudRegionDeploymentTarget:getCloudRegionDeploymentTargetsCloudRegionDeploymentTarget"
                        },
                        "description": "A list of cloud region deployment targets that match the filter(s).\n"
                    },
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object",
                "required": [
                    "cloudRegionDeploymentTargets",
                    "id",
                    "spaceId"
                ]
            }
        },
        "octopusdeploy:index/getDeploymentTargets:getDeploymentTargets": {
            "description": "Provides information about existing deployment targets.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDeploymentTargets.\n",
                "properties": {
                    "communicationStyles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of communication styles. Valid communication styles are `AzureCloudService`, `AzureServiceFabricCluster`, `AzureWebApp`, `Ftp`, `Kubernetes`, `None`, `OfflineDrop`, `Ssh`, `TentacleActive`, or `TentaclePassive`.\n"
                    },
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "thumbprint": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDeploymentTargets.\n",
                "properties": {
                    "communicationStyles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of communication styles. Valid communication styles are `AzureCloudService`, `AzureServiceFabricCluster`, `AzureWebApp`, `Ftp`, `Kubernetes`, `None`, `OfflineDrop`, `Ssh`, `TentacleActive`, or `TentaclePassive`.\n"
                    },
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "deploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getDeploymentTargetsDeploymentTarget:getDeploymentTargetsDeploymentTarget"
                        },
                        "description": "A list of deployment targets that match the filter(s).\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object",
                "required": [
                    "deploymentTargets",
                    "spaceId",
                    "id"
                ]
            }
        },
        "octopusdeploy:index/getKubernetesAgentDeploymentTargets:getKubernetesAgentDeploymentTargets": {
            "description": "Provides information about existing kubernetes agent deployment targets.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst kubernetesAgentDeploymentTargets = octopusdeploy.getKubernetesAgentDeploymentTargets({\n    deploymentId: \"Deployments-123\",\n    environments: [\n        \"Environments-123\",\n        \"Environments-321\",\n    ],\n    healthStatuses: [\"HasWarnings\"],\n    ids: [\n        \"Machines-123\",\n        \"Machines-321\",\n    ],\n    isDisabled: false,\n    name: \"Kubernetes Agent\",\n    partialName: \"Kubernetes Age\",\n    roles: [\n        \"Roles-123\",\n        \"Roles-321\",\n    ],\n    shellNames: [],\n    skip: 5,\n    take: 100,\n    tenantTags: [\"TagSet1/Tag\"],\n    tenants: [\"Tenants-123\"],\n    thumbprint: \"96203ED84246201C26A2F4360D7CBC36AC1D232D\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nkubernetes_agent_deployment_targets = octopusdeploy.get_kubernetes_agent_deployment_targets(deployment_id=\"Deployments-123\",\n    environments=[\n        \"Environments-123\",\n        \"Environments-321\",\n    ],\n    health_statuses=[\"HasWarnings\"],\n    ids=[\n        \"Machines-123\",\n        \"Machines-321\",\n    ],\n    is_disabled=False,\n    name=\"Kubernetes Agent\",\n    partial_name=\"Kubernetes Age\",\n    roles=[\n        \"Roles-123\",\n        \"Roles-321\",\n    ],\n    shell_names=[],\n    skip=5,\n    take=100,\n    tenant_tags=[\"TagSet1/Tag\"],\n    tenants=[\"Tenants-123\"],\n    thumbprint=\"96203ED84246201C26A2F4360D7CBC36AC1D232D\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var kubernetesAgentDeploymentTargets = Octopusdeploy.GetKubernetesAgentDeploymentTargets.Invoke(new()\n    {\n        DeploymentId = \"Deployments-123\",\n        Environments = new[]\n        {\n            \"Environments-123\",\n            \"Environments-321\",\n        },\n        HealthStatuses = new[]\n        {\n            \"HasWarnings\",\n        },\n        Ids = new[]\n        {\n            \"Machines-123\",\n            \"Machines-321\",\n        },\n        IsDisabled = false,\n        Name = \"Kubernetes Agent\",\n        PartialName = \"Kubernetes Age\",\n        Roles = new[]\n        {\n            \"Roles-123\",\n            \"Roles-321\",\n        },\n        ShellNames = new() { },\n        Skip = 5,\n        Take = 100,\n        TenantTags = new[]\n        {\n            \"TagSet1/Tag\",\n        },\n        Tenants = new[]\n        {\n            \"Tenants-123\",\n        },\n        Thumbprint = \"96203ED84246201C26A2F4360D7CBC36AC1D232D\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetKubernetesAgentDeploymentTargets(ctx, \u0026octopusdeploy.GetKubernetesAgentDeploymentTargetsArgs{\n\t\t\tDeploymentId: pulumi.StringRef(\"Deployments-123\"),\n\t\t\tEnvironments: []string{\n\t\t\t\t\"Environments-123\",\n\t\t\t\t\"Environments-321\",\n\t\t\t},\n\t\t\tHealthStatuses: []string{\n\t\t\t\t\"HasWarnings\",\n\t\t\t},\n\t\t\tIds: []string{\n\t\t\t\t\"Machines-123\",\n\t\t\t\t\"Machines-321\",\n\t\t\t},\n\t\t\tIsDisabled:  pulumi.BoolRef(false),\n\t\t\tName:        pulumi.StringRef(\"Kubernetes Agent\"),\n\t\t\tPartialName: pulumi.StringRef(\"Kubernetes Age\"),\n\t\t\tRoles: []string{\n\t\t\t\t\"Roles-123\",\n\t\t\t\t\"Roles-321\",\n\t\t\t},\n\t\t\tShellNames: []interface{}{},\n\t\t\tSkip:       pulumi.IntRef(5),\n\t\t\tTake:       pulumi.IntRef(100),\n\t\t\tTenantTags: []string{\n\t\t\t\t\"TagSet1/Tag\",\n\t\t\t},\n\t\t\tTenants: []string{\n\t\t\t\t\"Tenants-123\",\n\t\t\t},\n\t\t\tThumbprint: pulumi.StringRef(\"96203ED84246201C26A2F4360D7CBC36AC1D232D\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetKubernetesAgentDeploymentTargetsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var kubernetesAgentDeploymentTargets = OctopusdeployFunctions.getKubernetesAgentDeploymentTargets(GetKubernetesAgentDeploymentTargetsArgs.builder()\n            .deploymentId(\"Deployments-123\")\n            .environments(            \n                \"Environments-123\",\n                \"Environments-321\")\n            .healthStatuses(\"HasWarnings\")\n            .ids(            \n                \"Machines-123\",\n                \"Machines-321\")\n            .isDisabled(false)\n            .name(\"Kubernetes Agent\")\n            .partialName(\"Kubernetes Age\")\n            .roles(            \n                \"Roles-123\",\n                \"Roles-321\")\n            .shellNames()\n            .skip(5)\n            .take(100)\n            .tenantTags(\"TagSet1/Tag\")\n            .tenants(\"Tenants-123\")\n            .thumbprint(\"96203ED84246201C26A2F4360D7CBC36AC1D232D\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  kubernetesAgentDeploymentTargets:\n    fn::invoke:\n      Function: octopusdeploy:getKubernetesAgentDeploymentTargets\n      Arguments:\n        deploymentId: Deployments-123\n        environments:\n          - Environments-123\n          - Environments-321\n        healthStatuses:\n          - HasWarnings\n        ids:\n          - Machines-123\n          - Machines-321\n        isDisabled: false\n        name: Kubernetes Agent\n        partialName: Kubernetes Age\n        roles:\n          - Roles-123\n          - Roles-321\n        shellNames: []\n        skip: 5\n        take: 100\n        tenantTags:\n          - TagSet1/Tag\n        tenants:\n          - Tenants-123\n        thumbprint: 96203ED84246201C26A2F4360D7CBC36AC1D232D\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKubernetesAgentDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "thumbprint": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getKubernetesAgentDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "kubernetesAgentDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getKubernetesAgentDeploymentTargetsKubernetesAgentDeploymentTarget:getKubernetesAgentDeploymentTargetsKubernetesAgentDeploymentTarget"
                        },
                        "description": "A list of kubernetes agent deployment targets that match the filter(s).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "kubernetesAgentDeploymentTargets",
                    "spaceId"
                ]
            }
        },
        "octopusdeploy:index/getKubernetesAgentWorkers:getKubernetesAgentWorkers": {
            "description": "Provides information about existing kubernetes agent workers.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKubernetesAgentWorkers.\n",
                "properties": {
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "thumbprint": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getKubernetesAgentWorkers.\n",
                "properties": {
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "kubernetesAgentWorkers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getKubernetesAgentWorkersKubernetesAgentWorker:getKubernetesAgentWorkersKubernetesAgentWorker"
                        },
                        "description": "A list of kubernetes agent workers that match the filter(s).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "kubernetesAgentWorkers",
                    "spaceId"
                ]
            }
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargets:getKubernetesClusterDeploymentTargets": {
            "description": "Provides information about existing Kubernetes cluster deployment targets.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKubernetesClusterDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "thumbprint": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getKubernetesClusterDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "kubernetesClusterDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTarget:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTarget"
                        },
                        "description": "A list of Kubernetes cluster deployment targets that match the filter(s).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "kubernetesClusterDeploymentTargets",
                    "spaceId"
                ]
            }
        },
        "octopusdeploy:index/getListeningTentacleDeploymentTargets:getListeningTentacleDeploymentTargets": {
            "description": "Provides information about existing listening tentacle deployment targets.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst listeningTentacleDeploymentTargets = octopusdeploy.getListeningTentacleDeploymentTargets({});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nlistening_tentacle_deployment_targets = octopusdeploy.get_listening_tentacle_deployment_targets()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var listeningTentacleDeploymentTargets = Octopusdeploy.GetListeningTentacleDeploymentTargets.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetListeningTentacleDeploymentTargets(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetListeningTentacleDeploymentTargetsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var listeningTentacleDeploymentTargets = OctopusdeployFunctions.getListeningTentacleDeploymentTargets();\n\n    }\n}\n```\n```yaml\nvariables:\n  listeningTentacleDeploymentTargets:\n    fn::invoke:\n      Function: octopusdeploy:getListeningTentacleDeploymentTargets\n      Arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getListeningTentacleDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "thumbprint": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getListeningTentacleDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "listeningTentacleDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getListeningTentacleDeploymentTargetsListeningTentacleDeploymentTarget:getListeningTentacleDeploymentTargetsListeningTentacleDeploymentTarget"
                        },
                        "description": "A list of listening tentacle deployment targets that match the filter(s).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "listeningTentacleDeploymentTargets",
                    "spaceId"
                ]
            }
        },
        "octopusdeploy:index/getMachine:getMachine": {
            "inputs": {
                "description": "A collection of arguments for invoking getMachine.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMachine.\n",
                "properties": {
                    "endpointCommunicationstyle": {
                        "type": "string"
                    },
                    "endpointId": {
                        "type": "string"
                    },
                    "endpointProxyid": {
                        "type": "string"
                    },
                    "endpointTentacleversiondetailsUpgradelocked": {
                        "type": "string"
                    },
                    "endpointTentacleversiondetailsUpgraderequired": {
                        "type": "string"
                    },
                    "endpointTentacleversiondetailsUpgradesuggested": {
                        "type": "string"
                    },
                    "endpointTentacleversiondetailsVersion": {
                        "type": "string"
                    },
                    "endpointThumbprint": {
                        "type": "string"
                    },
                    "endpointUri": {
                        "type": "string"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "haslatestcalamari": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isdisabled": {
                        "type": "boolean"
                    },
                    "isinprocess": {
                        "type": "boolean"
                    },
                    "machinepolicy": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "statussummary": {
                        "type": "string"
                    },
                    "tenanteddeploymentparticipation": {
                        "type": "string"
                    },
                    "tenantids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tenanttags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "endpointCommunicationstyle",
                    "endpointId",
                    "endpointProxyid",
                    "endpointTentacleversiondetailsUpgradelocked",
                    "endpointTentacleversiondetailsUpgraderequired",
                    "endpointTentacleversiondetailsUpgradesuggested",
                    "endpointTentacleversiondetailsVersion",
                    "endpointThumbprint",
                    "endpointUri",
                    "environments",
                    "haslatestcalamari",
                    "isdisabled",
                    "isinprocess",
                    "machinepolicy",
                    "name",
                    "roles",
                    "status",
                    "statussummary",
                    "tenanteddeploymentparticipation",
                    "tenantids",
                    "tenanttags",
                    "id"
                ]
            }
        },
        "octopusdeploy:index/getMachinePolicies:getMachinePolicies": {
            "description": "Provides information about existing machine policies.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getMachinePolicies.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMachinePolicies.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "machinePolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getMachinePoliciesMachinePolicy:getMachinePoliciesMachinePolicy"
                        },
                        "description": "A list of machine policies that match the filter(s).\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "machinePolicies",
                    "spaceId",
                    "id"
                ]
            }
        },
        "octopusdeploy:index/getOfflinePackageDropDeploymentTargets:getOfflinePackageDropDeploymentTargets": {
            "description": "Provides information about existing offline package drop deployment targets.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOfflinePackageDropDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "thumbprint": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getOfflinePackageDropDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "offlinePackageDropDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTarget:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTarget"
                        },
                        "description": "A list of offline package drop deployment targets that match the filter(s).\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "offlinePackageDropDeploymentTargets",
                    "spaceId"
                ]
            }
        },
        "octopusdeploy:index/getPollingTentacleDeploymentTargets:getPollingTentacleDeploymentTargets": {
            "description": "Provides information about existing polling tentacle deployment targets.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPollingTentacleDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "thumbprint": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPollingTentacleDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "pollingTentacleDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTarget:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTarget"
                        },
                        "description": "A list of polling tentacle deployment targets that match the filter(s).\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "pollingTentacleDeploymentTargets",
                    "spaceId"
                ]
            }
        },
        "octopusdeploy:index/getSshConnectionDeploymentTargets:getSshConnectionDeploymentTargets": {
            "description": "Provides information about existing SSH connection deployment targets.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSshConnectionDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "thumbprint": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSshConnectionDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "sshConnectionDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTarget:getSshConnectionDeploymentTargetsSshConnectionDeploymentTarget"
                        },
                        "description": "A list of SSH connection deployment targets that match the filter(s).\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "spaceId",
                    "sshConnectionDeploymentTargets"
                ]
            }
        },
        "octopusdeploy:index/getTeams:getTeams": {
            "description": "Provides information about existing users.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTeams.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "includeSystem": {
                        "type": "boolean",
                        "description": "A filter to include system teams.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaces": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of space IDs.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTeams.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "includeSystem": {
                        "type": "boolean",
                        "description": "A filter to include system teams.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaces": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of space IDs.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "teams": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getTeamsTeam:getTeamsTeam"
                        },
                        "description": "A list of teams that match the filter(s).\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "teams"
                ]
            }
        },
        "octopusdeploy:index/getUserRoles:getUserRoles": {
            "description": "Provides information about existing user roles.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getUserRoles({\n    ids: [\n        \"UserRoles-123\",\n        \"UserRoles-321\",\n    ],\n    partialName: \"Administra\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_user_roles(ids=[\n        \"UserRoles-123\",\n        \"UserRoles-321\",\n    ],\n    partial_name=\"Administra\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetUserRoles.Invoke(new()\n    {\n        Ids = new[]\n        {\n            \"UserRoles-123\",\n            \"UserRoles-321\",\n        },\n        PartialName = \"Administra\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetUserRoles(ctx, \u0026octopusdeploy.GetUserRolesArgs{\n\t\t\tIds: []string{\n\t\t\t\t\"UserRoles-123\",\n\t\t\t\t\"UserRoles-321\",\n\t\t\t},\n\t\t\tPartialName: pulumi.StringRef(\"Administra\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetUserRolesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getUserRoles(GetUserRolesArgs.builder()\n            .ids(            \n                \"UserRoles-123\",\n                \"UserRoles-321\")\n            .partialName(\"Administra\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getUserRoles\n      Arguments:\n        ids:\n          - UserRoles-123\n          - UserRoles-321\n        partialName: Administra\n        skip: 5\n        take: 100\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUserRoles.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "A Space ID to filter by. Will revert what is specified on the provider if not set.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUserRoles.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "A Space ID to filter by. Will revert what is specified on the provider if not set.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "userRoles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getUserRolesUserRole:getUserRolesUserRole"
                        },
                        "description": "A list of user roles that match the filter(s).\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "userRoles"
                ]
            }
        },
        "octopusdeploy:index/getUsers:getUsers": {
            "description": "Provides information about existing users.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getUsers({\n    ids: [\n        \"Users-123\",\n        \"Users-321\",\n    ],\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_users(ids=[\n        \"Users-123\",\n        \"Users-321\",\n    ],\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetUsers.Invoke(new()\n    {\n        Ids = new[]\n        {\n            \"Users-123\",\n            \"Users-321\",\n        },\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetUsers(ctx, \u0026octopusdeploy.GetUsersArgs{\n\t\t\tIds: []string{\n\t\t\t\t\"Users-123\",\n\t\t\t\t\"Users-321\",\n\t\t\t},\n\t\t\tSkip: pulumi.IntRef(5),\n\t\t\tTake: pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetUsersArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getUsers(GetUsersArgs.builder()\n            .ids(            \n                \"Users-123\",\n                \"Users-321\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getUsers\n      Arguments:\n        ids:\n          - Users-123\n          - Users-321\n        skip: 5\n        take: 100\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUsers.\n",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "A filter with which to search.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "A Space ID to filter by. Will revert what is specified on the provider if not set.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUsers.\n",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "A filter with which to search.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "A Space ID to filter by. Will revert what is specified on the provider if not set.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getUsersUser:getUsersUser"
                        },
                        "description": "A list of users that match the filter(s).\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "users"
                ]
            }
        },
        "octopusdeploy:index/getWorkerPools:getWorkerPools": {
            "description": "Provides information about existing worker pools.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getWorkerPools.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getWorkerPools.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "workerPools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getWorkerPoolsWorkerPool:getWorkerPoolsWorkerPool"
                        },
                        "description": "A list of worker pools that match the filter(s).\n"
                    }
                },
                "type": "object",
                "required": [
                    "spaceId",
                    "workerPools",
                    "id"
                ]
            }
        }
    }
}