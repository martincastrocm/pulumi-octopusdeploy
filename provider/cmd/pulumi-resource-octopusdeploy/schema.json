{
    "name": "octopusdeploy",
    "displayName": "Octopus Deploy",
    "description": "A Pulumi package for creating and managing octopusdeploy resources.",
    "keywords": [
        "martincastrocm",
        "octopusdeploy",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`octopusdeploy` Terraform Provider](https://github.com/OctopusDeploy/terraform-provider-octopusdeploy).",
    "repository": "https://github.com/pulumi/pulumi-octopus",
    "pluginDownloadURL": "https://github.com/OctopusDeploy/terraform-provider-octopusdeploy/releases",
    "publisher": "martincastrocm",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20"
        },
        "go": {
            "importBasePath": "github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageDescription": "A Pulumi package for creating and managing octopusdeploy resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/OctopusDeploy/terraform-provider-octopusdeploy)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-octopusdeploy` repo](https://github.com/pulumi/pulumi-octopus/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-octopusdeploy` repo](https://github.com/OctopusDeploy/terraform-provider-octopusdeploy/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/OctopusDeploy/terraform-provider-octopusdeploy)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-octopusdeploy` repo](https://github.com/pulumi/pulumi-octopus/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-octopusdeploy` repo](https://github.com/OctopusDeploy/terraform-provider-octopusdeploy/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "address": {
                "type": "string",
                "description": "The endpoint of the Octopus REST API\n"
            },
            "apiKey": {
                "type": "string",
                "description": "The API key to use with the Octopus REST API\n"
            },
            "spaceId": {
                "type": "string",
                "description": "The space ID to target\n"
            }
        }
    },
    "types": {
        "octopusdeploy:index/EnvironmentJiraExtensionSetting:EnvironmentJiraExtensionSetting": {
            "properties": {
                "environmentType": {
                    "type": "string",
                    "description": "The Jira environment type of this Octopus deployment environment. Valid values are `\"development\"`, `\"production\"`, `\"staging\"`, `\"testing\"`, `\"unmapped\"`.\n"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/EnvironmentJiraServiceManagementExtensionSetting:EnvironmentJiraServiceManagementExtensionSetting": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether or not this extension is enabled for this project.\n"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/EnvironmentServicenowExtensionSetting:EnvironmentServicenowExtensionSetting": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether or not this extension is enabled for this project.\n"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/LibraryVariableSetTemplate:LibraryVariableSetTemplate": {
            "properties": {
                "defaultValue": {
                    "type": "string",
                    "description": "A default value for the parameter, if applicable. This can be a hard-coded value or a variable reference.\n"
                },
                "displaySettings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The display settings for the parameter.\n"
                },
                "helpText": {
                    "type": "string",
                    "description": "The help presented alongside the parameter input.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label shown beside the parameter when presented in the deployment process. Example: `Server name`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the variable set by the parameter. The name can contain letters, digits, dashes and periods. Example: `ServerName`\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "defaultValue",
                        "helpText",
                        "id",
                        "name"
                    ]
                }
            }
        },
        "octopusdeploy:index/LifecyclePhase:LifecyclePhase": {
            "properties": {
                "automaticDeploymentTargets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment IDs in this phase that a release is automatically deployed to when it is eligible for this phase\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isOptionalPhase": {
                    "type": "boolean",
                    "description": "If false a release must be deployed to this phase before it can be deployed to the next phase.\n"
                },
                "minimumEnvironmentsBeforePromotion": {
                    "type": "integer",
                    "description": "The number of units required before a release can enter the next phase. If 0, all environments are required.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "optionalDeploymentTargets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment IDs in this phase that a release can be deployed to, but is not automatically deployed to\n"
                },
                "releaseRetentionPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/LifecyclePhaseReleaseRetentionPolicy:LifecyclePhaseReleaseRetentionPolicy"
                    },
                    "description": "Defines the retention policy for releases or tentacles.\n"
                },
                "tentacleRetentionPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/LifecyclePhaseTentacleRetentionPolicy:LifecyclePhaseTentacleRetentionPolicy"
                    },
                    "description": "Defines the retention policy for releases or tentacles.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "automaticDeploymentTargets",
                        "id",
                        "isOptionalPhase",
                        "minimumEnvironmentsBeforePromotion",
                        "name",
                        "optionalDeploymentTargets"
                    ]
                }
            }
        },
        "octopusdeploy:index/LifecyclePhaseReleaseRetentionPolicy:LifecyclePhaseReleaseRetentionPolicy": {
            "properties": {
                "quantityToKeep": {
                    "type": "integer",
                    "description": "The number of days/releases to keep. The default value is 30. If 0 then all are kept.\n"
                },
                "shouldKeepForever": {
                    "type": "boolean",
                    "description": "Indicates if items should never be deleted. The default value is false.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit of quantity to keep. Valid units are Days or Items. The default value is Days.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "quantityToKeep",
                        "shouldKeepForever",
                        "unit"
                    ]
                }
            }
        },
        "octopusdeploy:index/LifecyclePhaseTentacleRetentionPolicy:LifecyclePhaseTentacleRetentionPolicy": {
            "properties": {
                "quantityToKeep": {
                    "type": "integer",
                    "description": "The number of days/releases to keep. The default value is 30. If 0 then all are kept.\n"
                },
                "shouldKeepForever": {
                    "type": "boolean",
                    "description": "Indicates if items should never be deleted. The default value is false.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit of quantity to keep. Valid units are Days or Items. The default value is Days.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "quantityToKeep",
                        "shouldKeepForever",
                        "unit"
                    ]
                }
            }
        },
        "octopusdeploy:index/LifecycleReleaseRetentionPolicy:LifecycleReleaseRetentionPolicy": {
            "properties": {
                "quantityToKeep": {
                    "type": "integer",
                    "description": "The number of days/releases to keep. The default value is 30. If 0 then all are kept.\n"
                },
                "shouldKeepForever": {
                    "type": "boolean",
                    "description": "Indicates if items should never be deleted. The default value is false.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit of quantity to keep. Valid units are Days or Items. The default value is Days.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "quantityToKeep",
                        "shouldKeepForever",
                        "unit"
                    ]
                }
            }
        },
        "octopusdeploy:index/LifecycleTentacleRetentionPolicy:LifecycleTentacleRetentionPolicy": {
            "properties": {
                "quantityToKeep": {
                    "type": "integer",
                    "description": "The number of days/releases to keep. The default value is 30. If 0 then all are kept.\n"
                },
                "shouldKeepForever": {
                    "type": "boolean",
                    "description": "Indicates if items should never be deleted. The default value is false.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit of quantity to keep. Valid units are Days or Items. The default value is Days.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "quantityToKeep",
                        "shouldKeepForever",
                        "unit"
                    ]
                }
            }
        },
        "octopusdeploy:index/ProjectAutoDeployReleaseOverride:ProjectAutoDeployReleaseOverride": {
            "properties": {
                "environmentId": {
                    "type": "string"
                },
                "releaseId": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/ProjectConnectivityPolicy:ProjectConnectivityPolicy": {
            "properties": {
                "allowDeploymentsToNoTargets": {
                    "type": "boolean"
                },
                "excludeUnhealthyTargets": {
                    "type": "boolean"
                },
                "skipMachineBehavior": {
                    "type": "string"
                },
                "targetRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowDeploymentsToNoTargets",
                        "excludeUnhealthyTargets",
                        "skipMachineBehavior",
                        "targetRoles"
                    ]
                }
            }
        },
        "octopusdeploy:index/ProjectGitAnonymousPersistenceSetting:ProjectGitAnonymousPersistenceSetting": {
            "properties": {
                "basePath": {
                    "type": "string",
                    "description": "The base path associated with these version control settings.\n"
                },
                "defaultBranch": {
                    "type": "string",
                    "description": "The default branch associated with these version control settings.\n"
                },
                "protectedBranches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of protected branch patterns.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL associated with these version control settings.\n"
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "octopusdeploy:index/ProjectGitLibraryPersistenceSetting:ProjectGitLibraryPersistenceSetting": {
            "properties": {
                "basePath": {
                    "type": "string",
                    "description": "The base path associated with these version control settings.\n"
                },
                "defaultBranch": {
                    "type": "string",
                    "description": "The default branch associated with these version control settings.\n"
                },
                "gitCredentialId": {
                    "type": "string"
                },
                "protectedBranches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of protected branch patterns.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL associated with these version control settings.\n"
                }
            },
            "type": "object",
            "required": [
                "gitCredentialId",
                "url"
            ]
        },
        "octopusdeploy:index/ProjectGitUsernamePasswordPersistenceSetting:ProjectGitUsernamePasswordPersistenceSetting": {
            "properties": {
                "basePath": {
                    "type": "string",
                    "description": "The base path associated with these version control settings.\n"
                },
                "defaultBranch": {
                    "type": "string",
                    "description": "The default branch associated with these version control settings.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the Git credential\n",
                    "secret": true
                },
                "protectedBranches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of protected branch patterns.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL associated with these version control settings.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username for the Git credential.\n"
                }
            },
            "type": "object",
            "required": [
                "password",
                "url",
                "username"
            ]
        },
        "octopusdeploy:index/ProjectJiraServiceManagementExtensionSetting:ProjectJiraServiceManagementExtensionSetting": {
            "properties": {
                "connectionId": {
                    "type": "string",
                    "description": "The connection identifier associated with the extension settings.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether or not this extension is enabled for this project.\n"
                },
                "serviceDeskProjectName": {
                    "type": "string",
                    "description": "The project name associated with this extension.\n"
                }
            },
            "type": "object",
            "required": [
                "connectionId",
                "isEnabled",
                "serviceDeskProjectName"
            ]
        },
        "octopusdeploy:index/ProjectReleaseCreationStrategy:ProjectReleaseCreationStrategy": {
            "properties": {
                "channelId": {
                    "type": "string"
                },
                "releaseCreationPackageStepId": {
                    "type": "string"
                },
                "releaseCreationPackages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectReleaseCreationStrategyReleaseCreationPackage:ProjectReleaseCreationStrategyReleaseCreationPackage"
                    }
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/ProjectReleaseCreationStrategyReleaseCreationPackage:ProjectReleaseCreationStrategyReleaseCreationPackage": {
            "properties": {
                "deploymentAction": {
                    "type": "string"
                },
                "packageReference": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/ProjectServicenowExtensionSetting:ProjectServicenowExtensionSetting": {
            "properties": {
                "connectionId": {
                    "type": "string",
                    "description": "The connection identifier associated with the extension settings.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether or not this extension is enabled for this project.\n"
                },
                "isStateAutomaticallyTransitioned": {
                    "type": "boolean",
                    "description": "Specifies whether or not this extension will automatically transition the state of a deployment for this project.\n"
                },
                "standardChangeTemplateName": {
                    "type": "string",
                    "description": "The name of the standard change template associated with this extension. If provided, deployments will create a standard change based on the provided template, otherwise a normal change will be created.\n"
                }
            },
            "type": "object",
            "required": [
                "connectionId",
                "isEnabled",
                "isStateAutomaticallyTransitioned"
            ]
        },
        "octopusdeploy:index/ProjectTemplate:ProjectTemplate": {
            "properties": {
                "defaultValue": {
                    "type": "string",
                    "description": "A default value for the parameter, if applicable. This can be a hard-coded value or a variable reference.\n"
                },
                "displaySettings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The display settings for the parameter.\n"
                },
                "helpText": {
                    "type": "string",
                    "description": "The help presented alongside the parameter input.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the template parameter.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label shown beside the parameter when presented in the deployment process.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the variable set by the parameter. The name can contain letters, digits, dashes and periods.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name"
                    ]
                }
            }
        },
        "octopusdeploy:index/ProjectVersioningStrategy:ProjectVersioningStrategy": {
            "properties": {
                "donorPackageStepId": {
                    "type": "string"
                },
                "donorPackages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectVersioningStrategyDonorPackage:ProjectVersioningStrategyDonorPackage"
                    }
                },
                "template": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "template"
                    ]
                }
            }
        },
        "octopusdeploy:index/ProjectVersioningStrategyDonorPackage:ProjectVersioningStrategyDonorPackage": {
            "properties": {
                "deploymentAction": {
                    "type": "string"
                },
                "packageReference": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookConnectivityPolicy:RunbookConnectivityPolicy": {
            "properties": {
                "allowDeploymentsToNoTargets": {
                    "type": "boolean"
                },
                "excludeUnhealthyTargets": {
                    "type": "boolean"
                },
                "skipMachineBehavior": {
                    "type": "string"
                },
                "targetRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowDeploymentsToNoTargets",
                        "excludeUnhealthyTargets",
                        "skipMachineBehavior",
                        "targetRoles"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookRetentionPolicy:RunbookRetentionPolicy": {
            "properties": {
                "quantityToKeep": {
                    "type": "integer",
                    "description": "How many runs to keep per environment.\n"
                },
                "shouldKeepForever": {
                    "type": "boolean",
                    "description": "Indicates if items should never be deleted. The default value is `false`.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "quantityToKeep",
                        "shouldKeepForever"
                    ]
                }
            }
        },
        "octopusdeploy:index/ScriptModuleScript:ScriptModuleScript": {
            "properties": {
                "body": {
                    "type": "string",
                    "description": "The body of this script module.\n"
                },
                "syntax": {
                    "type": "string",
                    "description": "The syntax of the script. Valid types are `Bash`, `CSharp`, `FSharp`, `PowerShell`, or `Python`.\n"
                }
            },
            "type": "object",
            "required": [
                "body",
                "syntax"
            ]
        },
        "octopusdeploy:index/VariablePrompt:VariablePrompt": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this variable prompt option.\n"
                },
                "displaySettings": {
                    "$ref": "#/types/octopusdeploy:index/VariablePromptDisplaySettings:VariablePromptDisplaySettings"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description"
                    ]
                }
            }
        },
        "octopusdeploy:index/VariablePromptDisplaySettings:VariablePromptDisplaySettings": {
            "properties": {
                "controlType": {
                    "type": "string",
                    "description": "The type of control for rendering this prompted variable. Valid types are `SingleLineText`, `MultiLineText`, `Checkbox`, `Select`.\n"
                },
                "selectOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/VariablePromptDisplaySettingsSelectOption:VariablePromptDisplaySettingsSelectOption"
                    },
                    "description": "If the `control_type` is `Select`, then this value defines an option.\n"
                }
            },
            "type": "object",
            "required": [
                "controlType"
            ]
        },
        "octopusdeploy:index/VariablePromptDisplaySettingsSelectOption:VariablePromptDisplaySettingsSelectOption": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "The display name for the select value\n"
                },
                "value": {
                    "type": "string",
                    "description": "The select value\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "value"
            ]
        },
        "octopusdeploy:index/VariableScope:VariableScope": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of actions that are scoped to this variable value.\n"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of channels that are scoped to this variable value.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environments that are scoped to this variable value.\n"
                },
                "machines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of machines that are scoped to this variable value.\n"
                },
                "processes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes that are scoped to this variable value.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of roles that are scoped to this variable value.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags that are scoped to this variable value.\n"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getEnvironmentsEnvironment:getEnvironmentsEnvironment": {
            "properties": {
                "allowDynamicInfrastructure": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this environment.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "jiraExtensionSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getEnvironmentsEnvironmentJiraExtensionSetting:getEnvironmentsEnvironmentJiraExtensionSetting"
                    },
                    "description": "Provides extension settings for the Jira integration for this environment.\n"
                },
                "jiraServiceManagementExtensionSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getEnvironmentsEnvironmentJiraServiceManagementExtensionSetting:getEnvironmentsEnvironmentJiraServiceManagementExtensionSetting"
                    },
                    "description": "Provides extension settings for the Jira Service Management (JSM) integration for this environment.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "servicenowExtensionSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getEnvironmentsEnvironmentServicenowExtensionSetting:getEnvironmentsEnvironmentServicenowExtensionSetting"
                    },
                    "description": "Provides extension settings for the ServiceNow integration for this environment.\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The unique slug of this environment\n"
                },
                "sortOrder": {
                    "type": "integer",
                    "description": "The order number to sort an environment\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this environment.\n"
                },
                "useGuidedFailure": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "allowDynamicInfrastructure",
                "description",
                "id",
                "jiraExtensionSettings",
                "jiraServiceManagementExtensionSettings",
                "name",
                "servicenowExtensionSettings",
                "slug",
                "sortOrder",
                "spaceId",
                "useGuidedFailure"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getEnvironmentsEnvironmentJiraExtensionSetting:getEnvironmentsEnvironmentJiraExtensionSetting": {
            "properties": {
                "environmentType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "environmentType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getEnvironmentsEnvironmentJiraServiceManagementExtensionSetting:getEnvironmentsEnvironmentJiraServiceManagementExtensionSetting": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "isEnabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getEnvironmentsEnvironmentServicenowExtensionSetting:getEnvironmentsEnvironmentServicenowExtensionSetting": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "isEnabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getFeedsFeed:getFeedsFeed": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "The AWS access key to use when authenticating against Amazon Web Services.\n"
                },
                "apiVersion": {
                    "type": "string"
                },
                "deleteUnreleasedPackagesAfterDays": {
                    "type": "integer"
                },
                "downloadAttempts": {
                    "type": "integer",
                    "description": "The number of times a deployment should attempt to download a package from this feed before failing.\n"
                },
                "downloadRetryBackoffSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to apply as a linear back off between download attempts.\n"
                },
                "feedType": {
                    "type": "string",
                    "description": "A filter to search by feed type. Valid feed types are `AwsElasticContainerRegistry`, `BuiltIn`, `Docker`, `GitHub`, `Helm`, `Maven`, `NuGet`, or `OctopusProject`.\n"
                },
                "feedUri": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isEnhancedMode": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "region": {
                    "type": "string"
                },
                "registryPath": {
                    "type": "string"
                },
                "secretKey": {
                    "type": "string",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this feeds.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "apiVersion",
                "deleteUnreleasedPackagesAfterDays",
                "downloadAttempts",
                "downloadRetryBackoffSeconds",
                "feedType",
                "feedUri",
                "id",
                "isEnhancedMode",
                "name",
                "packageAcquisitionLocationOptions",
                "password",
                "region",
                "registryPath",
                "secretKey",
                "spaceId",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getGitCredentialsGitCredential:getGitCredentialsGitCredential": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this Git Credential.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this Git Credential.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this Git Credential.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The Git credential authentication type.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username for the Git credential.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "spaceId",
                "type",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getLibraryVariableSetsLibraryVariableSet:getLibraryVariableSetsLibraryVariableSet": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this library variable set.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this library variable set.\n"
                },
                "templateIds": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getLibraryVariableSetsLibraryVariableSetTemplate:getLibraryVariableSetsLibraryVariableSetTemplate"
                    }
                },
                "variableSetId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "spaceId",
                "templates",
                "templateIds",
                "variableSetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getLibraryVariableSetsLibraryVariableSetTemplate:getLibraryVariableSetsLibraryVariableSetTemplate": {
            "properties": {
                "defaultValue": {
                    "type": "string"
                },
                "displaySettings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "helpText": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "defaultValue",
                "displaySettings",
                "helpText",
                "id",
                "label",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getLifecyclesLifecycle:getLifecyclesLifecycle": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the lifecycle.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the lifecycle.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the lifecycle.\n"
                },
                "phases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getLifecyclesLifecyclePhase:getLifecyclesLifecyclePhase"
                    }
                },
                "releaseRetentionPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getLifecyclesLifecycleReleaseRetentionPolicy:getLifecyclesLifecycleReleaseRetentionPolicy"
                    }
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this lifecycle.\n"
                },
                "tentacleRetentionPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getLifecyclesLifecycleTentacleRetentionPolicy:getLifecyclesLifecycleTentacleRetentionPolicy"
                    }
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "phases",
                "releaseRetentionPolicies",
                "spaceId",
                "tentacleRetentionPolicies"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getLifecyclesLifecyclePhase:getLifecyclesLifecyclePhase": {
            "properties": {
                "automaticDeploymentTargets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The automatic deployment targets for this phase.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the phase.\n"
                },
                "isOptionalPhase": {
                    "type": "boolean",
                    "description": "Whether this phase is optional.\n"
                },
                "minimumEnvironmentsBeforePromotion": {
                    "type": "integer",
                    "description": "The minimum number of environments before promotion.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the phase.\n"
                },
                "optionalDeploymentTargets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The optional deployment targets for this phase.\n"
                },
                "releaseRetentionPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getLifecyclesLifecyclePhaseReleaseRetentionPolicy:getLifecyclesLifecyclePhaseReleaseRetentionPolicy"
                    }
                },
                "tentacleRetentionPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getLifecyclesLifecyclePhaseTentacleRetentionPolicy:getLifecyclesLifecyclePhaseTentacleRetentionPolicy"
                    }
                }
            },
            "type": "object",
            "required": [
                "automaticDeploymentTargets",
                "id",
                "isOptionalPhase",
                "minimumEnvironmentsBeforePromotion",
                "name",
                "optionalDeploymentTargets",
                "releaseRetentionPolicies",
                "tentacleRetentionPolicies"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getLifecyclesLifecyclePhaseReleaseRetentionPolicy:getLifecyclesLifecyclePhaseReleaseRetentionPolicy": {
            "properties": {
                "quantityToKeep": {
                    "type": "integer",
                    "description": "The quantity of releases to keep.\n"
                },
                "shouldKeepForever": {
                    "type": "boolean",
                    "description": "Whether releases should be kept forever.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit of time for the retention policy.\n"
                }
            },
            "type": "object",
            "required": [
                "quantityToKeep",
                "shouldKeepForever",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getLifecyclesLifecyclePhaseTentacleRetentionPolicy:getLifecyclesLifecyclePhaseTentacleRetentionPolicy": {
            "properties": {
                "quantityToKeep": {
                    "type": "integer",
                    "description": "The quantity of releases to keep.\n"
                },
                "shouldKeepForever": {
                    "type": "boolean",
                    "description": "Whether releases should be kept forever.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit of time for the retention policy.\n"
                }
            },
            "type": "object",
            "required": [
                "quantityToKeep",
                "shouldKeepForever",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getLifecyclesLifecycleReleaseRetentionPolicy:getLifecyclesLifecycleReleaseRetentionPolicy": {
            "properties": {
                "quantityToKeep": {
                    "type": "integer",
                    "description": "The quantity of releases to keep.\n"
                },
                "shouldKeepForever": {
                    "type": "boolean",
                    "description": "Whether releases should be kept forever.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit of time for the retention policy.\n"
                }
            },
            "type": "object",
            "required": [
                "quantityToKeep",
                "shouldKeepForever",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getLifecyclesLifecycleTentacleRetentionPolicy:getLifecyclesLifecycleTentacleRetentionPolicy": {
            "properties": {
                "quantityToKeep": {
                    "type": "integer",
                    "description": "The quantity of releases to keep.\n"
                },
                "shouldKeepForever": {
                    "type": "boolean",
                    "description": "Whether releases should be kept forever.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit of time for the retention policy.\n"
                }
            },
            "type": "object",
            "required": [
                "quantityToKeep",
                "shouldKeepForever",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getProjectGroupsProjectGroup:getProjectGroupsProjectGroup": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this project group.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this project group.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "spaceId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getProjectsProject:getProjectsProject": {
            "properties": {
                "allowDeploymentsToNoTargets": {
                    "type": "boolean",
                    "deprecationMessage": "Allow deployments to be created when there are no targets."
                },
                "autoCreateRelease": {
                    "type": "boolean"
                },
                "autoDeployReleaseOverrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getProjectsProjectAutoDeployReleaseOverride:getProjectsProjectAutoDeployReleaseOverride"
                    }
                },
                "clonedFromProjectId": {
                    "type": "string"
                },
                "connectivityPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getProjectsProjectConnectivityPolicy:getProjectsProjectConnectivityPolicy"
                    }
                },
                "defaultGuidedFailureMode": {
                    "type": "string"
                },
                "defaultToSkipIfAlreadyInstalled": {
                    "type": "boolean"
                },
                "deploymentChangesTemplate": {
                    "type": "string"
                },
                "deploymentProcessId": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this project\n"
                },
                "discreteChannelRelease": {
                    "type": "boolean",
                    "description": "Treats releases of different channels to the same environment as a separate deployment dimension\n"
                },
                "gitAnonymousPersistenceSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getProjectsProjectGitAnonymousPersistenceSetting:getProjectsProjectGitAnonymousPersistenceSetting"
                    },
                    "description": "Git-related persistence settings for a version-controlled project using anonymous authentication.\n"
                },
                "gitLibraryPersistenceSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getProjectsProjectGitLibraryPersistenceSetting:getProjectsProjectGitLibraryPersistenceSetting"
                    },
                    "description": "Git-related persistence settings for a version-controlled project using library authentication.\n"
                },
                "gitUsernamePasswordPersistenceSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getProjectsProjectGitUsernamePasswordPersistenceSetting:getProjectsProjectGitUsernamePasswordPersistenceSetting"
                    },
                    "description": "Git-related persistence settings for a version-controlled project using username*password authentication.\n"
                },
                "id": {
                    "type": "string"
                },
                "includedLibraryVariableSets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isDiscreteChannelRelease": {
                    "type": "boolean"
                },
                "isVersionControlled": {
                    "type": "boolean"
                },
                "jiraServiceManagementExtensionSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getProjectsProjectJiraServiceManagementExtensionSetting:getProjectsProjectJiraServiceManagementExtensionSetting"
                    },
                    "description": "Extension settings for the Jira Service Management (JSM) integration.\n"
                },
                "lifecycleId": {
                    "type": "string",
                    "description": "The lifecycle ID associated with this project\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the project in Octopus Deploy. This name must be unique.\n"
                },
                "projectGroupId": {
                    "type": "string",
                    "description": "The project group ID associated with this project.\n"
                },
                "releaseCreationStrategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getProjectsProjectReleaseCreationStrategy:getProjectsProjectReleaseCreationStrategy"
                    },
                    "description": "The release creation strategy for the project.\n"
                },
                "releaseNotesTemplate": {
                    "type": "string",
                    "description": "The template to use for release notes.\n"
                },
                "servicenowExtensionSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getProjectsProjectServicenowExtensionSetting:getProjectsProjectServicenowExtensionSetting"
                    },
                    "description": "Extension settings for the ServiceNow integration.\n"
                },
                "slug": {
                    "type": "string",
                    "description": "A human-readable, unique identifier, used to identify a project.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this project.\n"
                },
                "templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getProjectsProjectTemplate:getProjectsProjectTemplate"
                    },
                    "description": "Template parameters for the project.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the project.\n"
                },
                "variableSetId": {
                    "type": "string",
                    "description": "The ID of the variable set associated with this project.\n"
                },
                "versioningStrategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getProjectsProjectVersioningStrategy:getProjectsProjectVersioningStrategy"
                    },
                    "description": "The versioning strategy for the project.\n"
                }
            },
            "type": "object",
            "required": [
                "allowDeploymentsToNoTargets",
                "autoCreateRelease",
                "autoDeployReleaseOverrides",
                "clonedFromProjectId",
                "connectivityPolicies",
                "defaultGuidedFailureMode",
                "defaultToSkipIfAlreadyInstalled",
                "deploymentChangesTemplate",
                "deploymentProcessId",
                "description",
                "discreteChannelRelease",
                "gitAnonymousPersistenceSettings",
                "gitLibraryPersistenceSettings",
                "gitUsernamePasswordPersistenceSettings",
                "id",
                "includedLibraryVariableSets",
                "isDisabled",
                "isDiscreteChannelRelease",
                "isVersionControlled",
                "jiraServiceManagementExtensionSettings",
                "lifecycleId",
                "name",
                "projectGroupId",
                "releaseCreationStrategies",
                "releaseNotesTemplate",
                "servicenowExtensionSettings",
                "slug",
                "spaceId",
                "templates",
                "tenantedDeploymentParticipation",
                "variableSetId",
                "versioningStrategies"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getProjectsProjectAutoDeployReleaseOverride:getProjectsProjectAutoDeployReleaseOverride": {
            "properties": {
                "environmentId": {
                    "type": "string",
                    "description": "The environment ID for the auto deploy release override.\n"
                },
                "releaseId": {
                    "type": "string",
                    "description": "The release ID for the auto deploy release override.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The tenant ID for the auto deploy release override.\n"
                }
            },
            "type": "object",
            "required": [
                "environmentId",
                "releaseId",
                "tenantId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getProjectsProjectConnectivityPolicy:getProjectsProjectConnectivityPolicy": {
            "properties": {
                "allowDeploymentsToNoTargets": {
                    "type": "boolean",
                    "description": "Allow deployments to be created when there are no targets.\n"
                },
                "excludeUnhealthyTargets": {
                    "type": "boolean",
                    "description": "Exclude unhealthy targets from deployments.\n"
                },
                "skipMachineBehavior": {
                    "type": "string",
                    "description": "The behavior when a machine is skipped.\n"
                },
                "targetRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The target roles for the connectivity policy.\n"
                }
            },
            "type": "object",
            "required": [
                "allowDeploymentsToNoTargets",
                "excludeUnhealthyTargets",
                "skipMachineBehavior",
                "targetRoles"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getProjectsProjectGitAnonymousPersistenceSetting:getProjectsProjectGitAnonymousPersistenceSetting": {
            "properties": {
                "basePath": {
                    "type": "string",
                    "description": "The base path associated with these version control settings.\n"
                },
                "defaultBranch": {
                    "type": "string",
                    "description": "The default branch associated with these version control settings.\n"
                },
                "protectedBranches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of protected branch patterns.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL associated with these version control settings.\n"
                }
            },
            "type": "object",
            "required": [
                "basePath",
                "defaultBranch",
                "protectedBranches",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getProjectsProjectGitLibraryPersistenceSetting:getProjectsProjectGitLibraryPersistenceSetting": {
            "properties": {
                "basePath": {
                    "type": "string",
                    "description": "The base path associated with these version control settings.\n"
                },
                "defaultBranch": {
                    "type": "string",
                    "description": "The default branch associated with these version control settings.\n"
                },
                "gitCredentialId": {
                    "type": "string",
                    "description": "The ID of the Git credential.\n"
                },
                "protectedBranches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of protected branch patterns.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL associated with these version control settings.\n"
                }
            },
            "type": "object",
            "required": [
                "basePath",
                "defaultBranch",
                "gitCredentialId",
                "protectedBranches",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getProjectsProjectGitUsernamePasswordPersistenceSetting:getProjectsProjectGitUsernamePasswordPersistenceSetting": {
            "properties": {
                "basePath": {
                    "type": "string",
                    "description": "The base path associated with these version control settings.\n"
                },
                "defaultBranch": {
                    "type": "string",
                    "description": "The default branch associated with these version control settings.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the Git credential.\n",
                    "secret": true
                },
                "protectedBranches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of protected branch patterns.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL associated with these version control settings.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username for the Git credential.\n"
                }
            },
            "type": "object",
            "required": [
                "basePath",
                "defaultBranch",
                "password",
                "protectedBranches",
                "url",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getProjectsProjectJiraServiceManagementExtensionSetting:getProjectsProjectJiraServiceManagementExtensionSetting": {
            "properties": {
                "connectionId": {
                    "type": "string",
                    "description": "The connection identifier for JSM.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Whether the JSM extension is enabled.\n"
                },
                "serviceDeskProjectName": {
                    "type": "string",
                    "description": "The JSM service desk project name.\n"
                }
            },
            "type": "object",
            "required": [
                "connectionId",
                "isEnabled",
                "serviceDeskProjectName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getProjectsProjectReleaseCreationStrategy:getProjectsProjectReleaseCreationStrategy": {
            "properties": {
                "channelId": {
                    "type": "string",
                    "description": "The ID of the channel to use for release creation.\n"
                },
                "releaseCreationPackageStepId": {
                    "type": "string",
                    "description": "The ID of the step containing the package for release creation.\n"
                },
                "releaseCreationPackages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getProjectsProjectReleaseCreationStrategyReleaseCreationPackage:getProjectsProjectReleaseCreationStrategyReleaseCreationPackage"
                    },
                    "description": "Details of the package used for release creation.\n"
                }
            },
            "type": "object",
            "required": [
                "channelId",
                "releaseCreationPackages",
                "releaseCreationPackageStepId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getProjectsProjectReleaseCreationStrategyReleaseCreationPackage:getProjectsProjectReleaseCreationStrategyReleaseCreationPackage": {
            "properties": {
                "deploymentAction": {
                    "type": "string",
                    "description": "The deployment action for the release creation package.\n"
                },
                "packageReference": {
                    "type": "string",
                    "description": "The package reference for the release creation package.\n"
                }
            },
            "type": "object",
            "required": [
                "deploymentAction",
                "packageReference"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getProjectsProjectServicenowExtensionSetting:getProjectsProjectServicenowExtensionSetting": {
            "properties": {
                "connectionId": {
                    "type": "string",
                    "description": "The connection identifier for ServiceNow.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Whether the ServiceNow extension is enabled.\n"
                },
                "isStateAutomaticallyTransitioned": {
                    "type": "boolean",
                    "description": "Whether state is automatically transitioned in ServiceNow.\n"
                },
                "standardChangeTemplateName": {
                    "type": "string",
                    "description": "The name of the standard change template in ServiceNow.\n"
                }
            },
            "type": "object",
            "required": [
                "connectionId",
                "isEnabled",
                "isStateAutomaticallyTransitioned",
                "standardChangeTemplateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getProjectsProjectTemplate:getProjectsProjectTemplate": {
            "properties": {
                "defaultValue": {
                    "type": "string",
                    "description": "The default value for the parameter.\n"
                },
                "displaySettings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The display settings for the parameter.\n"
                },
                "helpText": {
                    "type": "string",
                    "description": "The help text for the parameter.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the template parameter.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label shown beside the parameter.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the variable set by the parameter.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultValue",
                "displaySettings",
                "helpText",
                "id",
                "label",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getProjectsProjectVersioningStrategy:getProjectsProjectVersioningStrategy": {
            "properties": {
                "donorPackageStepId": {
                    "type": "string",
                    "description": "The ID of the step containing the donor package.\n"
                },
                "donorPackages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getProjectsProjectVersioningStrategyDonorPackage:getProjectsProjectVersioningStrategyDonorPackage"
                    }
                },
                "template": {
                    "type": "string",
                    "description": "The template to use for version numbers.\n"
                }
            },
            "type": "object",
            "required": [
                "donorPackages",
                "donorPackageStepId",
                "template"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getProjectsProjectVersioningStrategyDonorPackage:getProjectsProjectVersioningStrategyDonorPackage": {
            "properties": {
                "deploymentAction": {
                    "type": "string",
                    "description": "The deployment action for the donor package.\n"
                },
                "packageReference": {
                    "type": "string",
                    "description": "The package reference for the donor package.\n"
                }
            },
            "type": "object",
            "required": [
                "deploymentAction",
                "packageReference"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getScriptModulesScriptModule:getScriptModulesScriptModule": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this script module.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "scripts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getScriptModulesScriptModuleScript:getScriptModulesScriptModuleScript"
                    },
                    "description": "The script associated with this script module.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this Script Module.\n"
                },
                "variableSetId": {
                    "type": "string",
                    "description": "The variable set ID for this script module.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "scripts",
                "spaceId",
                "variableSetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getScriptModulesScriptModuleScript:getScriptModulesScriptModuleScript": {
            "properties": {
                "body": {
                    "type": "string",
                    "description": "The body of this script module.\n"
                },
                "syntax": {
                    "type": "string",
                    "description": "The syntax of the script. Valid types are `Bash`, `CSharp`, `FSharp`, `PowerShell`, or `Python`.\n"
                }
            },
            "type": "object",
            "required": [
                "body",
                "syntax"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getSpacesSpace:getSpacesSpace": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this space.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Specifies if this space is the default space in Octopus.\n"
                },
                "isTaskQueueStopped": {
                    "type": "boolean",
                    "description": "Specifies the status of the task queue for this space.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource, no more than 20 characters long\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The unique slug of this space\n"
                },
                "spaceManagersTeamMembers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of user IDs designated to be managers of this space.\n"
                },
                "spaceManagersTeams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of team IDs designated to be managers of this space.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "isDefault",
                "isTaskQueueStopped",
                "name",
                "slug",
                "spaceManagersTeamMembers",
                "spaceManagersTeams"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getTagSetsTagSet:getTagSetsTagSet": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this tag set.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "sortOrder": {
                    "type": "integer",
                    "description": "The sort order associated with this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "sortOrder",
                "spaceId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getTenantProjectsTenantProject:getTenantProjectsTenantProject": {
            "properties": {
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environment IDs associated with this tenant.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project ID associated with this tenant.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The tenant ID associated with this tenant.\n"
                }
            },
            "type": "object",
            "required": [
                "environmentIds",
                "id",
                "projectId",
                "tenantId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getTenantsTenant:getTenantsTenant": {
            "properties": {
                "clonedFromTenantId": {
                    "type": "string",
                    "description": "The ID of the tenant from which this tenant was cloned.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this tenants.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this tenant.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                }
            },
            "type": "object",
            "required": [
                "clonedFromTenantId",
                "description",
                "id",
                "name",
                "spaceId",
                "tenantTags"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getVariablesPrompt:getVariablesPrompt": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this variable prompt option.\n"
                },
                "displaySettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getVariablesPromptDisplaySetting:getVariablesPromptDisplaySetting"
                    }
                },
                "isRequired": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "displaySettings",
                "isRequired",
                "label"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getVariablesPromptDisplaySetting:getVariablesPromptDisplaySetting": {
            "properties": {
                "controlType": {
                    "type": "string",
                    "description": "The type of control for rendering this prompted variable. Valid types are `SingleLineText`, `MultiLineText`, `Checkbox`, `Select`.\n"
                },
                "selectOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getVariablesPromptDisplaySettingSelectOption:getVariablesPromptDisplaySettingSelectOption"
                    },
                    "description": "If the `control_type` is `Select`, then this value defines an option.\n"
                }
            },
            "type": "object",
            "required": [
                "controlType",
                "selectOptions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getVariablesPromptDisplaySettingSelectOption:getVariablesPromptDisplaySettingSelectOption": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "The display name for the select value\n"
                },
                "value": {
                    "type": "string",
                    "description": "The select value\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getVariablesScope:getVariablesScope": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of actions that are scoped to this variable value.\n"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of channels that are scoped to this variable value.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environments that are scoped to this variable value.\n"
                },
                "machines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of machines that are scoped to this variable value.\n"
                },
                "processes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes that are scoped to this variable value.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of roles that are scoped to this variable value.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags that are scoped to this variable value.\n"
                }
            },
            "type": "object"
        }
    },
    "provider": {
        "description": "The provider type for the octopusdeploy package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "address": {
                "type": "string",
                "description": "The endpoint of the Octopus REST API\n"
            },
            "apiKey": {
                "type": "string",
                "description": "The API key to use with the Octopus REST API\n"
            },
            "spaceId": {
                "type": "string",
                "description": "The space ID to target\n"
            }
        },
        "inputProperties": {
            "address": {
                "type": "string",
                "description": "The endpoint of the Octopus REST API\n"
            },
            "apiKey": {
                "type": "string",
                "description": "The API key to use with the Octopus REST API\n"
            },
            "spaceId": {
                "type": "string",
                "description": "The space ID to target\n"
            }
        }
    },
    "resources": {
        "octopusdeploy:index/artifactoryGenericFeed:ArtifactoryGenericFeed": {
            "description": "This resource manages a Artifactory Generic feed in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.ArtifactoryGenericFeed(\"example\", {\n    feedUri: \"https://example.jfrog.io\",\n    layoutRegex: \"this is regex\",\n    password: \"test-password\",\n    repository: \"repo\",\n    username: \"test-username\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.ArtifactoryGenericFeed(\"example\",\n    feed_uri=\"https://example.jfrog.io\",\n    layout_regex=\"this is regex\",\n    password=\"test-password\",\n    repository=\"repo\",\n    username=\"test-username\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.ArtifactoryGenericFeed(\"example\", new()\n    {\n        FeedUri = \"https://example.jfrog.io\",\n        LayoutRegex = \"this is regex\",\n        Password = \"test-password\",\n        Repository = \"repo\",\n        Username = \"test-username\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewArtifactoryGenericFeed(ctx, \"example\", \u0026octopusdeploy.ArtifactoryGenericFeedArgs{\n\t\t\tFeedUri:     pulumi.String(\"https://example.jfrog.io\"),\n\t\t\tLayoutRegex: pulumi.String(\"this is regex\"),\n\t\t\tPassword:    pulumi.String(\"test-password\"),\n\t\t\tRepository:  pulumi.String(\"repo\"),\n\t\t\tUsername:    pulumi.String(\"test-username\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.ArtifactoryGenericFeed;\nimport com.pulumi.octopusdeploy.ArtifactoryGenericFeedArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ArtifactoryGenericFeed(\"example\", ArtifactoryGenericFeedArgs.builder()\n            .feedUri(\"https://example.jfrog.io\")\n            .layoutRegex(\"this is regex\")\n            .password(\"test-password\")\n            .repository(\"repo\")\n            .username(\"test-username\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:ArtifactoryGenericFeed\n    properties:\n      feedUri: https://example.jfrog.io\n      layoutRegex: this is regex\n      password: test-password\n      repository: repo\n      username: test-username\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/artifactoryGenericFeed:ArtifactoryGenericFeed [options] octopusdeploy_artifactory_generic_feed.\u003cname\u003e \u003cfeed-id\u003e\n```\n\n",
            "properties": {
                "feedUri": {
                    "type": "string"
                },
                "layoutRegex": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "repository": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this artifactory generic feed.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "required": [
                "feedUri",
                "name",
                "packageAcquisitionLocationOptions",
                "repository",
                "spaceId"
            ],
            "inputProperties": {
                "feedUri": {
                    "type": "string"
                },
                "layoutRegex": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "repository": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this artifactory generic feed.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "feedUri",
                "repository"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ArtifactoryGenericFeed resources.\n",
                "properties": {
                    "feedUri": {
                        "type": "string"
                    },
                    "layoutRegex": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "packageAcquisitionLocationOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "password": {
                        "type": "string",
                        "description": "The password associated with this resource.\n",
                        "secret": true
                    },
                    "repository": {
                        "type": "string"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this artifactory generic feed.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username associated with this resource.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/awsElasticContainerRegistry:AwsElasticContainerRegistry": {
            "description": "This resource manages an AWS Elastic Container Registry in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.AwsElasticContainerRegistry(\"example\", {\n    accessKey: \"access-key\",\n    region: \"us-east-1\",\n    secretKey: \"secret-key\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.AwsElasticContainerRegistry(\"example\",\n    access_key=\"access-key\",\n    region=\"us-east-1\",\n    secret_key=\"secret-key\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.AwsElasticContainerRegistry(\"example\", new()\n    {\n        AccessKey = \"access-key\",\n        Region = \"us-east-1\",\n        SecretKey = \"secret-key\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewAwsElasticContainerRegistry(ctx, \"example\", \u0026octopusdeploy.AwsElasticContainerRegistryArgs{\n\t\t\tAccessKey: pulumi.String(\"access-key\"),\n\t\t\tRegion:    pulumi.String(\"us-east-1\"),\n\t\t\tSecretKey: pulumi.String(\"secret-key\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.AwsElasticContainerRegistry;\nimport com.pulumi.octopusdeploy.AwsElasticContainerRegistryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AwsElasticContainerRegistry(\"example\", AwsElasticContainerRegistryArgs.builder()\n            .accessKey(\"access-key\")\n            .region(\"us-east-1\")\n            .secretKey(\"secret-key\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:AwsElasticContainerRegistry\n    properties:\n      accessKey: access-key\n      region: us-east-1\n      secretKey: secret-key\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/awsElasticContainerRegistry:AwsElasticContainerRegistry [options] octopusdeploy_aws_elastic_container_registry.\u003cname\u003e \u003cfeed-id\u003e\n```\n\n",
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "The AWS access key to use when authenticating against Amazon Web Services.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The AWS region where the registry resides.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "The AWS secret key to use when authenticating against Amazon Web Services.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this aws elastic container registry.\n"
                }
            },
            "required": [
                "accessKey",
                "name",
                "packageAcquisitionLocationOptions",
                "region",
                "secretKey",
                "spaceId"
            ],
            "inputProperties": {
                "accessKey": {
                    "type": "string",
                    "description": "The AWS access key to use when authenticating against Amazon Web Services.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The AWS region where the registry resides.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "The AWS secret key to use when authenticating against Amazon Web Services.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this aws elastic container registry.\n"
                }
            },
            "requiredInputs": [
                "accessKey",
                "region",
                "secretKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AwsElasticContainerRegistry resources.\n",
                "properties": {
                    "accessKey": {
                        "type": "string",
                        "description": "The AWS access key to use when authenticating against Amazon Web Services.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "packageAcquisitionLocationOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "region": {
                        "type": "string",
                        "description": "The AWS region where the registry resides.\n"
                    },
                    "secretKey": {
                        "type": "string",
                        "description": "The AWS secret key to use when authenticating against Amazon Web Services.\n",
                        "secret": true
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this aws elastic container registry.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/dockerContainerRegistry:DockerContainerRegistry": {
            "description": "This resource manages a Docker Container Registry in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.DockerContainerRegistry(\"example\", {\n    feedUri: \"https://index.docker.io\",\n    password: \"test-password\",\n    registryPath: \"testing/test-image\",\n    username: \"test-username\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.DockerContainerRegistry(\"example\",\n    feed_uri=\"https://index.docker.io\",\n    password=\"test-password\",\n    registry_path=\"testing/test-image\",\n    username=\"test-username\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.DockerContainerRegistry(\"example\", new()\n    {\n        FeedUri = \"https://index.docker.io\",\n        Password = \"test-password\",\n        RegistryPath = \"testing/test-image\",\n        Username = \"test-username\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewDockerContainerRegistry(ctx, \"example\", \u0026octopusdeploy.DockerContainerRegistryArgs{\n\t\t\tFeedUri:      pulumi.String(\"https://index.docker.io\"),\n\t\t\tPassword:     pulumi.String(\"test-password\"),\n\t\t\tRegistryPath: pulumi.String(\"testing/test-image\"),\n\t\t\tUsername:     pulumi.String(\"test-username\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.DockerContainerRegistry;\nimport com.pulumi.octopusdeploy.DockerContainerRegistryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DockerContainerRegistry(\"example\", DockerContainerRegistryArgs.builder()\n            .feedUri(\"https://index.docker.io\")\n            .password(\"test-password\")\n            .registryPath(\"testing/test-image\")\n            .username(\"test-username\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:DockerContainerRegistry\n    properties:\n      feedUri: https://index.docker.io\n      password: test-password\n      registryPath: testing/test-image\n      username: test-username\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/dockerContainerRegistry:DockerContainerRegistry [options] octopusdeploy_docker_container_registry.\u003cname\u003e \u003cfeed-id\u003e\n```\n\n",
            "properties": {
                "apiVersion": {
                    "type": "string"
                },
                "feedUri": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "registryPath": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this docker container registry feed.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "required": [
                "feedUri",
                "name",
                "packageAcquisitionLocationOptions",
                "spaceId"
            ],
            "inputProperties": {
                "apiVersion": {
                    "type": "string"
                },
                "feedUri": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "registryPath": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this docker container registry feed.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "feedUri"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DockerContainerRegistry resources.\n",
                "properties": {
                    "apiVersion": {
                        "type": "string"
                    },
                    "feedUri": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "packageAcquisitionLocationOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "password": {
                        "type": "string",
                        "description": "The password associated with this resource.\n",
                        "secret": true
                    },
                    "registryPath": {
                        "type": "string"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this docker container registry feed.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username associated with this resource.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/environment:Environment": {
            "description": "This resource manages environments in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.Environment(\"example\", {\n    allowDynamicInfrastructure: false,\n    description: \"An environment for the development team.\",\n    jiraExtensionSettings: [{\n        environmentType: \"unmapped\",\n    }],\n    jiraServiceManagementExtensionSettings: [{\n        isEnabled: false,\n    }],\n    servicenowExtensionSettings: [{\n        isEnabled: false,\n    }],\n    useGuidedFailure: false,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.Environment(\"example\",\n    allow_dynamic_infrastructure=False,\n    description=\"An environment for the development team.\",\n    jira_extension_settings=[{\n        \"environment_type\": \"unmapped\",\n    }],\n    jira_service_management_extension_settings=[{\n        \"is_enabled\": False,\n    }],\n    servicenow_extension_settings=[{\n        \"is_enabled\": False,\n    }],\n    use_guided_failure=False)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.Environment(\"example\", new()\n    {\n        AllowDynamicInfrastructure = false,\n        Description = \"An environment for the development team.\",\n        JiraExtensionSettings = new[]\n        {\n            new Octopusdeploy.Inputs.EnvironmentJiraExtensionSettingArgs\n            {\n                EnvironmentType = \"unmapped\",\n            },\n        },\n        JiraServiceManagementExtensionSettings = new[]\n        {\n            new Octopusdeploy.Inputs.EnvironmentJiraServiceManagementExtensionSettingArgs\n            {\n                IsEnabled = false,\n            },\n        },\n        ServicenowExtensionSettings = new[]\n        {\n            new Octopusdeploy.Inputs.EnvironmentServicenowExtensionSettingArgs\n            {\n                IsEnabled = false,\n            },\n        },\n        UseGuidedFailure = false,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewEnvironment(ctx, \"example\", \u0026octopusdeploy.EnvironmentArgs{\n\t\t\tAllowDynamicInfrastructure: pulumi.Bool(false),\n\t\t\tDescription:                pulumi.String(\"An environment for the development team.\"),\n\t\t\tJiraExtensionSettings: octopusdeploy.EnvironmentJiraExtensionSettingArray{\n\t\t\t\t\u0026octopusdeploy.EnvironmentJiraExtensionSettingArgs{\n\t\t\t\t\tEnvironmentType: pulumi.String(\"unmapped\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tJiraServiceManagementExtensionSettings: octopusdeploy.EnvironmentJiraServiceManagementExtensionSettingArray{\n\t\t\t\t\u0026octopusdeploy.EnvironmentJiraServiceManagementExtensionSettingArgs{\n\t\t\t\t\tIsEnabled: pulumi.Bool(false),\n\t\t\t\t},\n\t\t\t},\n\t\t\tServicenowExtensionSettings: octopusdeploy.EnvironmentServicenowExtensionSettingArray{\n\t\t\t\t\u0026octopusdeploy.EnvironmentServicenowExtensionSettingArgs{\n\t\t\t\t\tIsEnabled: pulumi.Bool(false),\n\t\t\t\t},\n\t\t\t},\n\t\t\tUseGuidedFailure: pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.Environment;\nimport com.pulumi.octopusdeploy.EnvironmentArgs;\nimport com.pulumi.octopusdeploy.inputs.EnvironmentJiraExtensionSettingArgs;\nimport com.pulumi.octopusdeploy.inputs.EnvironmentJiraServiceManagementExtensionSettingArgs;\nimport com.pulumi.octopusdeploy.inputs.EnvironmentServicenowExtensionSettingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Environment(\"example\", EnvironmentArgs.builder()\n            .allowDynamicInfrastructure(false)\n            .description(\"An environment for the development team.\")\n            .jiraExtensionSettings(EnvironmentJiraExtensionSettingArgs.builder()\n                .environmentType(\"unmapped\")\n                .build())\n            .jiraServiceManagementExtensionSettings(EnvironmentJiraServiceManagementExtensionSettingArgs.builder()\n                .isEnabled(false)\n                .build())\n            .servicenowExtensionSettings(EnvironmentServicenowExtensionSettingArgs.builder()\n                .isEnabled(false)\n                .build())\n            .useGuidedFailure(false)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:Environment\n    properties:\n      allowDynamicInfrastructure: false\n      description: An environment for the development team.\n      jiraExtensionSettings:\n        - environmentType: unmapped\n      jiraServiceManagementExtensionSettings:\n        - isEnabled: false\n      servicenowExtensionSettings:\n        - isEnabled: false\n      useGuidedFailure: false\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/environment:Environment [options] octopusdeploy_environment.\u003cname\u003e \u003cenvironment-id\u003e\n```\n\n",
            "properties": {
                "allowDynamicInfrastructure": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this environment.\n"
                },
                "jiraExtensionSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/EnvironmentJiraExtensionSetting:EnvironmentJiraExtensionSetting"
                    },
                    "description": "Provides extension settings for the Jira integration for this environment.\n"
                },
                "jiraServiceManagementExtensionSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/EnvironmentJiraServiceManagementExtensionSetting:EnvironmentJiraServiceManagementExtensionSetting"
                    },
                    "description": "Provides extension settings for the Jira Service Management (JSM) integration for this environment.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "servicenowExtensionSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/EnvironmentServicenowExtensionSetting:EnvironmentServicenowExtensionSetting"
                    },
                    "description": "Provides extension settings for the ServiceNow integration for this environment.\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The unique slug of this environment\n"
                },
                "sortOrder": {
                    "type": "integer",
                    "description": "The order number to sort an environment.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this environment.\n"
                },
                "useGuidedFailure": {
                    "type": "boolean"
                }
            },
            "required": [
                "allowDynamicInfrastructure",
                "description",
                "name",
                "slug",
                "sortOrder",
                "spaceId",
                "useGuidedFailure"
            ],
            "inputProperties": {
                "allowDynamicInfrastructure": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this environment.\n"
                },
                "jiraExtensionSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/EnvironmentJiraExtensionSetting:EnvironmentJiraExtensionSetting"
                    },
                    "description": "Provides extension settings for the Jira integration for this environment.\n"
                },
                "jiraServiceManagementExtensionSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/EnvironmentJiraServiceManagementExtensionSetting:EnvironmentJiraServiceManagementExtensionSetting"
                    },
                    "description": "Provides extension settings for the Jira Service Management (JSM) integration for this environment.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "servicenowExtensionSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/EnvironmentServicenowExtensionSetting:EnvironmentServicenowExtensionSetting"
                    },
                    "description": "Provides extension settings for the ServiceNow integration for this environment.\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The unique slug of this environment\n"
                },
                "sortOrder": {
                    "type": "integer",
                    "description": "The order number to sort an environment.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this environment.\n"
                },
                "useGuidedFailure": {
                    "type": "boolean"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Environment resources.\n",
                "properties": {
                    "allowDynamicInfrastructure": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this environment.\n"
                    },
                    "jiraExtensionSettings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/EnvironmentJiraExtensionSetting:EnvironmentJiraExtensionSetting"
                        },
                        "description": "Provides extension settings for the Jira integration for this environment.\n"
                    },
                    "jiraServiceManagementExtensionSettings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/EnvironmentJiraServiceManagementExtensionSetting:EnvironmentJiraServiceManagementExtensionSetting"
                        },
                        "description": "Provides extension settings for the Jira Service Management (JSM) integration for this environment.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "servicenowExtensionSettings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/EnvironmentServicenowExtensionSetting:EnvironmentServicenowExtensionSetting"
                        },
                        "description": "Provides extension settings for the ServiceNow integration for this environment.\n"
                    },
                    "slug": {
                        "type": "string",
                        "description": "The unique slug of this environment\n"
                    },
                    "sortOrder": {
                        "type": "integer",
                        "description": "The order number to sort an environment.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this environment.\n"
                    },
                    "useGuidedFailure": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/gitCredential:GitCredential": {
            "description": "Manages a Git credential in Octopus Deploy.\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this Git Credential.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this Git Credential.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the Git credential.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this Git Credential.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The Git credential authentication type.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username for the Git credential.\n"
                }
            },
            "required": [
                "description",
                "name",
                "password",
                "spaceId",
                "username"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this Git Credential.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this Git Credential.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the Git credential.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this Git Credential.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The Git credential authentication type.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username for the Git credential.\n"
                }
            },
            "requiredInputs": [
                "password",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GitCredential resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this Git Credential.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this Git Credential.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password for the Git credential.\n",
                        "secret": true
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this Git Credential.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The Git credential authentication type.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username for the Git credential.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/githubRepositoryFeed:GithubRepositoryFeed": {
            "description": "This resource manages a GitHub repository feed in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.GithubRepositoryFeed(\"example\", {\n    downloadAttempts: 1,\n    downloadRetryBackoffSeconds: 30,\n    feedUri: \"https://api.github.com\",\n    password: \"test-password\",\n    username: \"test-username\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.GithubRepositoryFeed(\"example\",\n    download_attempts=1,\n    download_retry_backoff_seconds=30,\n    feed_uri=\"https://api.github.com\",\n    password=\"test-password\",\n    username=\"test-username\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.GithubRepositoryFeed(\"example\", new()\n    {\n        DownloadAttempts = 1,\n        DownloadRetryBackoffSeconds = 30,\n        FeedUri = \"https://api.github.com\",\n        Password = \"test-password\",\n        Username = \"test-username\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewGithubRepositoryFeed(ctx, \"example\", \u0026octopusdeploy.GithubRepositoryFeedArgs{\n\t\t\tDownloadAttempts:            pulumi.Int(1),\n\t\t\tDownloadRetryBackoffSeconds: pulumi.Int(30),\n\t\t\tFeedUri:                     pulumi.String(\"https://api.github.com\"),\n\t\t\tPassword:                    pulumi.String(\"test-password\"),\n\t\t\tUsername:                    pulumi.String(\"test-username\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.GithubRepositoryFeed;\nimport com.pulumi.octopusdeploy.GithubRepositoryFeedArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new GithubRepositoryFeed(\"example\", GithubRepositoryFeedArgs.builder()\n            .downloadAttempts(1)\n            .downloadRetryBackoffSeconds(30)\n            .feedUri(\"https://api.github.com\")\n            .password(\"test-password\")\n            .username(\"test-username\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:GithubRepositoryFeed\n    properties:\n      downloadAttempts: 1\n      downloadRetryBackoffSeconds: 30\n      feedUri: https://api.github.com\n      password: test-password\n      username: test-username\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/githubRepositoryFeed:GithubRepositoryFeed [options] octopusdeploy_github_repository_feed.\u003cname\u003e \u003cfeed-id\u003e\n```\n\n",
            "properties": {
                "downloadAttempts": {
                    "type": "integer",
                    "description": "The number of times a deployment should attempt to download a package from this feed before failing.\n"
                },
                "downloadRetryBackoffSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to apply as a linear back off between download attempts.\n"
                },
                "feedUri": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this github repository feed.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "required": [
                "downloadAttempts",
                "downloadRetryBackoffSeconds",
                "feedUri",
                "name",
                "packageAcquisitionLocationOptions",
                "spaceId"
            ],
            "inputProperties": {
                "downloadAttempts": {
                    "type": "integer",
                    "description": "The number of times a deployment should attempt to download a package from this feed before failing.\n"
                },
                "downloadRetryBackoffSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to apply as a linear back off between download attempts.\n"
                },
                "feedUri": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this github repository feed.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "feedUri"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GithubRepositoryFeed resources.\n",
                "properties": {
                    "downloadAttempts": {
                        "type": "integer",
                        "description": "The number of times a deployment should attempt to download a package from this feed before failing.\n"
                    },
                    "downloadRetryBackoffSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to apply as a linear back off between download attempts.\n"
                    },
                    "feedUri": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "packageAcquisitionLocationOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "password": {
                        "type": "string",
                        "description": "The password associated with this resource.\n",
                        "secret": true
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this github repository feed.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username associated with this resource.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/helmFeed:HelmFeed": {
            "description": "This resource manages a Helm Feed in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.HelmFeed(\"example\", {\n    feedUri: \"https://charts.helm.sh/stable\",\n    password: \"test-password\",\n    username: \"test-username\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.HelmFeed(\"example\",\n    feed_uri=\"https://charts.helm.sh/stable\",\n    password=\"test-password\",\n    username=\"test-username\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.HelmFeed(\"example\", new()\n    {\n        FeedUri = \"https://charts.helm.sh/stable\",\n        Password = \"test-password\",\n        Username = \"test-username\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewHelmFeed(ctx, \"example\", \u0026octopusdeploy.HelmFeedArgs{\n\t\t\tFeedUri:  pulumi.String(\"https://charts.helm.sh/stable\"),\n\t\t\tPassword: pulumi.String(\"test-password\"),\n\t\t\tUsername: pulumi.String(\"test-username\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.HelmFeed;\nimport com.pulumi.octopusdeploy.HelmFeedArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new HelmFeed(\"example\", HelmFeedArgs.builder()\n            .feedUri(\"https://charts.helm.sh/stable\")\n            .password(\"test-password\")\n            .username(\"test-username\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:HelmFeed\n    properties:\n      feedUri: https://charts.helm.sh/stable\n      password: test-password\n      username: test-username\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/helmFeed:HelmFeed [options] octopusdeploy_helm_feed.\u003cname\u003e \u003cfeed-id\u003e\n```\n\n",
            "properties": {
                "feedUri": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this helm feed.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "required": [
                "feedUri",
                "name",
                "packageAcquisitionLocationOptions",
                "spaceId"
            ],
            "inputProperties": {
                "feedUri": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this helm feed.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "feedUri"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HelmFeed resources.\n",
                "properties": {
                    "feedUri": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "packageAcquisitionLocationOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "password": {
                        "type": "string",
                        "description": "The password associated with this resource.\n",
                        "secret": true
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this helm feed.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username associated with this resource.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/libraryVariableSet:LibraryVariableSet": {
            "description": "This resource manages library variable sets in Octopus Deploy.\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this library variable set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this library variable set.\n"
                },
                "templateIds": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/LibraryVariableSetTemplate:LibraryVariableSetTemplate"
                    }
                },
                "variableSetId": {
                    "type": "string"
                }
            },
            "required": [
                "description",
                "name",
                "spaceId",
                "templateIds",
                "variableSetId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this library variable set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this library variable set.\n"
                },
                "templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/LibraryVariableSetTemplate:LibraryVariableSetTemplate"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LibraryVariableSet resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this library variable set.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this library variable set.\n"
                    },
                    "templateIds": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "templates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/LibraryVariableSetTemplate:LibraryVariableSetTemplate"
                        }
                    },
                    "variableSetId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/lifecycle:Lifecycle": {
            "description": "This resource manages lifecycles in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.Lifecycle(\"example\", {\n    description: \"This is the default lifecycle.\",\n    phases: [\n        {\n            automaticDeploymentTargets: [\"Environments-321\"],\n            name: \"foo\",\n            releaseRetentionPolicies: [{\n                quantityToKeep: 1,\n                shouldKeepForever: false,\n                unit: \"Days\",\n            }],\n            tentacleRetentionPolicies: [{\n                quantityToKeep: 30,\n                shouldKeepForever: false,\n                unit: \"Items\",\n            }],\n        },\n        {\n            isOptionalPhase: true,\n            name: \"bar\",\n            optionalDeploymentTargets: [\"Environments-321\"],\n        },\n    ],\n    releaseRetentionPolicies: [{\n        quantityToKeep: 0,\n        shouldKeepForever: true,\n        unit: \"Days\",\n    }],\n    tentacleRetentionPolicies: [{\n        quantityToKeep: 30,\n        shouldKeepForever: false,\n        unit: \"Items\",\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.Lifecycle(\"example\",\n    description=\"This is the default lifecycle.\",\n    phases=[\n        {\n            \"automatic_deployment_targets\": [\"Environments-321\"],\n            \"name\": \"foo\",\n            \"release_retention_policies\": [{\n                \"quantity_to_keep\": 1,\n                \"should_keep_forever\": False,\n                \"unit\": \"Days\",\n            }],\n            \"tentacle_retention_policies\": [{\n                \"quantity_to_keep\": 30,\n                \"should_keep_forever\": False,\n                \"unit\": \"Items\",\n            }],\n        },\n        {\n            \"is_optional_phase\": True,\n            \"name\": \"bar\",\n            \"optional_deployment_targets\": [\"Environments-321\"],\n        },\n    ],\n    release_retention_policies=[{\n        \"quantity_to_keep\": 0,\n        \"should_keep_forever\": True,\n        \"unit\": \"Days\",\n    }],\n    tentacle_retention_policies=[{\n        \"quantity_to_keep\": 30,\n        \"should_keep_forever\": False,\n        \"unit\": \"Items\",\n    }])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.Lifecycle(\"example\", new()\n    {\n        Description = \"This is the default lifecycle.\",\n        Phases = new[]\n        {\n            new Octopusdeploy.Inputs.LifecyclePhaseArgs\n            {\n                AutomaticDeploymentTargets = new[]\n                {\n                    \"Environments-321\",\n                },\n                Name = \"foo\",\n                ReleaseRetentionPolicies = new[]\n                {\n                    new Octopusdeploy.Inputs.LifecyclePhaseReleaseRetentionPolicyArgs\n                    {\n                        QuantityToKeep = 1,\n                        ShouldKeepForever = false,\n                        Unit = \"Days\",\n                    },\n                },\n                TentacleRetentionPolicies = new[]\n                {\n                    new Octopusdeploy.Inputs.LifecyclePhaseTentacleRetentionPolicyArgs\n                    {\n                        QuantityToKeep = 30,\n                        ShouldKeepForever = false,\n                        Unit = \"Items\",\n                    },\n                },\n            },\n            new Octopusdeploy.Inputs.LifecyclePhaseArgs\n            {\n                IsOptionalPhase = true,\n                Name = \"bar\",\n                OptionalDeploymentTargets = new[]\n                {\n                    \"Environments-321\",\n                },\n            },\n        },\n        ReleaseRetentionPolicies = new[]\n        {\n            new Octopusdeploy.Inputs.LifecycleReleaseRetentionPolicyArgs\n            {\n                QuantityToKeep = 0,\n                ShouldKeepForever = true,\n                Unit = \"Days\",\n            },\n        },\n        TentacleRetentionPolicies = new[]\n        {\n            new Octopusdeploy.Inputs.LifecycleTentacleRetentionPolicyArgs\n            {\n                QuantityToKeep = 30,\n                ShouldKeepForever = false,\n                Unit = \"Items\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewLifecycle(ctx, \"example\", \u0026octopusdeploy.LifecycleArgs{\n\t\t\tDescription: pulumi.String(\"This is the default lifecycle.\"),\n\t\t\tPhases: octopusdeploy.LifecyclePhaseArray{\n\t\t\t\t\u0026octopusdeploy.LifecyclePhaseArgs{\n\t\t\t\t\tAutomaticDeploymentTargets: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"Environments-321\"),\n\t\t\t\t\t},\n\t\t\t\t\tName: pulumi.String(\"foo\"),\n\t\t\t\t\tReleaseRetentionPolicies: octopusdeploy.LifecyclePhaseReleaseRetentionPolicyArray{\n\t\t\t\t\t\t\u0026octopusdeploy.LifecyclePhaseReleaseRetentionPolicyArgs{\n\t\t\t\t\t\t\tQuantityToKeep:    pulumi.Int(1),\n\t\t\t\t\t\t\tShouldKeepForever: pulumi.Bool(false),\n\t\t\t\t\t\t\tUnit:              pulumi.String(\"Days\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tTentacleRetentionPolicies: octopusdeploy.LifecyclePhaseTentacleRetentionPolicyArray{\n\t\t\t\t\t\t\u0026octopusdeploy.LifecyclePhaseTentacleRetentionPolicyArgs{\n\t\t\t\t\t\t\tQuantityToKeep:    pulumi.Int(30),\n\t\t\t\t\t\t\tShouldKeepForever: pulumi.Bool(false),\n\t\t\t\t\t\t\tUnit:              pulumi.String(\"Items\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026octopusdeploy.LifecyclePhaseArgs{\n\t\t\t\t\tIsOptionalPhase: pulumi.Bool(true),\n\t\t\t\t\tName:            pulumi.String(\"bar\"),\n\t\t\t\t\tOptionalDeploymentTargets: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"Environments-321\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tReleaseRetentionPolicies: octopusdeploy.LifecycleReleaseRetentionPolicyArray{\n\t\t\t\t\u0026octopusdeploy.LifecycleReleaseRetentionPolicyArgs{\n\t\t\t\t\tQuantityToKeep:    pulumi.Int(0),\n\t\t\t\t\tShouldKeepForever: pulumi.Bool(true),\n\t\t\t\t\tUnit:              pulumi.String(\"Days\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTentacleRetentionPolicies: octopusdeploy.LifecycleTentacleRetentionPolicyArray{\n\t\t\t\t\u0026octopusdeploy.LifecycleTentacleRetentionPolicyArgs{\n\t\t\t\t\tQuantityToKeep:    pulumi.Int(30),\n\t\t\t\t\tShouldKeepForever: pulumi.Bool(false),\n\t\t\t\t\tUnit:              pulumi.String(\"Items\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.Lifecycle;\nimport com.pulumi.octopusdeploy.LifecycleArgs;\nimport com.pulumi.octopusdeploy.inputs.LifecyclePhaseArgs;\nimport com.pulumi.octopusdeploy.inputs.LifecycleReleaseRetentionPolicyArgs;\nimport com.pulumi.octopusdeploy.inputs.LifecycleTentacleRetentionPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Lifecycle(\"example\", LifecycleArgs.builder()\n            .description(\"This is the default lifecycle.\")\n            .phases(            \n                LifecyclePhaseArgs.builder()\n                    .automaticDeploymentTargets(\"Environments-321\")\n                    .name(\"foo\")\n                    .releaseRetentionPolicies(LifecyclePhaseReleaseRetentionPolicyArgs.builder()\n                        .quantityToKeep(1)\n                        .shouldKeepForever(false)\n                        .unit(\"Days\")\n                        .build())\n                    .tentacleRetentionPolicies(LifecyclePhaseTentacleRetentionPolicyArgs.builder()\n                        .quantityToKeep(30)\n                        .shouldKeepForever(false)\n                        .unit(\"Items\")\n                        .build())\n                    .build(),\n                LifecyclePhaseArgs.builder()\n                    .isOptionalPhase(true)\n                    .name(\"bar\")\n                    .optionalDeploymentTargets(\"Environments-321\")\n                    .build())\n            .releaseRetentionPolicies(LifecycleReleaseRetentionPolicyArgs.builder()\n                .quantityToKeep(0)\n                .shouldKeepForever(true)\n                .unit(\"Days\")\n                .build())\n            .tentacleRetentionPolicies(LifecycleTentacleRetentionPolicyArgs.builder()\n                .quantityToKeep(30)\n                .shouldKeepForever(false)\n                .unit(\"Items\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:Lifecycle\n    properties:\n      description: This is the default lifecycle.\n      phases:\n        - automaticDeploymentTargets:\n            - Environments-321\n          name: foo\n          releaseRetentionPolicies:\n            - quantityToKeep: 1\n              shouldKeepForever: false\n              unit: Days\n          tentacleRetentionPolicies:\n            - quantityToKeep: 30\n              shouldKeepForever: false\n              unit: Items\n        - isOptionalPhase: true\n          name: bar\n          optionalDeploymentTargets:\n            - Environments-321\n      releaseRetentionPolicies:\n        - quantityToKeep: 0\n          shouldKeepForever: true\n          unit: Days\n      tentacleRetentionPolicies:\n        - quantityToKeep: 30\n          shouldKeepForever: false\n          unit: Items\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/lifecycle:Lifecycle [options] octopusdeploy_lifecycle.\u003cname\u003e \u003clifecycle-id\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this lifecycle.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "phases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/LifecyclePhase:LifecyclePhase"
                    },
                    "description": "Defines a phase in the lifecycle.\n"
                },
                "releaseRetentionPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/LifecycleReleaseRetentionPolicy:LifecycleReleaseRetentionPolicy"
                    },
                    "description": "Defines the retention policy for releases or tentacles.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tentacleRetentionPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/LifecycleTentacleRetentionPolicy:LifecycleTentacleRetentionPolicy"
                    },
                    "description": "Defines the retention policy for releases or tentacles.\n"
                }
            },
            "required": [
                "description",
                "name",
                "spaceId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this lifecycle.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "phases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/LifecyclePhase:LifecyclePhase"
                    },
                    "description": "Defines a phase in the lifecycle.\n"
                },
                "releaseRetentionPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/LifecycleReleaseRetentionPolicy:LifecycleReleaseRetentionPolicy"
                    },
                    "description": "Defines the retention policy for releases or tentacles.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tentacleRetentionPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/LifecycleTentacleRetentionPolicy:LifecycleTentacleRetentionPolicy"
                    },
                    "description": "Defines the retention policy for releases or tentacles.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Lifecycle resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this lifecycle.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "phases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/LifecyclePhase:LifecyclePhase"
                        },
                        "description": "Defines a phase in the lifecycle.\n"
                    },
                    "releaseRetentionPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/LifecycleReleaseRetentionPolicy:LifecycleReleaseRetentionPolicy"
                        },
                        "description": "Defines the retention policy for releases or tentacles.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "tentacleRetentionPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/LifecycleTentacleRetentionPolicy:LifecycleTentacleRetentionPolicy"
                        },
                        "description": "Defines the retention policy for releases or tentacles.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/mavenFeed:MavenFeed": {
            "description": "This resource manages a Maven feed in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.MavenFeed(\"example\", {\n    downloadAttempts: 10,\n    downloadRetryBackoffSeconds: 20,\n    feedUri: \"https://repo.maven.apache.org/maven2/\",\n    password: \"test-password\",\n    username: \"test-username\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.MavenFeed(\"example\",\n    download_attempts=10,\n    download_retry_backoff_seconds=20,\n    feed_uri=\"https://repo.maven.apache.org/maven2/\",\n    password=\"test-password\",\n    username=\"test-username\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.MavenFeed(\"example\", new()\n    {\n        DownloadAttempts = 10,\n        DownloadRetryBackoffSeconds = 20,\n        FeedUri = \"https://repo.maven.apache.org/maven2/\",\n        Password = \"test-password\",\n        Username = \"test-username\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewMavenFeed(ctx, \"example\", \u0026octopusdeploy.MavenFeedArgs{\n\t\t\tDownloadAttempts:            pulumi.Int(10),\n\t\t\tDownloadRetryBackoffSeconds: pulumi.Int(20),\n\t\t\tFeedUri:                     pulumi.String(\"https://repo.maven.apache.org/maven2/\"),\n\t\t\tPassword:                    pulumi.String(\"test-password\"),\n\t\t\tUsername:                    pulumi.String(\"test-username\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.MavenFeed;\nimport com.pulumi.octopusdeploy.MavenFeedArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new MavenFeed(\"example\", MavenFeedArgs.builder()\n            .downloadAttempts(10)\n            .downloadRetryBackoffSeconds(20)\n            .feedUri(\"https://repo.maven.apache.org/maven2/\")\n            .password(\"test-password\")\n            .username(\"test-username\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:MavenFeed\n    properties:\n      downloadAttempts: 10\n      downloadRetryBackoffSeconds: 20\n      feedUri: https://repo.maven.apache.org/maven2/\n      password: test-password\n      username: test-username\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/mavenFeed:MavenFeed [options] octopusdeploy_maven_feed.\u003cname\u003e \u003cfeed-id\u003e\n```\n\n",
            "properties": {
                "downloadAttempts": {
                    "type": "integer",
                    "description": "The number of times a deployment should attempt to download a package from this feed before failing.\n"
                },
                "downloadRetryBackoffSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to apply as a linear back off between download attempts.\n"
                },
                "feedUri": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this maven feed.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "required": [
                "downloadAttempts",
                "downloadRetryBackoffSeconds",
                "feedUri",
                "name",
                "packageAcquisitionLocationOptions",
                "spaceId"
            ],
            "inputProperties": {
                "downloadAttempts": {
                    "type": "integer",
                    "description": "The number of times a deployment should attempt to download a package from this feed before failing.\n"
                },
                "downloadRetryBackoffSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to apply as a linear back off between download attempts.\n"
                },
                "feedUri": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this maven feed.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "feedUri"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MavenFeed resources.\n",
                "properties": {
                    "downloadAttempts": {
                        "type": "integer",
                        "description": "The number of times a deployment should attempt to download a package from this feed before failing.\n"
                    },
                    "downloadRetryBackoffSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to apply as a linear back off between download attempts.\n"
                    },
                    "feedUri": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "packageAcquisitionLocationOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "password": {
                        "type": "string",
                        "description": "The password associated with this resource.\n",
                        "secret": true
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this maven feed.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username associated with this resource.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/nugetFeed:NugetFeed": {
            "description": "This resource manages a Nuget feed in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.NugetFeed(\"example\", {\n    downloadAttempts: 1,\n    downloadRetryBackoffSeconds: 30,\n    feedUri: \"https://api.nuget.org/v3/index.json\",\n    isEnhancedMode: true,\n    password: \"test-password\",\n    username: \"test-username\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.NugetFeed(\"example\",\n    download_attempts=1,\n    download_retry_backoff_seconds=30,\n    feed_uri=\"https://api.nuget.org/v3/index.json\",\n    is_enhanced_mode=True,\n    password=\"test-password\",\n    username=\"test-username\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.NugetFeed(\"example\", new()\n    {\n        DownloadAttempts = 1,\n        DownloadRetryBackoffSeconds = 30,\n        FeedUri = \"https://api.nuget.org/v3/index.json\",\n        IsEnhancedMode = true,\n        Password = \"test-password\",\n        Username = \"test-username\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewNugetFeed(ctx, \"example\", \u0026octopusdeploy.NugetFeedArgs{\n\t\t\tDownloadAttempts:            pulumi.Int(1),\n\t\t\tDownloadRetryBackoffSeconds: pulumi.Int(30),\n\t\t\tFeedUri:                     pulumi.String(\"https://api.nuget.org/v3/index.json\"),\n\t\t\tIsEnhancedMode:              pulumi.Bool(true),\n\t\t\tPassword:                    pulumi.String(\"test-password\"),\n\t\t\tUsername:                    pulumi.String(\"test-username\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.NugetFeed;\nimport com.pulumi.octopusdeploy.NugetFeedArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NugetFeed(\"example\", NugetFeedArgs.builder()\n            .downloadAttempts(1)\n            .downloadRetryBackoffSeconds(30)\n            .feedUri(\"https://api.nuget.org/v3/index.json\")\n            .isEnhancedMode(true)\n            .password(\"test-password\")\n            .username(\"test-username\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:NugetFeed\n    properties:\n      downloadAttempts: 1\n      downloadRetryBackoffSeconds: 30\n      feedUri: https://api.nuget.org/v3/index.json\n      isEnhancedMode: true\n      password: test-password\n      username: test-username\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/nugetFeed:NugetFeed [options] octopusdeploy_nuget_feed.\u003cname\u003e \u003cfeed-id\u003e\n```\n\n",
            "properties": {
                "downloadAttempts": {
                    "type": "integer",
                    "description": "The number of times a deployment should attempt to download a package from this feed before failing.\n"
                },
                "downloadRetryBackoffSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to apply as a linear back off between download attempts.\n"
                },
                "feedUri": {
                    "type": "string"
                },
                "isEnhancedMode": {
                    "type": "boolean",
                    "description": "This will improve performance of the NuGet feed but may not be supported by some older feeds. Disable if the operation, Create Release does not return the latest version for a package.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this nuget feed.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "required": [
                "downloadAttempts",
                "downloadRetryBackoffSeconds",
                "feedUri",
                "isEnhancedMode",
                "name",
                "packageAcquisitionLocationOptions",
                "spaceId"
            ],
            "inputProperties": {
                "downloadAttempts": {
                    "type": "integer",
                    "description": "The number of times a deployment should attempt to download a package from this feed before failing.\n"
                },
                "downloadRetryBackoffSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to apply as a linear back off between download attempts.\n"
                },
                "feedUri": {
                    "type": "string"
                },
                "isEnhancedMode": {
                    "type": "boolean",
                    "description": "This will improve performance of the NuGet feed but may not be supported by some older feeds. Disable if the operation, Create Release does not return the latest version for a package.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this nuget feed.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "feedUri"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NugetFeed resources.\n",
                "properties": {
                    "downloadAttempts": {
                        "type": "integer",
                        "description": "The number of times a deployment should attempt to download a package from this feed before failing.\n"
                    },
                    "downloadRetryBackoffSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to apply as a linear back off between download attempts.\n"
                    },
                    "feedUri": {
                        "type": "string"
                    },
                    "isEnhancedMode": {
                        "type": "boolean",
                        "description": "This will improve performance of the NuGet feed but may not be supported by some older feeds. Disable if the operation, Create Release does not return the latest version for a package.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "packageAcquisitionLocationOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "password": {
                        "type": "string",
                        "description": "The password associated with this resource.\n",
                        "secret": true
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this nuget feed.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username associated with this resource.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/project:Project": {
            "description": "This resource manages projects in Octopus Deploy.\n\n\u003e Credentials are stored in state as plaintext. Read more about sensitive data in state.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.Project(\"example\", {\n    autoCreateRelease: false,\n    defaultGuidedFailureMode: \"EnvironmentDefault\",\n    defaultToSkipIfAlreadyInstalled: false,\n    description: \"The development project.\",\n    discreteChannelRelease: false,\n    isDisabled: false,\n    isDiscreteChannelRelease: false,\n    isVersionControlled: false,\n    lifecycleId: \"Lifecycles-123\",\n    projectGroupId: \"ProjectGroups-123\",\n    tenantedDeploymentParticipation: \"TenantedOrUntenanted\",\n    includedLibraryVariableSets: [\n        \"LibraryVariablesSets-456\",\n        \"LibraryVariablesSets-789\",\n    ],\n    connectivityPolicies: [{\n        allowDeploymentsToNoTargets: false,\n        excludeUnhealthyTargets: false,\n        skipMachineBehavior: \"SkipUnavailableMachines\",\n    }],\n    jiraServiceManagementExtensionSettings: [{\n        connectionId: \"133d7fe602514060a48bc42ee9870f99\",\n        isEnabled: false,\n        serviceDeskProjectName: \"Test Service Desk Project (OK to Delete)\",\n    }],\n    servicenowExtensionSettings: [{\n        connectionId: \"989034685e2c48c4b06a29286c9ef5cc\",\n        isEnabled: false,\n        isStateAutomaticallyTransitioned: false,\n        standardChangeTemplateName: \"Standard Change Template Name (OK to Delete)\",\n    }],\n    templates: [{\n        defaultValue: \"example-default-value\",\n        helpText: \"example-help-test\",\n        label: \"example-label\",\n        name: \"example-template-value\",\n        displaySettings: {\n            \"Octopus.ControlType\": \"SingleLineText\",\n        },\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.Project(\"example\",\n    auto_create_release=False,\n    default_guided_failure_mode=\"EnvironmentDefault\",\n    default_to_skip_if_already_installed=False,\n    description=\"The development project.\",\n    discrete_channel_release=False,\n    is_disabled=False,\n    is_discrete_channel_release=False,\n    is_version_controlled=False,\n    lifecycle_id=\"Lifecycles-123\",\n    project_group_id=\"ProjectGroups-123\",\n    tenanted_deployment_participation=\"TenantedOrUntenanted\",\n    included_library_variable_sets=[\n        \"LibraryVariablesSets-456\",\n        \"LibraryVariablesSets-789\",\n    ],\n    connectivity_policies=[{\n        \"allow_deployments_to_no_targets\": False,\n        \"exclude_unhealthy_targets\": False,\n        \"skip_machine_behavior\": \"SkipUnavailableMachines\",\n    }],\n    jira_service_management_extension_settings=[{\n        \"connection_id\": \"133d7fe602514060a48bc42ee9870f99\",\n        \"is_enabled\": False,\n        \"service_desk_project_name\": \"Test Service Desk Project (OK to Delete)\",\n    }],\n    servicenow_extension_settings=[{\n        \"connection_id\": \"989034685e2c48c4b06a29286c9ef5cc\",\n        \"is_enabled\": False,\n        \"is_state_automatically_transitioned\": False,\n        \"standard_change_template_name\": \"Standard Change Template Name (OK to Delete)\",\n    }],\n    templates=[{\n        \"default_value\": \"example-default-value\",\n        \"help_text\": \"example-help-test\",\n        \"label\": \"example-label\",\n        \"name\": \"example-template-value\",\n        \"display_settings\": {\n            \"octopus__control_type\": \"SingleLineText\",\n        },\n    }])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.Project(\"example\", new()\n    {\n        AutoCreateRelease = false,\n        DefaultGuidedFailureMode = \"EnvironmentDefault\",\n        DefaultToSkipIfAlreadyInstalled = false,\n        Description = \"The development project.\",\n        DiscreteChannelRelease = false,\n        IsDisabled = false,\n        IsDiscreteChannelRelease = false,\n        IsVersionControlled = false,\n        LifecycleId = \"Lifecycles-123\",\n        ProjectGroupId = \"ProjectGroups-123\",\n        TenantedDeploymentParticipation = \"TenantedOrUntenanted\",\n        IncludedLibraryVariableSets = new[]\n        {\n            \"LibraryVariablesSets-456\",\n            \"LibraryVariablesSets-789\",\n        },\n        ConnectivityPolicies = new[]\n        {\n            new Octopusdeploy.Inputs.ProjectConnectivityPolicyArgs\n            {\n                AllowDeploymentsToNoTargets = false,\n                ExcludeUnhealthyTargets = false,\n                SkipMachineBehavior = \"SkipUnavailableMachines\",\n            },\n        },\n        JiraServiceManagementExtensionSettings = new[]\n        {\n            new Octopusdeploy.Inputs.ProjectJiraServiceManagementExtensionSettingArgs\n            {\n                ConnectionId = \"133d7fe602514060a48bc42ee9870f99\",\n                IsEnabled = false,\n                ServiceDeskProjectName = \"Test Service Desk Project (OK to Delete)\",\n            },\n        },\n        ServicenowExtensionSettings = new[]\n        {\n            new Octopusdeploy.Inputs.ProjectServicenowExtensionSettingArgs\n            {\n                ConnectionId = \"989034685e2c48c4b06a29286c9ef5cc\",\n                IsEnabled = false,\n                IsStateAutomaticallyTransitioned = false,\n                StandardChangeTemplateName = \"Standard Change Template Name (OK to Delete)\",\n            },\n        },\n        Templates = new[]\n        {\n            new Octopusdeploy.Inputs.ProjectTemplateArgs\n            {\n                DefaultValue = \"example-default-value\",\n                HelpText = \"example-help-test\",\n                Label = \"example-label\",\n                Name = \"example-template-value\",\n                DisplaySettings = \n                {\n                    { \"Octopus.ControlType\", \"SingleLineText\" },\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewProject(ctx, \"example\", \u0026octopusdeploy.ProjectArgs{\n\t\t\tAutoCreateRelease:               pulumi.Bool(false),\n\t\t\tDefaultGuidedFailureMode:        pulumi.String(\"EnvironmentDefault\"),\n\t\t\tDefaultToSkipIfAlreadyInstalled: pulumi.Bool(false),\n\t\t\tDescription:                     pulumi.String(\"The development project.\"),\n\t\t\tDiscreteChannelRelease:          pulumi.Bool(false),\n\t\t\tIsDisabled:                      pulumi.Bool(false),\n\t\t\tIsDiscreteChannelRelease:        pulumi.Bool(false),\n\t\t\tIsVersionControlled:             pulumi.Bool(false),\n\t\t\tLifecycleId:                     pulumi.String(\"Lifecycles-123\"),\n\t\t\tProjectGroupId:                  pulumi.String(\"ProjectGroups-123\"),\n\t\t\tTenantedDeploymentParticipation: pulumi.String(\"TenantedOrUntenanted\"),\n\t\t\tIncludedLibraryVariableSets: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"LibraryVariablesSets-456\"),\n\t\t\t\tpulumi.String(\"LibraryVariablesSets-789\"),\n\t\t\t},\n\t\t\tConnectivityPolicies: octopusdeploy.ProjectConnectivityPolicyArray{\n\t\t\t\t\u0026octopusdeploy.ProjectConnectivityPolicyArgs{\n\t\t\t\t\tAllowDeploymentsToNoTargets: pulumi.Bool(false),\n\t\t\t\t\tExcludeUnhealthyTargets:     pulumi.Bool(false),\n\t\t\t\t\tSkipMachineBehavior:         pulumi.String(\"SkipUnavailableMachines\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tJiraServiceManagementExtensionSettings: octopusdeploy.ProjectJiraServiceManagementExtensionSettingArray{\n\t\t\t\t\u0026octopusdeploy.ProjectJiraServiceManagementExtensionSettingArgs{\n\t\t\t\t\tConnectionId:           pulumi.String(\"133d7fe602514060a48bc42ee9870f99\"),\n\t\t\t\t\tIsEnabled:              pulumi.Bool(false),\n\t\t\t\t\tServiceDeskProjectName: pulumi.String(\"Test Service Desk Project (OK to Delete)\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tServicenowExtensionSettings: octopusdeploy.ProjectServicenowExtensionSettingArray{\n\t\t\t\t\u0026octopusdeploy.ProjectServicenowExtensionSettingArgs{\n\t\t\t\t\tConnectionId:                     pulumi.String(\"989034685e2c48c4b06a29286c9ef5cc\"),\n\t\t\t\t\tIsEnabled:                        pulumi.Bool(false),\n\t\t\t\t\tIsStateAutomaticallyTransitioned: pulumi.Bool(false),\n\t\t\t\t\tStandardChangeTemplateName:       pulumi.String(\"Standard Change Template Name (OK to Delete)\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTemplates: octopusdeploy.ProjectTemplateArray{\n\t\t\t\t\u0026octopusdeploy.ProjectTemplateArgs{\n\t\t\t\t\tDefaultValue: pulumi.String(\"example-default-value\"),\n\t\t\t\t\tHelpText:     pulumi.String(\"example-help-test\"),\n\t\t\t\t\tLabel:        pulumi.String(\"example-label\"),\n\t\t\t\t\tName:         pulumi.String(\"example-template-value\"),\n\t\t\t\t\tDisplaySettings: pulumi.StringMap{\n\t\t\t\t\t\t\"Octopus.ControlType\": pulumi.String(\"SingleLineText\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.Project;\nimport com.pulumi.octopusdeploy.ProjectArgs;\nimport com.pulumi.octopusdeploy.inputs.ProjectConnectivityPolicyArgs;\nimport com.pulumi.octopusdeploy.inputs.ProjectJiraServiceManagementExtensionSettingArgs;\nimport com.pulumi.octopusdeploy.inputs.ProjectServicenowExtensionSettingArgs;\nimport com.pulumi.octopusdeploy.inputs.ProjectTemplateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Project(\"example\", ProjectArgs.builder()\n            .autoCreateRelease(false)\n            .defaultGuidedFailureMode(\"EnvironmentDefault\")\n            .defaultToSkipIfAlreadyInstalled(false)\n            .description(\"The development project.\")\n            .discreteChannelRelease(false)\n            .isDisabled(false)\n            .isDiscreteChannelRelease(false)\n            .isVersionControlled(false)\n            .lifecycleId(\"Lifecycles-123\")\n            .projectGroupId(\"ProjectGroups-123\")\n            .tenantedDeploymentParticipation(\"TenantedOrUntenanted\")\n            .includedLibraryVariableSets(            \n                \"LibraryVariablesSets-456\",\n                \"LibraryVariablesSets-789\")\n            .connectivityPolicies(ProjectConnectivityPolicyArgs.builder()\n                .allowDeploymentsToNoTargets(false)\n                .excludeUnhealthyTargets(false)\n                .skipMachineBehavior(\"SkipUnavailableMachines\")\n                .build())\n            .jiraServiceManagementExtensionSettings(ProjectJiraServiceManagementExtensionSettingArgs.builder()\n                .connectionId(\"133d7fe602514060a48bc42ee9870f99\")\n                .isEnabled(false)\n                .serviceDeskProjectName(\"Test Service Desk Project (OK to Delete)\")\n                .build())\n            .servicenowExtensionSettings(ProjectServicenowExtensionSettingArgs.builder()\n                .connectionId(\"989034685e2c48c4b06a29286c9ef5cc\")\n                .isEnabled(false)\n                .isStateAutomaticallyTransitioned(false)\n                .standardChangeTemplateName(\"Standard Change Template Name (OK to Delete)\")\n                .build())\n            .templates(ProjectTemplateArgs.builder()\n                .defaultValue(\"example-default-value\")\n                .helpText(\"example-help-test\")\n                .label(\"example-label\")\n                .name(\"example-template-value\")\n                .displaySettings(Map.of(\"Octopus.ControlType\", \"SingleLineText\"))\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:Project\n    properties:\n      autoCreateRelease: false\n      defaultGuidedFailureMode: EnvironmentDefault\n      defaultToSkipIfAlreadyInstalled: false\n      description: The development project.\n      discreteChannelRelease: false\n      isDisabled: false\n      isDiscreteChannelRelease: false\n      isVersionControlled: false\n      lifecycleId: Lifecycles-123\n      projectGroupId: ProjectGroups-123\n      tenantedDeploymentParticipation: TenantedOrUntenanted\n      includedLibraryVariableSets:\n        - LibraryVariablesSets-456\n        - LibraryVariablesSets-789\n      connectivityPolicies:\n        - allowDeploymentsToNoTargets: false\n          excludeUnhealthyTargets: false\n          skipMachineBehavior: SkipUnavailableMachines\n      jiraServiceManagementExtensionSettings:\n        - connectionId: 133d7fe602514060a48bc42ee9870f99\n          isEnabled: false\n          serviceDeskProjectName: Test Service Desk Project (OK to Delete)\n      servicenowExtensionSettings:\n        - connectionId: 989034685e2c48c4b06a29286c9ef5cc\n          isEnabled: false\n          isStateAutomaticallyTransitioned: false\n          standardChangeTemplateName: Standard Change Template Name (OK to Delete)\n      templates:\n        - defaultValue: example-default-value\n          helpText: example-help-test\n          label: example-label\n          name: example-template-value\n          displaySettings:\n            Octopus.ControlType: SingleLineText\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/project:Project [options] octopusdeploy_project.\u003cname\u003e \u003cproject-id\u003e\n```\n\n",
            "properties": {
                "allowDeploymentsToNoTargets": {
                    "type": "boolean",
                    "deprecationMessage": "This value is only valid for an associated connectivity policy and should not be specified here."
                },
                "autoCreateRelease": {
                    "type": "boolean"
                },
                "autoDeployReleaseOverrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectAutoDeployReleaseOverride:ProjectAutoDeployReleaseOverride"
                    }
                },
                "clonedFromProjectId": {
                    "type": "string",
                    "description": "The ID of the project this project was cloned from.\n"
                },
                "connectivityPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectConnectivityPolicy:ProjectConnectivityPolicy"
                    }
                },
                "defaultGuidedFailureMode": {
                    "type": "string"
                },
                "defaultToSkipIfAlreadyInstalled": {
                    "type": "boolean"
                },
                "deploymentChangesTemplate": {
                    "type": "string"
                },
                "deploymentProcessId": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this project.\n"
                },
                "discreteChannelRelease": {
                    "type": "boolean",
                    "description": "Treats releases of different channels to the same environment as a separate deployment dimension\n"
                },
                "gitAnonymousPersistenceSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectGitAnonymousPersistenceSetting:ProjectGitAnonymousPersistenceSetting"
                    },
                    "description": "Provides Git-related persistence settings for a version-controlled project.\n"
                },
                "gitLibraryPersistenceSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectGitLibraryPersistenceSetting:ProjectGitLibraryPersistenceSetting"
                    },
                    "description": "Provides Git-related persistence settings for a version-controlled project.\n"
                },
                "gitUsernamePasswordPersistenceSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectGitUsernamePasswordPersistenceSetting:ProjectGitUsernamePasswordPersistenceSetting"
                    },
                    "description": "Provides Git-related persistence settings for a version-controlled project.\n"
                },
                "includedLibraryVariableSets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of included library variable set IDs.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isDiscreteChannelRelease": {
                    "type": "boolean",
                    "description": "Treats releases of different channels to the same environment as a separate deployment dimension\n"
                },
                "isVersionControlled": {
                    "type": "boolean"
                },
                "jiraServiceManagementExtensionSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectJiraServiceManagementExtensionSetting:ProjectJiraServiceManagementExtensionSetting"
                    },
                    "description": "Provides extension settings for the Jira Service Management (JSM) integration for this project.\n"
                },
                "lifecycleId": {
                    "type": "string",
                    "description": "The lifecycle ID associated with this project.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "projectGroupId": {
                    "type": "string",
                    "description": "The project group ID associated with this project.\n"
                },
                "releaseCreationStrategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectReleaseCreationStrategy:ProjectReleaseCreationStrategy"
                    }
                },
                "releaseNotesTemplate": {
                    "type": "string"
                },
                "servicenowExtensionSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectServicenowExtensionSetting:ProjectServicenowExtensionSetting"
                    },
                    "description": "Provides extension settings for the ServiceNow integration for this project.\n"
                },
                "slug": {
                    "type": "string",
                    "description": "A human-readable, unique identifier, used to identify a project.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this project.\n"
                },
                "templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectTemplate:ProjectTemplate"
                    }
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "variableSetId": {
                    "type": "string"
                },
                "versioningStrategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectVersioningStrategy:ProjectVersioningStrategy"
                    }
                }
            },
            "required": [
                "autoCreateRelease",
                "defaultGuidedFailureMode",
                "defaultToSkipIfAlreadyInstalled",
                "deploymentChangesTemplate",
                "deploymentProcessId",
                "description",
                "discreteChannelRelease",
                "includedLibraryVariableSets",
                "isDisabled",
                "isDiscreteChannelRelease",
                "isVersionControlled",
                "lifecycleId",
                "name",
                "projectGroupId",
                "releaseNotesTemplate",
                "slug",
                "spaceId",
                "tenantedDeploymentParticipation",
                "variableSetId"
            ],
            "inputProperties": {
                "allowDeploymentsToNoTargets": {
                    "type": "boolean",
                    "deprecationMessage": "This value is only valid for an associated connectivity policy and should not be specified here."
                },
                "autoCreateRelease": {
                    "type": "boolean"
                },
                "autoDeployReleaseOverrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectAutoDeployReleaseOverride:ProjectAutoDeployReleaseOverride"
                    }
                },
                "clonedFromProjectId": {
                    "type": "string",
                    "description": "The ID of the project this project was cloned from.\n"
                },
                "connectivityPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectConnectivityPolicy:ProjectConnectivityPolicy"
                    }
                },
                "defaultGuidedFailureMode": {
                    "type": "string"
                },
                "defaultToSkipIfAlreadyInstalled": {
                    "type": "boolean"
                },
                "deploymentChangesTemplate": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this project.\n"
                },
                "discreteChannelRelease": {
                    "type": "boolean",
                    "description": "Treats releases of different channels to the same environment as a separate deployment dimension\n"
                },
                "gitAnonymousPersistenceSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectGitAnonymousPersistenceSetting:ProjectGitAnonymousPersistenceSetting"
                    },
                    "description": "Provides Git-related persistence settings for a version-controlled project.\n"
                },
                "gitLibraryPersistenceSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectGitLibraryPersistenceSetting:ProjectGitLibraryPersistenceSetting"
                    },
                    "description": "Provides Git-related persistence settings for a version-controlled project.\n"
                },
                "gitUsernamePasswordPersistenceSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectGitUsernamePasswordPersistenceSetting:ProjectGitUsernamePasswordPersistenceSetting"
                    },
                    "description": "Provides Git-related persistence settings for a version-controlled project.\n"
                },
                "includedLibraryVariableSets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of included library variable set IDs.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isDiscreteChannelRelease": {
                    "type": "boolean",
                    "description": "Treats releases of different channels to the same environment as a separate deployment dimension\n"
                },
                "isVersionControlled": {
                    "type": "boolean"
                },
                "jiraServiceManagementExtensionSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectJiraServiceManagementExtensionSetting:ProjectJiraServiceManagementExtensionSetting"
                    },
                    "description": "Provides extension settings for the Jira Service Management (JSM) integration for this project.\n"
                },
                "lifecycleId": {
                    "type": "string",
                    "description": "The lifecycle ID associated with this project.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "projectGroupId": {
                    "type": "string",
                    "description": "The project group ID associated with this project.\n"
                },
                "releaseCreationStrategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectReleaseCreationStrategy:ProjectReleaseCreationStrategy"
                    }
                },
                "releaseNotesTemplate": {
                    "type": "string"
                },
                "servicenowExtensionSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectServicenowExtensionSetting:ProjectServicenowExtensionSetting"
                    },
                    "description": "Provides extension settings for the ServiceNow integration for this project.\n"
                },
                "slug": {
                    "type": "string",
                    "description": "A human-readable, unique identifier, used to identify a project.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this project.\n"
                },
                "templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectTemplate:ProjectTemplate"
                    }
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "versioningStrategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectVersioningStrategy:ProjectVersioningStrategy"
                    }
                }
            },
            "requiredInputs": [
                "lifecycleId",
                "projectGroupId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Project resources.\n",
                "properties": {
                    "allowDeploymentsToNoTargets": {
                        "type": "boolean",
                        "deprecationMessage": "This value is only valid for an associated connectivity policy and should not be specified here."
                    },
                    "autoCreateRelease": {
                        "type": "boolean"
                    },
                    "autoDeployReleaseOverrides": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/ProjectAutoDeployReleaseOverride:ProjectAutoDeployReleaseOverride"
                        }
                    },
                    "clonedFromProjectId": {
                        "type": "string",
                        "description": "The ID of the project this project was cloned from.\n"
                    },
                    "connectivityPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/ProjectConnectivityPolicy:ProjectConnectivityPolicy"
                        }
                    },
                    "defaultGuidedFailureMode": {
                        "type": "string"
                    },
                    "defaultToSkipIfAlreadyInstalled": {
                        "type": "boolean"
                    },
                    "deploymentChangesTemplate": {
                        "type": "string"
                    },
                    "deploymentProcessId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this project.\n"
                    },
                    "discreteChannelRelease": {
                        "type": "boolean",
                        "description": "Treats releases of different channels to the same environment as a separate deployment dimension\n"
                    },
                    "gitAnonymousPersistenceSettings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/ProjectGitAnonymousPersistenceSetting:ProjectGitAnonymousPersistenceSetting"
                        },
                        "description": "Provides Git-related persistence settings for a version-controlled project.\n"
                    },
                    "gitLibraryPersistenceSettings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/ProjectGitLibraryPersistenceSetting:ProjectGitLibraryPersistenceSetting"
                        },
                        "description": "Provides Git-related persistence settings for a version-controlled project.\n"
                    },
                    "gitUsernamePasswordPersistenceSettings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/ProjectGitUsernamePasswordPersistenceSetting:ProjectGitUsernamePasswordPersistenceSetting"
                        },
                        "description": "Provides Git-related persistence settings for a version-controlled project.\n"
                    },
                    "includedLibraryVariableSets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of included library variable set IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "isDiscreteChannelRelease": {
                        "type": "boolean",
                        "description": "Treats releases of different channels to the same environment as a separate deployment dimension\n"
                    },
                    "isVersionControlled": {
                        "type": "boolean"
                    },
                    "jiraServiceManagementExtensionSettings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/ProjectJiraServiceManagementExtensionSetting:ProjectJiraServiceManagementExtensionSetting"
                        },
                        "description": "Provides extension settings for the Jira Service Management (JSM) integration for this project.\n"
                    },
                    "lifecycleId": {
                        "type": "string",
                        "description": "The lifecycle ID associated with this project.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "projectGroupId": {
                        "type": "string",
                        "description": "The project group ID associated with this project.\n"
                    },
                    "releaseCreationStrategies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/ProjectReleaseCreationStrategy:ProjectReleaseCreationStrategy"
                        }
                    },
                    "releaseNotesTemplate": {
                        "type": "string"
                    },
                    "servicenowExtensionSettings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/ProjectServicenowExtensionSetting:ProjectServicenowExtensionSetting"
                        },
                        "description": "Provides extension settings for the ServiceNow integration for this project.\n"
                    },
                    "slug": {
                        "type": "string",
                        "description": "A human-readable, unique identifier, used to identify a project.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this project.\n"
                    },
                    "templates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/ProjectTemplate:ProjectTemplate"
                        }
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "variableSetId": {
                        "type": "string"
                    },
                    "versioningStrategies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/ProjectVersioningStrategy:ProjectVersioningStrategy"
                        }
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/projectGroup:ProjectGroup": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.ProjectGroup(\"example\", {description: \"The development project group.\"});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.ProjectGroup(\"example\", description=\"The development project group.\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.ProjectGroup(\"example\", new()\n    {\n        Description = \"The development project group.\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewProjectGroup(ctx, \"example\", \u0026octopusdeploy.ProjectGroupArgs{\n\t\t\tDescription: pulumi.String(\"The development project group.\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.ProjectGroup;\nimport com.pulumi.octopusdeploy.ProjectGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ProjectGroup(\"example\", ProjectGroupArgs.builder()\n            .description(\"The development project group.\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:ProjectGroup\n    properties:\n      description: The development project group.\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/projectGroup:ProjectGroup [options] octopusdeploy_project_group.\u003cname\u003e \u003cproject_group-id\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this project group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this project group.\n"
                }
            },
            "required": [
                "description",
                "name",
                "spaceId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this project group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this project group.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProjectGroup resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this project group.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this project group.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/runbook:Runbook": {
            "description": "This resource manages runbooks in Octopus Deploy.\n",
            "properties": {
                "connectivityPolicy": {
                    "$ref": "#/types/octopusdeploy:index/RunbookConnectivityPolicy:RunbookConnectivityPolicy"
                },
                "defaultGuidedFailureMode": {
                    "type": "string",
                    "description": "Sets the runbook guided failure mode.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this runbook.\n"
                },
                "environmentScope": {
                    "type": "string",
                    "description": "Determines how the runbook is scoped to environments.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When environment_scope is set to \"Specified\", this is the list of environments the runbook can be run against.\n"
                },
                "forcePackageDownload": {
                    "type": "boolean",
                    "description": "Whether to force packages to be re-downloaded or not.\n"
                },
                "multiTenancyMode": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the runbook. Valid modes are `Untenanted`, `TenantedOrUntenanted`, `Tenanted`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the runbook in Octopus Deploy. This name must be unique.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project that this runbook belongs to.\n"
                },
                "publishedRunbookSnapshotId": {
                    "type": "string",
                    "description": "The published snapshot ID.\n"
                },
                "retentionPolicy": {
                    "$ref": "#/types/octopusdeploy:index/RunbookRetentionPolicy:RunbookRetentionPolicy",
                    "description": "Sets the runbook retention policy.\n"
                },
                "runbookProcessId": {
                    "type": "string",
                    "description": "The runbook process ID.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this runbook.\n"
                }
            },
            "required": [
                "defaultGuidedFailureMode",
                "description",
                "environmentScope",
                "environments",
                "forcePackageDownload",
                "multiTenancyMode",
                "name",
                "projectId",
                "publishedRunbookSnapshotId",
                "runbookProcessId",
                "spaceId"
            ],
            "inputProperties": {
                "connectivityPolicy": {
                    "$ref": "#/types/octopusdeploy:index/RunbookConnectivityPolicy:RunbookConnectivityPolicy"
                },
                "defaultGuidedFailureMode": {
                    "type": "string",
                    "description": "Sets the runbook guided failure mode.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this runbook.\n"
                },
                "environmentScope": {
                    "type": "string",
                    "description": "Determines how the runbook is scoped to environments.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When environment_scope is set to \"Specified\", this is the list of environments the runbook can be run against.\n"
                },
                "forcePackageDownload": {
                    "type": "boolean",
                    "description": "Whether to force packages to be re-downloaded or not.\n"
                },
                "multiTenancyMode": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the runbook. Valid modes are `Untenanted`, `TenantedOrUntenanted`, `Tenanted`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the runbook in Octopus Deploy. This name must be unique.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project that this runbook belongs to.\n"
                },
                "retentionPolicy": {
                    "$ref": "#/types/octopusdeploy:index/RunbookRetentionPolicy:RunbookRetentionPolicy",
                    "description": "Sets the runbook retention policy.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this runbook.\n"
                }
            },
            "requiredInputs": [
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Runbook resources.\n",
                "properties": {
                    "connectivityPolicy": {
                        "$ref": "#/types/octopusdeploy:index/RunbookConnectivityPolicy:RunbookConnectivityPolicy"
                    },
                    "defaultGuidedFailureMode": {
                        "type": "string",
                        "description": "Sets the runbook guided failure mode.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this runbook.\n"
                    },
                    "environmentScope": {
                        "type": "string",
                        "description": "Determines how the runbook is scoped to environments.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "When environment_scope is set to \"Specified\", this is the list of environments the runbook can be run against.\n"
                    },
                    "forcePackageDownload": {
                        "type": "boolean",
                        "description": "Whether to force packages to be re-downloaded or not.\n"
                    },
                    "multiTenancyMode": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the runbook. Valid modes are `Untenanted`, `TenantedOrUntenanted`, `Tenanted`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the runbook in Octopus Deploy. This name must be unique.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project that this runbook belongs to.\n"
                    },
                    "publishedRunbookSnapshotId": {
                        "type": "string",
                        "description": "The published snapshot ID.\n"
                    },
                    "retentionPolicy": {
                        "$ref": "#/types/octopusdeploy:index/RunbookRetentionPolicy:RunbookRetentionPolicy",
                        "description": "Sets the runbook retention policy.\n"
                    },
                    "runbookProcessId": {
                        "type": "string",
                        "description": "The runbook process ID.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this runbook.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/scriptModule:ScriptModule": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.ScriptModule(\"example\", {\n    description: \"A script module to use.\",\n    script: {\n        body: `function Say-Hello()\\x0d\n{\\x0d\n    Write-Output \"Hello, Octopus!\"\\x0d\n}\\x0d\n\n`,\n        syntax: \"PowerShell\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.ScriptModule(\"example\",\n    description=\"A script module to use.\",\n    script={\n        \"body\": \"\"\"function Say-Hello()\\x0d\n{\\x0d\n    Write-Output \"Hello, Octopus!\"\\x0d\n}\\x0d\n\n\"\"\",\n        \"syntax\": \"PowerShell\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.ScriptModule(\"example\", new()\n    {\n        Description = \"A script module to use.\",\n        Script = new Octopusdeploy.Inputs.ScriptModuleScriptArgs\n        {\n            Body = @\"function Say-Hello()\r\n{\r\n    Write-Output \"\"Hello, Octopus!\"\"\r\n}\r\n\n\",\n            Syntax = \"PowerShell\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewScriptModule(ctx, \"example\", \u0026octopusdeploy.ScriptModuleArgs{\n\t\t\tDescription: pulumi.String(\"A script module to use.\"),\n\t\t\tScript: \u0026octopusdeploy.ScriptModuleScriptArgs{\n\t\t\t\tBody: pulumi.String(`function Say-Hello()\n{\n    Write-Output \"Hello, Octopus!\"\n}\n\n`),\n\t\t\t\tSyntax: pulumi.String(\"PowerShell\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.ScriptModule;\nimport com.pulumi.octopusdeploy.ScriptModuleArgs;\nimport com.pulumi.octopusdeploy.inputs.ScriptModuleScriptArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ScriptModule(\"example\", ScriptModuleArgs.builder()\n            .description(\"A script module to use.\")\n            .script(ScriptModuleScriptArgs.builder()\n                .body(\"\"\"\nfunction Say-Hello()\r\n{\r\n    Write-Output \"Hello, Octopus!\"\r\n}\r\n\n                \"\"\")\n                .syntax(\"PowerShell\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:ScriptModule\n    properties:\n      description: A script module to use.\n      script:\n        body: \"function Say-Hello()\\r\\n{\\r\\n    Write-Output \\\"Hello, Octopus!\\\"\\r\\n}\\r\\n\\n\"\n        syntax: PowerShell\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/scriptModule:ScriptModule [options] octopusdeploy_script_module.\u003cname\u003e \u003cscript-module-id\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this script module.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "script": {
                    "$ref": "#/types/octopusdeploy:index/ScriptModuleScript:ScriptModuleScript",
                    "description": "The script associated with this script module.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this Script Module.\n"
                },
                "variableSetId": {
                    "type": "string",
                    "description": "The variable set ID for this script module.\n"
                }
            },
            "required": [
                "description",
                "name",
                "spaceId",
                "variableSetId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this script module.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "script": {
                    "$ref": "#/types/octopusdeploy:index/ScriptModuleScript:ScriptModuleScript",
                    "description": "The script associated with this script module.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this Script Module.\n"
                },
                "variableSetId": {
                    "type": "string",
                    "description": "The variable set ID for this script module.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ScriptModule resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this script module.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "script": {
                        "$ref": "#/types/octopusdeploy:index/ScriptModuleScript:ScriptModuleScript",
                        "description": "The script associated with this script module.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this Script Module.\n"
                    },
                    "variableSetId": {
                        "type": "string",
                        "description": "The variable set ID for this script module.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/space:Space": {
            "description": "This resource manages spaces in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.Space(\"example\", {\n    description: \"A space for the development team.\",\n    isDefault: false,\n    isTaskQueueStopped: false,\n    spaceManagersTeamMembers: [\n        \"Users-123\",\n        \"Users-321\",\n    ],\n    spaceManagersTeams: [\"teams-everyone\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.Space(\"example\",\n    description=\"A space for the development team.\",\n    is_default=False,\n    is_task_queue_stopped=False,\n    space_managers_team_members=[\n        \"Users-123\",\n        \"Users-321\",\n    ],\n    space_managers_teams=[\"teams-everyone\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.Space(\"example\", new()\n    {\n        Description = \"A space for the development team.\",\n        IsDefault = false,\n        IsTaskQueueStopped = false,\n        SpaceManagersTeamMembers = new[]\n        {\n            \"Users-123\",\n            \"Users-321\",\n        },\n        SpaceManagersTeams = new[]\n        {\n            \"teams-everyone\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewSpace(ctx, \"example\", \u0026octopusdeploy.SpaceArgs{\n\t\t\tDescription:        pulumi.String(\"A space for the development team.\"),\n\t\t\tIsDefault:          pulumi.Bool(false),\n\t\t\tIsTaskQueueStopped: pulumi.Bool(false),\n\t\t\tSpaceManagersTeamMembers: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Users-123\"),\n\t\t\t\tpulumi.String(\"Users-321\"),\n\t\t\t},\n\t\t\tSpaceManagersTeams: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"teams-everyone\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.Space;\nimport com.pulumi.octopusdeploy.SpaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Space(\"example\", SpaceArgs.builder()\n            .description(\"A space for the development team.\")\n            .isDefault(false)\n            .isTaskQueueStopped(false)\n            .spaceManagersTeamMembers(            \n                \"Users-123\",\n                \"Users-321\")\n            .spaceManagersTeams(\"teams-everyone\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:Space\n    properties:\n      description: A space for the development team.\n      isDefault: false\n      isTaskQueueStopped: false\n      spaceManagersTeamMembers:\n        - Users-123\n        - Users-321\n      spaceManagersTeams:\n        - teams-everyone\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/space:Space [options] octopusdeploy_space.\u003cname\u003e \u003cspace-id\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this space.\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Specifies if this space is the default space in Octopus.\n"
                },
                "isTaskQueueStopped": {
                    "type": "boolean",
                    "description": "Specifies the status of the task queue for this space.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The unique slug of this space\n"
                },
                "spaceManagersTeamMembers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of user IDs designated to be managers of this space.\n"
                },
                "spaceManagersTeams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of team IDs designated to be managers of this space.\n"
                }
            },
            "required": [
                "description",
                "isDefault",
                "isTaskQueueStopped",
                "name",
                "slug",
                "spaceManagersTeamMembers",
                "spaceManagersTeams"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this space.\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Specifies if this space is the default space in Octopus.\n"
                },
                "isTaskQueueStopped": {
                    "type": "boolean",
                    "description": "Specifies the status of the task queue for this space.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The unique slug of this space\n"
                },
                "spaceManagersTeamMembers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of user IDs designated to be managers of this space.\n"
                },
                "spaceManagersTeams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of team IDs designated to be managers of this space.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Space resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this space.\n"
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Specifies if this space is the default space in Octopus.\n"
                    },
                    "isTaskQueueStopped": {
                        "type": "boolean",
                        "description": "Specifies the status of the task queue for this space.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "slug": {
                        "type": "string",
                        "description": "The unique slug of this space\n"
                    },
                    "spaceManagersTeamMembers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of user IDs designated to be managers of this space.\n"
                    },
                    "spaceManagersTeams": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of team IDs designated to be managers of this space.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/tag:Tag": {
            "description": "This resource manages tags in Octopus Deploy.\n",
            "properties": {
                "canonicalTagName": {
                    "type": "string",
                    "description": "The canonical name of the tag.\n"
                },
                "color": {
                    "type": "string",
                    "description": "The color of the tag.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the tag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the tag.\n"
                },
                "sortOrder": {
                    "type": "integer",
                    "description": "The sort order of the tag.\n"
                },
                "tagSetId": {
                    "type": "string",
                    "description": "The ID of the associated tag set.\n"
                },
                "tagSetSpaceId": {
                    "type": "string",
                    "description": "The Space ID of the associated tag set. Required if the tag set is not in the same space as what is configured on the provider.\n"
                }
            },
            "required": [
                "canonicalTagName",
                "color",
                "description",
                "name",
                "sortOrder",
                "tagSetId",
                "tagSetSpaceId"
            ],
            "inputProperties": {
                "color": {
                    "type": "string",
                    "description": "The color of the tag.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the tag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the tag.\n"
                },
                "sortOrder": {
                    "type": "integer",
                    "description": "The sort order of the tag.\n"
                },
                "tagSetId": {
                    "type": "string",
                    "description": "The ID of the associated tag set.\n"
                },
                "tagSetSpaceId": {
                    "type": "string",
                    "description": "The Space ID of the associated tag set. Required if the tag set is not in the same space as what is configured on the provider.\n"
                }
            },
            "requiredInputs": [
                "color",
                "tagSetId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Tag resources.\n",
                "properties": {
                    "canonicalTagName": {
                        "type": "string",
                        "description": "The canonical name of the tag.\n"
                    },
                    "color": {
                        "type": "string",
                        "description": "The color of the tag.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the tag.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the tag.\n"
                    },
                    "sortOrder": {
                        "type": "integer",
                        "description": "The sort order of the tag.\n"
                    },
                    "tagSetId": {
                        "type": "string",
                        "description": "The ID of the associated tag set.\n"
                    },
                    "tagSetSpaceId": {
                        "type": "string",
                        "description": "The Space ID of the associated tag set. Required if the tag set is not in the same space as what is configured on the provider.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/tagSet:TagSet": {
            "description": "This resource manages tag sets in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.TagSet(\"example\", {description: \"Provides tenants with access to certain early access programs.\"});\n// tags are distinct resources and associated with tag sets through tag_set_id\nconst alpha = new octopusdeploy.Tag(\"alpha\", {\n    color: \"#00FF00\",\n    tagSetId: example.id,\n});\nconst beta = new octopusdeploy.Tag(\"beta\", {\n    color: \"#FF0000\",\n    tagSetId: example.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.TagSet(\"example\", description=\"Provides tenants with access to certain early access programs.\")\n# tags are distinct resources and associated with tag sets through tag_set_id\nalpha = octopusdeploy.Tag(\"alpha\",\n    color=\"#00FF00\",\n    tag_set_id=example.id)\nbeta = octopusdeploy.Tag(\"beta\",\n    color=\"#FF0000\",\n    tag_set_id=example.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.TagSet(\"example\", new()\n    {\n        Description = \"Provides tenants with access to certain early access programs.\",\n    });\n\n    // tags are distinct resources and associated with tag sets through tag_set_id\n    var alpha = new Octopusdeploy.Tag(\"alpha\", new()\n    {\n        Color = \"#00FF00\",\n        TagSetId = example.Id,\n    });\n\n    var beta = new Octopusdeploy.Tag(\"beta\", new()\n    {\n        Color = \"#FF0000\",\n        TagSetId = example.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texample, err := octopusdeploy.NewTagSet(ctx, \"example\", \u0026octopusdeploy.TagSetArgs{\n\t\t\tDescription: pulumi.String(\"Provides tenants with access to certain early access programs.\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = octopusdeploy.NewTag(ctx, \"alpha\", \u0026octopusdeploy.TagArgs{\n\t\t\tColor:    pulumi.String(\"#00FF00\"),\n\t\t\tTagSetId: example.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = octopusdeploy.NewTag(ctx, \"beta\", \u0026octopusdeploy.TagArgs{\n\t\t\tColor:    pulumi.String(\"#FF0000\"),\n\t\t\tTagSetId: example.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.TagSet;\nimport com.pulumi.octopusdeploy.TagSetArgs;\nimport com.pulumi.octopusdeploy.Tag;\nimport com.pulumi.octopusdeploy.TagArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new TagSet(\"example\", TagSetArgs.builder()\n            .description(\"Provides tenants with access to certain early access programs.\")\n            .build());\n\n        // tags are distinct resources and associated with tag sets through tag_set_id\n        var alpha = new Tag(\"alpha\", TagArgs.builder()\n            .color(\"#00FF00\")\n            .tagSetId(example.id())\n            .build());\n\n        var beta = new Tag(\"beta\", TagArgs.builder()\n            .color(\"#FF0000\")\n            .tagSetId(example.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example: # tags are distinct resources and associated with tag sets through tag_set_id\n    type: octopusdeploy:TagSet\n    properties:\n      description: Provides tenants with access to certain early access programs.\n  alpha:\n    type: octopusdeploy:Tag\n    properties:\n      color: '#00FF00'\n      tagSetId: ${example.id}\n  beta:\n    type: octopusdeploy:Tag\n    properties:\n      color: '#FF0000'\n      tagSetId: ${example.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/tagSet:TagSet [options] octopusdeploy_tag_set.\u003cname\u003e \u003ctag-set-id\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this tag set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "sortOrder": {
                    "type": "integer",
                    "description": "The sort order associated with this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                }
            },
            "required": [
                "description",
                "name",
                "sortOrder",
                "spaceId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this tag set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "sortOrder": {
                    "type": "integer",
                    "description": "The sort order associated with this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TagSet resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this tag set.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "sortOrder": {
                        "type": "integer",
                        "description": "The sort order associated with this resource.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/tenant:Tenant": {
            "description": "This resource manages tenants in Octopus Deploy.\n",
            "properties": {
                "clonedFromTenantId": {
                    "type": "string",
                    "description": "The ID of the tenant from which this tenant was cloned.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this tenant.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this tenant.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                }
            },
            "required": [
                "clonedFromTenantId",
                "description",
                "name",
                "spaceId",
                "tenantTags"
            ],
            "inputProperties": {
                "clonedFromTenantId": {
                    "type": "string",
                    "description": "The ID of the tenant from which this tenant was cloned.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this tenant.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this tenant.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Tenant resources.\n",
                "properties": {
                    "clonedFromTenantId": {
                        "type": "string",
                        "description": "The ID of the tenant from which this tenant was cloned.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this tenant.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this tenant.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/tenantCommonVariable:TenantCommonVariable": {
            "description": "Manages a tenant common variable in Octopus Deploy.\n",
            "properties": {
                "libraryVariableSetId": {
                    "type": "string",
                    "description": "The ID of the library variable set.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this Tenant Common Variable.\n"
                },
                "templateId": {
                    "type": "string",
                    "description": "The ID of the variable template.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the variable.\n",
                    "secret": true
                }
            },
            "required": [
                "libraryVariableSetId",
                "spaceId",
                "templateId",
                "tenantId"
            ],
            "inputProperties": {
                "libraryVariableSetId": {
                    "type": "string",
                    "description": "The ID of the library variable set.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this Tenant Common Variable.\n"
                },
                "templateId": {
                    "type": "string",
                    "description": "The ID of the variable template.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the variable.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "libraryVariableSetId",
                "templateId",
                "tenantId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TenantCommonVariable resources.\n",
                "properties": {
                    "libraryVariableSetId": {
                        "type": "string",
                        "description": "The ID of the library variable set.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this Tenant Common Variable.\n"
                    },
                    "templateId": {
                        "type": "string",
                        "description": "The ID of the variable template.\n"
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "The ID of the tenant.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the variable.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/tenantProject:TenantProject": {
            "properties": {
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environment IDs associated with this tenant.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project ID associated with this tenant.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this project tenant.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The tenant ID associated with this tenant.\n"
                }
            },
            "required": [
                "projectId",
                "spaceId",
                "tenantId"
            ],
            "inputProperties": {
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environment IDs associated with this tenant.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project ID associated with this tenant.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this project tenant.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The tenant ID associated with this tenant.\n"
                }
            },
            "requiredInputs": [
                "projectId",
                "tenantId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TenantProject resources.\n",
                "properties": {
                    "environmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The environment IDs associated with this tenant.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project ID associated with this tenant.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this project tenant.\n"
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "The tenant ID associated with this tenant.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/tenantProjectVariable:TenantProjectVariable": {
            "description": "Manages a tenant project variable in Octopus Deploy.\n",
            "properties": {
                "environmentId": {
                    "type": "string",
                    "description": "The ID of the environment.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this Tenant Project Variable.\n"
                },
                "templateId": {
                    "type": "string",
                    "description": "The ID of the variable template.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the variable.\n",
                    "secret": true
                }
            },
            "required": [
                "environmentId",
                "projectId",
                "spaceId",
                "templateId",
                "tenantId"
            ],
            "inputProperties": {
                "environmentId": {
                    "type": "string",
                    "description": "The ID of the environment.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this Tenant Project Variable.\n"
                },
                "templateId": {
                    "type": "string",
                    "description": "The ID of the variable template.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the variable.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "environmentId",
                "projectId",
                "templateId",
                "tenantId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TenantProjectVariable resources.\n",
                "properties": {
                    "environmentId": {
                        "type": "string",
                        "description": "The ID of the environment.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The ID of the project.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this Tenant Project Variable.\n"
                    },
                    "templateId": {
                        "type": "string",
                        "description": "The ID of the variable template.\n"
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "The ID of the tenant.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the variable.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/tentacleCertificate:TentacleCertificate": {
            "description": "Generates a X.509 self-signed certificate for use with a Octopus Deploy Tentacle.\n\n## Octopus certificates\n\nThe X.509 certificates generated are self-signed, 2048-bit private keys and intended for use [only between Octopus Server and Tentacle](https://octopus.com/docs/security/octopus-tentacle-communication#Octopus-Tentaclecommunication-Octopuscertificates) communications. There is an insightful discussion of [why Octopus uses self-signed certificates](https://octopus.com/blog/why-self-signed-certificates) by default.\n\nInstead of generating a new certificate through this resource you can use an existing certificate and simply reference the appropriate thumbprint when registering the target.\n\n### State Persistence\nThis resource that is generated will be stored in the state file and cannot be retrieved later from the external Octopus Server or Tentacle.\n\n",
            "properties": {
                "base64": {
                    "type": "string",
                    "description": "The base64 encoded pfx certificate.\n",
                    "secret": true
                },
                "dependencies": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Optional map of dependencies that when modified will trigger a re-creation of this resource.\n"
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The SHA1 sum of the certificate represented in hexadecimal.\n"
                }
            },
            "required": [
                "base64",
                "thumbprint"
            ],
            "inputProperties": {
                "dependencies": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Optional map of dependencies that when modified will trigger a re-creation of this resource.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TentacleCertificate resources.\n",
                "properties": {
                    "base64": {
                        "type": "string",
                        "description": "The base64 encoded pfx certificate.\n",
                        "secret": true
                    },
                    "dependencies": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Optional map of dependencies that when modified will trigger a re-creation of this resource.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The SHA1 sum of the certificate represented in hexadecimal.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/usernamePasswordAccount:UsernamePasswordAccount": {
            "description": "This resource manages username-password accounts in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.UsernamePasswordAccount(\"example\", {\n    password: \"###########\",\n    username: \"[username]\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.UsernamePasswordAccount(\"example\",\n    password=\"###########\",\n    username=\"[username]\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.UsernamePasswordAccount(\"example\", new()\n    {\n        Password = \"###########\",\n        Username = \"[username]\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewUsernamePasswordAccount(ctx, \"example\", \u0026octopusdeploy.UsernamePasswordAccountArgs{\n\t\t\tPassword: pulumi.String(\"###########\"),\n\t\t\tUsername: pulumi.String(\"[username]\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.UsernamePasswordAccount;\nimport com.pulumi.octopusdeploy.UsernamePasswordAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new UsernamePasswordAccount(\"example\", UsernamePasswordAccountArgs.builder()\n            .password(\"###########\")\n            .username(\"[username]\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:UsernamePasswordAccount\n    properties:\n      password: '###########'\n      # get from secure environment/store\n      username: '[username]'\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/usernamePasswordAccount:UsernamePasswordAccount [options] octopusdeploy_username_password_account.\u003cname\u003e \u003caccount-id\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this username/password account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the username-password account.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "required": [
                "description",
                "environments",
                "name",
                "spaceId",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "username"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this username/password account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the username-password account.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UsernamePasswordAccount resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this username/password account.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the username-password account.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password associated with this resource.\n",
                        "secret": true
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username associated with this resource.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/variable:Variable": {
            "description": "This resource manages variables in Octopus Deploy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\n// create an Amazon web services account variable\nconst amazonWebServicesAccountVariable = new octopusdeploy.Variable(\"amazonWebServicesAccountVariable\", {\n    ownerId: \"Projects-123\",\n    type: \"AmazonWebServicesAccount\",\n    value: \"Accounts-123\",\n});\n// create an Azure service principal account variable\nconst azureServicePrincipalAccountVariable = new octopusdeploy.Variable(\"azureServicePrincipalAccountVariable\", {\n    ownerId: \"Projects-123\",\n    type: \"AzureAccount\",\n    value: \"Accounts-123\",\n});\n// create a Google Cloud account variable\nconst googleCloudAccountVariable = new octopusdeploy.Variable(\"googleCloudAccountVariable\", {\n    ownerId: \"Projects-123\",\n    type: \"GoogleCloudAccount\",\n    value: \"Accounts-123\",\n});\n// Create a UsernamePassword account variable\nconst usernamepasswordAccountVariable = new octopusdeploy.Variable(\"usernamepasswordAccountVariable\", {\n    ownerId: \"Projects-123\",\n    type: \"UsernamePasswordAccount\",\n    value: octopusdeploy_username_password_account.account_user_pass.id,\n});\n// create a Certificate variable\nconst certificateVariable = new octopusdeploy.Variable(\"certificateVariable\", {\n    ownerId: \"Projects-123\",\n    type: \"Certificate\",\n    value: \"Certificates-123\",\n});\n// create a Sensitive variable\nconst sensitiveVariable = new octopusdeploy.Variable(\"sensitiveVariable\", {\n    ownerId: \"Projects-123\",\n    type: \"Sensitive\",\n    isSensitive: true,\n    sensitiveValue: \"YourSecrets\",\n});\n// create a String variable\nconst stringVariable = new octopusdeploy.Variable(\"stringVariable\", {\n    ownerId: \"Projects-123\",\n    type: \"String\",\n    value: \"PlainText\",\n});\n// create a WorkerPool variable\nconst workerpoolVariable = new octopusdeploy.Variable(\"workerpoolVariable\", {\n    ownerId: \"Projects-123\",\n    type: \"WorkerPool\",\n    value: \"WorkerPools-123\",\n});\n// create a prompted variable\nconst promptedVariable = new octopusdeploy.Variable(\"promptedVariable\", {\n    ownerId: \"Projects-123\",\n    type: \"String\",\n    prompt: {\n        description: \"Variable Description\",\n        isRequired: true,\n        label: \"Variable Label\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\n# create an Amazon web services account variable\namazon_web_services_account_variable = octopusdeploy.Variable(\"amazonWebServicesAccountVariable\",\n    owner_id=\"Projects-123\",\n    type=\"AmazonWebServicesAccount\",\n    value=\"Accounts-123\")\n# create an Azure service principal account variable\nazure_service_principal_account_variable = octopusdeploy.Variable(\"azureServicePrincipalAccountVariable\",\n    owner_id=\"Projects-123\",\n    type=\"AzureAccount\",\n    value=\"Accounts-123\")\n# create a Google Cloud account variable\ngoogle_cloud_account_variable = octopusdeploy.Variable(\"googleCloudAccountVariable\",\n    owner_id=\"Projects-123\",\n    type=\"GoogleCloudAccount\",\n    value=\"Accounts-123\")\n# Create a UsernamePassword account variable\nusernamepassword_account_variable = octopusdeploy.Variable(\"usernamepasswordAccountVariable\",\n    owner_id=\"Projects-123\",\n    type=\"UsernamePasswordAccount\",\n    value=octopusdeploy_username_password_account[\"account_user_pass\"][\"id\"])\n# create a Certificate variable\ncertificate_variable = octopusdeploy.Variable(\"certificateVariable\",\n    owner_id=\"Projects-123\",\n    type=\"Certificate\",\n    value=\"Certificates-123\")\n# create a Sensitive variable\nsensitive_variable = octopusdeploy.Variable(\"sensitiveVariable\",\n    owner_id=\"Projects-123\",\n    type=\"Sensitive\",\n    is_sensitive=True,\n    sensitive_value=\"YourSecrets\")\n# create a String variable\nstring_variable = octopusdeploy.Variable(\"stringVariable\",\n    owner_id=\"Projects-123\",\n    type=\"String\",\n    value=\"PlainText\")\n# create a WorkerPool variable\nworkerpool_variable = octopusdeploy.Variable(\"workerpoolVariable\",\n    owner_id=\"Projects-123\",\n    type=\"WorkerPool\",\n    value=\"WorkerPools-123\")\n# create a prompted variable\nprompted_variable = octopusdeploy.Variable(\"promptedVariable\",\n    owner_id=\"Projects-123\",\n    type=\"String\",\n    prompt={\n        \"description\": \"Variable Description\",\n        \"is_required\": True,\n        \"label\": \"Variable Label\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // create an Amazon web services account variable\n    var amazonWebServicesAccountVariable = new Octopusdeploy.Variable(\"amazonWebServicesAccountVariable\", new()\n    {\n        OwnerId = \"Projects-123\",\n        Type = \"AmazonWebServicesAccount\",\n        Value = \"Accounts-123\",\n    });\n\n    // create an Azure service principal account variable\n    var azureServicePrincipalAccountVariable = new Octopusdeploy.Variable(\"azureServicePrincipalAccountVariable\", new()\n    {\n        OwnerId = \"Projects-123\",\n        Type = \"AzureAccount\",\n        Value = \"Accounts-123\",\n    });\n\n    // create a Google Cloud account variable\n    var googleCloudAccountVariable = new Octopusdeploy.Variable(\"googleCloudAccountVariable\", new()\n    {\n        OwnerId = \"Projects-123\",\n        Type = \"GoogleCloudAccount\",\n        Value = \"Accounts-123\",\n    });\n\n    // Create a UsernamePassword account variable\n    var usernamepasswordAccountVariable = new Octopusdeploy.Variable(\"usernamepasswordAccountVariable\", new()\n    {\n        OwnerId = \"Projects-123\",\n        Type = \"UsernamePasswordAccount\",\n        Value = octopusdeploy_username_password_account.Account_user_pass.Id,\n    });\n\n    // create a Certificate variable\n    var certificateVariable = new Octopusdeploy.Variable(\"certificateVariable\", new()\n    {\n        OwnerId = \"Projects-123\",\n        Type = \"Certificate\",\n        Value = \"Certificates-123\",\n    });\n\n    // create a Sensitive variable\n    var sensitiveVariable = new Octopusdeploy.Variable(\"sensitiveVariable\", new()\n    {\n        OwnerId = \"Projects-123\",\n        Type = \"Sensitive\",\n        IsSensitive = true,\n        SensitiveValue = \"YourSecrets\",\n    });\n\n    // create a String variable\n    var stringVariable = new Octopusdeploy.Variable(\"stringVariable\", new()\n    {\n        OwnerId = \"Projects-123\",\n        Type = \"String\",\n        Value = \"PlainText\",\n    });\n\n    // create a WorkerPool variable\n    var workerpoolVariable = new Octopusdeploy.Variable(\"workerpoolVariable\", new()\n    {\n        OwnerId = \"Projects-123\",\n        Type = \"WorkerPool\",\n        Value = \"WorkerPools-123\",\n    });\n\n    // create a prompted variable\n    var promptedVariable = new Octopusdeploy.Variable(\"promptedVariable\", new()\n    {\n        OwnerId = \"Projects-123\",\n        Type = \"String\",\n        Prompt = new Octopusdeploy.Inputs.VariablePromptArgs\n        {\n            Description = \"Variable Description\",\n            IsRequired = true,\n            Label = \"Variable Label\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// create an Amazon web services account variable\n\t\t_, err := octopusdeploy.NewVariable(ctx, \"amazonWebServicesAccountVariable\", \u0026octopusdeploy.VariableArgs{\n\t\t\tOwnerId: pulumi.String(\"Projects-123\"),\n\t\t\tType:    pulumi.String(\"AmazonWebServicesAccount\"),\n\t\t\tValue:   pulumi.String(\"Accounts-123\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// create an Azure service principal account variable\n\t\t_, err = octopusdeploy.NewVariable(ctx, \"azureServicePrincipalAccountVariable\", \u0026octopusdeploy.VariableArgs{\n\t\t\tOwnerId: pulumi.String(\"Projects-123\"),\n\t\t\tType:    pulumi.String(\"AzureAccount\"),\n\t\t\tValue:   pulumi.String(\"Accounts-123\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// create a Google Cloud account variable\n\t\t_, err = octopusdeploy.NewVariable(ctx, \"googleCloudAccountVariable\", \u0026octopusdeploy.VariableArgs{\n\t\t\tOwnerId: pulumi.String(\"Projects-123\"),\n\t\t\tType:    pulumi.String(\"GoogleCloudAccount\"),\n\t\t\tValue:   pulumi.String(\"Accounts-123\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Create a UsernamePassword account variable\n\t\t_, err = octopusdeploy.NewVariable(ctx, \"usernamepasswordAccountVariable\", \u0026octopusdeploy.VariableArgs{\n\t\t\tOwnerId: pulumi.String(\"Projects-123\"),\n\t\t\tType:    pulumi.String(\"UsernamePasswordAccount\"),\n\t\t\tValue:   pulumi.Any(octopusdeploy_username_password_account.Account_user_pass.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// create a Certificate variable\n\t\t_, err = octopusdeploy.NewVariable(ctx, \"certificateVariable\", \u0026octopusdeploy.VariableArgs{\n\t\t\tOwnerId: pulumi.String(\"Projects-123\"),\n\t\t\tType:    pulumi.String(\"Certificate\"),\n\t\t\tValue:   pulumi.String(\"Certificates-123\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// create a Sensitive variable\n\t\t_, err = octopusdeploy.NewVariable(ctx, \"sensitiveVariable\", \u0026octopusdeploy.VariableArgs{\n\t\t\tOwnerId:        pulumi.String(\"Projects-123\"),\n\t\t\tType:           pulumi.String(\"Sensitive\"),\n\t\t\tIsSensitive:    pulumi.Bool(true),\n\t\t\tSensitiveValue: pulumi.String(\"YourSecrets\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// create a String variable\n\t\t_, err = octopusdeploy.NewVariable(ctx, \"stringVariable\", \u0026octopusdeploy.VariableArgs{\n\t\t\tOwnerId: pulumi.String(\"Projects-123\"),\n\t\t\tType:    pulumi.String(\"String\"),\n\t\t\tValue:   pulumi.String(\"PlainText\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// create a WorkerPool variable\n\t\t_, err = octopusdeploy.NewVariable(ctx, \"workerpoolVariable\", \u0026octopusdeploy.VariableArgs{\n\t\t\tOwnerId: pulumi.String(\"Projects-123\"),\n\t\t\tType:    pulumi.String(\"WorkerPool\"),\n\t\t\tValue:   pulumi.String(\"WorkerPools-123\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// create a prompted variable\n\t\t_, err = octopusdeploy.NewVariable(ctx, \"promptedVariable\", \u0026octopusdeploy.VariableArgs{\n\t\t\tOwnerId: pulumi.String(\"Projects-123\"),\n\t\t\tType:    pulumi.String(\"String\"),\n\t\t\tPrompt: \u0026octopusdeploy.VariablePromptArgs{\n\t\t\t\tDescription: pulumi.String(\"Variable Description\"),\n\t\t\t\tIsRequired:  pulumi.Bool(true),\n\t\t\t\tLabel:       pulumi.String(\"Variable Label\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.Variable;\nimport com.pulumi.octopusdeploy.VariableArgs;\nimport com.pulumi.octopusdeploy.inputs.VariablePromptArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // create an Amazon web services account variable\n        var amazonWebServicesAccountVariable = new Variable(\"amazonWebServicesAccountVariable\", VariableArgs.builder()\n            .ownerId(\"Projects-123\")\n            .type(\"AmazonWebServicesAccount\")\n            .value(\"Accounts-123\")\n            .build());\n\n        // create an Azure service principal account variable\n        var azureServicePrincipalAccountVariable = new Variable(\"azureServicePrincipalAccountVariable\", VariableArgs.builder()\n            .ownerId(\"Projects-123\")\n            .type(\"AzureAccount\")\n            .value(\"Accounts-123\")\n            .build());\n\n        // create a Google Cloud account variable\n        var googleCloudAccountVariable = new Variable(\"googleCloudAccountVariable\", VariableArgs.builder()\n            .ownerId(\"Projects-123\")\n            .type(\"GoogleCloudAccount\")\n            .value(\"Accounts-123\")\n            .build());\n\n        // Create a UsernamePassword account variable\n        var usernamepasswordAccountVariable = new Variable(\"usernamepasswordAccountVariable\", VariableArgs.builder()\n            .ownerId(\"Projects-123\")\n            .type(\"UsernamePasswordAccount\")\n            .value(octopusdeploy_username_password_account.account_user_pass().id())\n            .build());\n\n        // create a Certificate variable\n        var certificateVariable = new Variable(\"certificateVariable\", VariableArgs.builder()\n            .ownerId(\"Projects-123\")\n            .type(\"Certificate\")\n            .value(\"Certificates-123\")\n            .build());\n\n        // create a Sensitive variable\n        var sensitiveVariable = new Variable(\"sensitiveVariable\", VariableArgs.builder()\n            .ownerId(\"Projects-123\")\n            .type(\"Sensitive\")\n            .isSensitive(true)\n            .sensitiveValue(\"YourSecrets\")\n            .build());\n\n        // create a String variable\n        var stringVariable = new Variable(\"stringVariable\", VariableArgs.builder()\n            .ownerId(\"Projects-123\")\n            .type(\"String\")\n            .value(\"PlainText\")\n            .build());\n\n        // create a WorkerPool variable\n        var workerpoolVariable = new Variable(\"workerpoolVariable\", VariableArgs.builder()\n            .ownerId(\"Projects-123\")\n            .type(\"WorkerPool\")\n            .value(\"WorkerPools-123\")\n            .build());\n\n        // create a prompted variable\n        var promptedVariable = new Variable(\"promptedVariable\", VariableArgs.builder()\n            .ownerId(\"Projects-123\")\n            .type(\"String\")\n            .prompt(VariablePromptArgs.builder()\n                .description(\"Variable Description\")\n                .isRequired(true)\n                .label(\"Variable Label\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # create an Amazon web services account variable\n  amazonWebServicesAccountVariable:\n    type: octopusdeploy:Variable\n    properties:\n      ownerId: Projects-123\n      type: AmazonWebServicesAccount\n      value: Accounts-123\n  # create an Azure service principal account variable\n  azureServicePrincipalAccountVariable:\n    type: octopusdeploy:Variable\n    properties:\n      ownerId: Projects-123\n      type: AzureAccount\n      value: Accounts-123\n  # create a Google Cloud account variable\n  googleCloudAccountVariable:\n    type: octopusdeploy:Variable\n    properties:\n      ownerId: Projects-123\n      type: GoogleCloudAccount\n      value: Accounts-123\n  # Create a UsernamePassword account variable\n  usernamepasswordAccountVariable:\n    type: octopusdeploy:Variable\n    properties:\n      ownerId: Projects-123\n      type: UsernamePasswordAccount\n      value: ${octopusdeploy_username_password_account.account_user_pass.id}\n  # create a Certificate variable\n  certificateVariable:\n    type: octopusdeploy:Variable\n    properties:\n      ownerId: Projects-123\n      type: Certificate\n      value: Certificates-123\n  # create a Sensitive variable\n  sensitiveVariable:\n    type: octopusdeploy:Variable\n    properties:\n      ownerId: Projects-123\n      type: Sensitive\n      isSensitive: true\n      sensitiveValue: YourSecrets\n  # create a String variable\n  stringVariable:\n    type: octopusdeploy:Variable\n    properties:\n      ownerId: Projects-123\n      type: String\n      value: PlainText\n  # create a WorkerPool variable\n  workerpoolVariable:\n    type: octopusdeploy:Variable\n    properties:\n      ownerId: Projects-123\n      type: WorkerPool\n      value: WorkerPools-123\n  # create a prompted variable\n  promptedVariable:\n    type: octopusdeploy:Variable\n    properties:\n      ownerId: Projects-123\n      type: String\n      prompt:\n        description: Variable Description\n        isRequired: true\n        label: Variable Label\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import octopusdeploy:index/variable:Variable [options] octopusdeploy_variable.\u003cname\u003e \u003cvariable-id\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this variable.\n"
                },
                "isEditable": {
                    "type": "boolean",
                    "description": "Indicates whether or not this variable is considered editable.\n"
                },
                "isSensitive": {
                    "type": "boolean",
                    "description": "Indicates whether or not this resource is considered sensitive and should be kept secret.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "ownerId": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string",
                    "deprecationMessage": "This attribute is deprecated; please use owner_id instead."
                },
                "prompt": {
                    "$ref": "#/types/octopusdeploy:index/VariablePrompt:VariablePrompt"
                },
                "scope": {
                    "$ref": "#/types/octopusdeploy:index/VariableScope:VariableScope"
                },
                "sensitiveValue": {
                    "type": "string",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this variable.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of variable represented by this resource. Valid types are `AmazonWebServicesAccount`, `AzureAccount`, `GoogleCloudAccount`, `UsernamePasswordAccount`, `Certificate`, `Sensitive`, `String`, `WorkerPool`.\n"
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "description",
                "isEditable",
                "isSensitive",
                "name",
                "spaceId",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this variable.\n"
                },
                "isEditable": {
                    "type": "boolean",
                    "description": "Indicates whether or not this variable is considered editable.\n"
                },
                "isSensitive": {
                    "type": "boolean",
                    "description": "Indicates whether or not this resource is considered sensitive and should be kept secret.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "ownerId": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string",
                    "deprecationMessage": "This attribute is deprecated; please use owner_id instead."
                },
                "prompt": {
                    "$ref": "#/types/octopusdeploy:index/VariablePrompt:VariablePrompt"
                },
                "scope": {
                    "$ref": "#/types/octopusdeploy:index/VariableScope:VariableScope"
                },
                "sensitiveValue": {
                    "type": "string",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this variable.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of variable represented by this resource. Valid types are `AmazonWebServicesAccount`, `AzureAccount`, `GoogleCloudAccount`, `UsernamePasswordAccount`, `Certificate`, `Sensitive`, `String`, `WorkerPool`.\n"
                },
                "value": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Variable resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this variable.\n"
                    },
                    "isEditable": {
                        "type": "boolean",
                        "description": "Indicates whether or not this variable is considered editable.\n"
                    },
                    "isSensitive": {
                        "type": "boolean",
                        "description": "Indicates whether or not this resource is considered sensitive and should be kept secret.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "ownerId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string",
                        "deprecationMessage": "This attribute is deprecated; please use owner_id instead."
                    },
                    "prompt": {
                        "$ref": "#/types/octopusdeploy:index/VariablePrompt:VariablePrompt"
                    },
                    "scope": {
                        "$ref": "#/types/octopusdeploy:index/VariableScope:VariableScope"
                    },
                    "sensitiveValue": {
                        "type": "string",
                        "secret": true
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this variable.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of variable represented by this resource. Valid types are `AmazonWebServicesAccount`, `AzureAccount`, `GoogleCloudAccount`, `UsernamePasswordAccount`, `Certificate`, `Sensitive`, `String`, `WorkerPool`.\n"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "octopusdeploy:index/getEnvironments:getEnvironments": {
            "description": "Provides information about existing environments.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getEnvironments({\n    ids: [\n        \"Environments-123\",\n        \"Environments-321\",\n    ],\n    name: \"Production\",\n    partialName: \"Produc\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_environments(ids=[\n        \"Environments-123\",\n        \"Environments-321\",\n    ],\n    name=\"Production\",\n    partial_name=\"Produc\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetEnvironments.Invoke(new()\n    {\n        Ids = new[]\n        {\n            \"Environments-123\",\n            \"Environments-321\",\n        },\n        Name = \"Production\",\n        PartialName = \"Produc\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetEnvironments(ctx, \u0026octopusdeploy.GetEnvironmentsArgs{\n\t\t\tIds: []string{\n\t\t\t\t\"Environments-123\",\n\t\t\t\t\"Environments-321\",\n\t\t\t},\n\t\t\tName:        pulumi.StringRef(\"Production\"),\n\t\t\tPartialName: pulumi.StringRef(\"Produc\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetEnvironmentsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getEnvironments(GetEnvironmentsArgs.builder()\n            .ids(            \n                \"Environments-123\",\n                \"Environments-321\")\n            .name(\"Production\")\n            .partialName(\"Produc\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getEnvironments\n      Arguments:\n        ids:\n          - Environments-123\n          - Environments-321\n        name: Production\n        partialName: Produc\n        skip: 5\n        take: 100\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getEnvironments.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter search by exact name\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by a partial name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this environment.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getEnvironments.\n",
                "properties": {
                    "environments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getEnvironmentsEnvironment:getEnvironmentsEnvironment"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The unique ID for this resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter search by exact name\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by a partial name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this environment.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "environments",
                    "id",
                    "spaceId"
                ]
            }
        },
        "octopusdeploy:index/getFeeds:getFeeds": {
            "description": "Provides information about existing feeds.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getFeeds({\n    feedType: \"NuGet\",\n    ids: [\n        \"Feeds-123\",\n        \"Feeds-321\",\n    ],\n    partialName: \"Develop\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_feeds(feed_type=\"NuGet\",\n    ids=[\n        \"Feeds-123\",\n        \"Feeds-321\",\n    ],\n    partial_name=\"Develop\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetFeeds.Invoke(new()\n    {\n        FeedType = \"NuGet\",\n        Ids = new[]\n        {\n            \"Feeds-123\",\n            \"Feeds-321\",\n        },\n        PartialName = \"Develop\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetFeeds(ctx, \u0026octopusdeploy.GetFeedsArgs{\n\t\t\tFeedType: pulumi.StringRef(\"NuGet\"),\n\t\t\tIds: []string{\n\t\t\t\t\"Feeds-123\",\n\t\t\t\t\"Feeds-321\",\n\t\t\t},\n\t\t\tPartialName: pulumi.StringRef(\"Develop\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetFeedsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getFeeds(GetFeedsArgs.builder()\n            .feedType(\"NuGet\")\n            .ids(            \n                \"Feeds-123\",\n                \"Feeds-321\")\n            .partialName(\"Develop\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getFeeds\n      Arguments:\n        feedType: NuGet\n        ids:\n          - Feeds-123\n          - Feeds-321\n        partialName: Develop\n        skip: 5\n        take: 100\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFeeds.\n",
                "properties": {
                    "feedType": {
                        "type": "string",
                        "description": "A filter to search by feed type. Valid feed types are `AwsElasticContainerRegistry`, `BuiltIn`, `Docker`, `GitHub`, `Helm`, `Maven`, `NuGet`, or `OctopusProject`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by a partial name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this feeds.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeeds.\n",
                "properties": {
                    "feedType": {
                        "type": "string",
                        "description": "A filter to search by feed type. Valid feed types are `AwsElasticContainerRegistry`, `BuiltIn`, `Docker`, `GitHub`, `Helm`, `Maven`, `NuGet`, or `OctopusProject`.\n"
                    },
                    "feeds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getFeedsFeed:getFeedsFeed"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The unique ID for this resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by a partial name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this feeds.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "feeds",
                    "id",
                    "spaceId"
                ]
            }
        },
        "octopusdeploy:index/getGitCredentials:getGitCredentials": {
            "description": "Use this data source to retrieve information about Git credentials in Octopus Deploy.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getGitCredentials.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Git Credential to filter by.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "The number of records to skip.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this Git Credential.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "The number of records to take.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGitCredentials.\n",
                "properties": {
                    "gitCredentials": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getGitCredentialsGitCredential:getGitCredentialsGitCredential"
                        },
                        "description": "Provides information about existing GitCredentials.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The unique ID for this resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Git Credential to filter by.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "The number of records to skip.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this Git Credential.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "The number of records to take.\n"
                    }
                },
                "type": "object",
                "required": [
                    "gitCredentials",
                    "id"
                ]
            }
        },
        "octopusdeploy:index/getLibraryVariableSets:getLibraryVariableSets": {
            "description": "Provides information about existing library variable sets.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getLibraryVariableSets.\n",
                "properties": {
                    "contentType": {
                        "type": "string",
                        "description": "A filter to search by content type.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by a partial name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this library variable set.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLibraryVariableSets.\n",
                "properties": {
                    "contentType": {
                        "type": "string",
                        "description": "A filter to search by content type.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The unique ID for this resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "libraryVariableSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getLibraryVariableSetsLibraryVariableSet:getLibraryVariableSetsLibraryVariableSet"
                        }
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by a partial name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this library variable set.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "libraryVariableSets",
                    "spaceId"
                ]
            }
        },
        "octopusdeploy:index/getLifecycles:getLifecycles": {
            "description": "Provides information about existing lifecycles.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getLifecycles({\n    ids: [\n        \"Lifecycles-123\",\n        \"Lifecycles-321\",\n    ],\n    partialName: \"Defau\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_lifecycles(ids=[\n        \"Lifecycles-123\",\n        \"Lifecycles-321\",\n    ],\n    partial_name=\"Defau\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetLifecycles.Invoke(new()\n    {\n        Ids = new[]\n        {\n            \"Lifecycles-123\",\n            \"Lifecycles-321\",\n        },\n        PartialName = \"Defau\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetLifecycles(ctx, \u0026octopusdeploy.GetLifecyclesArgs{\n\t\t\tIds: []string{\n\t\t\t\t\"Lifecycles-123\",\n\t\t\t\t\"Lifecycles-321\",\n\t\t\t},\n\t\t\tPartialName: pulumi.StringRef(\"Defau\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetLifecyclesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getLifecycles(GetLifecyclesArgs.builder()\n            .ids(            \n                \"Lifecycles-123\",\n                \"Lifecycles-321\")\n            .partialName(\"Defau\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getLifecycles\n      Arguments:\n        ids:\n          - Lifecycles-123\n          - Lifecycles-321\n        partialName: Defau\n        skip: 5\n        take: 100\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getLifecycles.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of lifecycle IDs to filter by.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A partial name to filter lifecycles by.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this lifecycle.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLifecycles.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the lifecycle.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of lifecycle IDs to filter by.\n"
                    },
                    "lifecycles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getLifecyclesLifecycle:getLifecyclesLifecycle"
                        }
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A partial name to filter lifecycles by.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this lifecycle.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "lifecycles"
                ]
            }
        },
        "octopusdeploy:index/getProjectGroups:getProjectGroups": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getProjectGroups({\n    ids: [\n        \"ProjectGroups-123\",\n        \"ProjectGroups-321\",\n    ],\n    partialName: \"Defau\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_project_groups(ids=[\n        \"ProjectGroups-123\",\n        \"ProjectGroups-321\",\n    ],\n    partial_name=\"Defau\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetProjectGroups.Invoke(new()\n    {\n        Ids = new[]\n        {\n            \"ProjectGroups-123\",\n            \"ProjectGroups-321\",\n        },\n        PartialName = \"Defau\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetProjectGroups(ctx, \u0026octopusdeploy.GetProjectGroupsArgs{\n\t\t\tIds: []string{\n\t\t\t\t\"ProjectGroups-123\",\n\t\t\t\t\"ProjectGroups-321\",\n\t\t\t},\n\t\t\tPartialName: pulumi.StringRef(\"Defau\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetProjectGroupsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getProjectGroups(GetProjectGroupsArgs.builder()\n            .ids(            \n                \"ProjectGroups-123\",\n                \"ProjectGroups-321\")\n            .partialName(\"Defau\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getProjectGroups\n      Arguments:\n        ids:\n          - ProjectGroups-123\n          - ProjectGroups-321\n        partialName: Defau\n        skip: 5\n        take: 100\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getProjectGroups.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by a partial name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this project group.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getProjectGroups.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique ID for this resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by a partial name.\n"
                    },
                    "projectGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getProjectGroupsProjectGroup:getProjectGroupsProjectGroup"
                        },
                        "description": "A list of project groups that match the filter(s).\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this project group.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "projectGroups",
                    "spaceId"
                ]
            }
        },
        "octopusdeploy:index/getProjects:getProjects": {
            "description": "Provides information about existing Octopus Deploy projects.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getProjects({\n    clonedFromProjectId: \"Projects-456\",\n    ids: [\n        \"Projects-123\",\n        \"Projects-321\",\n    ],\n    isClone: true,\n    name: \"Default\",\n    partialName: \"Defau\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_projects(cloned_from_project_id=\"Projects-456\",\n    ids=[\n        \"Projects-123\",\n        \"Projects-321\",\n    ],\n    is_clone=True,\n    name=\"Default\",\n    partial_name=\"Defau\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetProjects.Invoke(new()\n    {\n        ClonedFromProjectId = \"Projects-456\",\n        Ids = new[]\n        {\n            \"Projects-123\",\n            \"Projects-321\",\n        },\n        IsClone = true,\n        Name = \"Default\",\n        PartialName = \"Defau\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetProjects(ctx, \u0026octopusdeploy.GetProjectsArgs{\n\t\t\tClonedFromProjectId: pulumi.StringRef(\"Projects-456\"),\n\t\t\tIds: []string{\n\t\t\t\t\"Projects-123\",\n\t\t\t\t\"Projects-321\",\n\t\t\t},\n\t\t\tIsClone:     pulumi.BoolRef(true),\n\t\t\tName:        pulumi.StringRef(\"Default\"),\n\t\t\tPartialName: pulumi.StringRef(\"Defau\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetProjectsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getProjects(GetProjectsArgs.builder()\n            .clonedFromProjectId(\"Projects-456\")\n            .ids(            \n                \"Projects-123\",\n                \"Projects-321\")\n            .isClone(true)\n            .name(\"Default\")\n            .partialName(\"Defau\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getProjects\n      Arguments:\n        clonedFromProjectId: Projects-456\n        ids:\n          - Projects-123\n          - Projects-321\n        isClone: true\n        name: Default\n        partialName: Defau\n        skip: 5\n        take: 100\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getProjects.\n",
                "properties": {
                    "clonedFromProjectId": {
                        "type": "string",
                        "description": "A filter to search for cloned resources by a project ID.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isClone": {
                        "type": "boolean",
                        "description": "A filter to search for cloned resources.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by a partial name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "A Space ID to filter by. Will revert what is specified on the provider if not set\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getProjects.\n",
                "properties": {
                    "clonedFromProjectId": {
                        "type": "string",
                        "description": "A filter to search for cloned resources by a project ID.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isClone": {
                        "type": "boolean",
                        "description": "A filter to search for cloned resources.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by a partial name.\n"
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getProjectsProject:getProjectsProject"
                        },
                        "description": "A list of projects that match the filter(s).\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "A Space ID to filter by. Will revert what is specified on the provider if not set\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "projects"
                ]
            }
        },
        "octopusdeploy:index/getScriptModules:getScriptModules": {
            "description": "Provides information about existing script modules.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getScriptModules({\n    ids: [\n        \"LibraryVariableSets-123\",\n        \"LibraryVariableSets-321\",\n    ],\n    partialName: \"Defau\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_script_modules(ids=[\n        \"LibraryVariableSets-123\",\n        \"LibraryVariableSets-321\",\n    ],\n    partial_name=\"Defau\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetScriptModules.Invoke(new()\n    {\n        Ids = new[]\n        {\n            \"LibraryVariableSets-123\",\n            \"LibraryVariableSets-321\",\n        },\n        PartialName = \"Defau\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetScriptModules(ctx, \u0026octopusdeploy.GetScriptModulesArgs{\n\t\t\tIds: []string{\n\t\t\t\t\"LibraryVariableSets-123\",\n\t\t\t\t\"LibraryVariableSets-321\",\n\t\t\t},\n\t\t\tPartialName: pulumi.StringRef(\"Defau\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetScriptModulesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getScriptModules(GetScriptModulesArgs.builder()\n            .ids(            \n                \"LibraryVariableSets-123\",\n                \"LibraryVariableSets-321\")\n            .partialName(\"Defau\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getScriptModules\n      Arguments:\n        ids:\n          - LibraryVariableSets-123\n          - LibraryVariableSets-321\n        partialName: Defau\n        skip: 5\n        take: 100\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getScriptModules.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by a partial name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this script module.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getScriptModules.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique ID for this resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by a partial name.\n"
                    },
                    "scriptModules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getScriptModulesScriptModule:getScriptModulesScriptModule"
                        }
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this script module.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "scriptModules",
                    "spaceId"
                ]
            }
        },
        "octopusdeploy:index/getSpace:getSpace": {
            "description": "Provides information about an existing space.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSpace.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of this resource, no more than 20 characters long\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSpace.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this space.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The unique ID for this resource.\n"
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Specifies if this space is the default space in Octopus.\n"
                    },
                    "isTaskQueueStopped": {
                        "type": "boolean",
                        "description": "Specifies the status of the task queue for this space.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource, no more than 20 characters long\n"
                    },
                    "slug": {
                        "type": "string",
                        "description": "The unique slug of this space\n"
                    },
                    "spaceManagersTeamMembers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of user IDs designated to be managers of this space.\n"
                    },
                    "spaceManagersTeams": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of team IDs designated to be managers of this space.\n"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "id",
                    "isDefault",
                    "isTaskQueueStopped",
                    "name",
                    "slug",
                    "spaceManagersTeamMembers",
                    "spaceManagersTeams"
                ]
            }
        },
        "octopusdeploy:index/getSpaces:getSpaces": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst spaces = octopusdeploy.getSpaces({\n    ids: [\n        \"Spaces-123\",\n        \"Spaces-321\",\n    ],\n    partialName: \"Defau\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nspaces = octopusdeploy.get_spaces(ids=[\n        \"Spaces-123\",\n        \"Spaces-321\",\n    ],\n    partial_name=\"Defau\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var spaces = Octopusdeploy.GetSpaces.Invoke(new()\n    {\n        Ids = new[]\n        {\n            \"Spaces-123\",\n            \"Spaces-321\",\n        },\n        PartialName = \"Defau\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetSpaces(ctx, \u0026octopusdeploy.GetSpacesArgs{\n\t\t\tIds: []string{\n\t\t\t\t\"Spaces-123\",\n\t\t\t\t\"Spaces-321\",\n\t\t\t},\n\t\t\tPartialName: pulumi.StringRef(\"Defau\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetSpacesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var spaces = OctopusdeployFunctions.getSpaces(GetSpacesArgs.builder()\n            .ids(            \n                \"Spaces-123\",\n                \"Spaces-321\")\n            .partialName(\"Defau\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  spaces:\n    fn::invoke:\n      Function: octopusdeploy:getSpaces\n      Arguments:\n        ids:\n          - Spaces-123\n          - Spaces-321\n        partialName: Defau\n        skip: 5\n        take: 100\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSpaces.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by a partial name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSpaces.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique ID for this resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by a partial name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getSpacesSpace:getSpacesSpace"
                        }
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "spaces"
                ]
            }
        },
        "octopusdeploy:index/getTagSets:getTagSets": {
            "description": "Provides information about existing tag sets.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTagSets.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTagSets.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "tagSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getTagSetsTagSet:getTagSetsTagSet"
                        },
                        "description": "A list of tag sets that match the filter(s).\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "tagSets"
                ]
            }
        },
        "octopusdeploy:index/getTenantProjects:getTenantProjects": {
            "description": "Provides information about existing tenants.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTenantProjects.\n",
                "properties": {
                    "environmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "projectIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this tenant projects.\n"
                    },
                    "tenantIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTenantProjects.\n",
                "properties": {
                    "environmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "projectIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this tenant projects.\n"
                    },
                    "tenantIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "tenantProjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getTenantProjectsTenantProject:getTenantProjectsTenantProject"
                        },
                        "description": "A list of related tenants, projects and environments that match the filter(s).\n"
                    }
                },
                "type": "object",
                "required": [
                    "spaceId",
                    "tenantProjects",
                    "id"
                ]
            }
        },
        "octopusdeploy:index/getTenants:getTenants": {
            "description": "Provides information about existing tenants.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTenants.\n",
                "properties": {
                    "clonedFromTenantId": {
                        "type": "string",
                        "description": "A filter to search for a cloned tenant by its ID.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isClone": {
                        "type": "boolean",
                        "description": "A filter to search for cloned resources.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by a partial name.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "A filter to search by a project ID.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this tenants.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tags.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTenants.\n",
                "properties": {
                    "clonedFromTenantId": {
                        "type": "string",
                        "description": "A filter to search for a cloned tenant by its ID.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The unique ID for this resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isClone": {
                        "type": "boolean",
                        "description": "A filter to search for cloned resources.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by a partial name.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "A filter to search by a project ID.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this tenants.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tags.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getTenantsTenant:getTenantsTenant"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "spaceId",
                    "tenants"
                ]
            }
        },
        "octopusdeploy:index/getVariables:getVariables": {
            "description": "Provides information about existing variables.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getVariables({});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_variables()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetVariables.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopus/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetVariables(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetVariablesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getVariables();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getVariables\n      Arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getVariables.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of variable to find.\n"
                    },
                    "ownerId": {
                        "type": "string",
                        "description": "Owner ID for the variable to find.\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getVariablesScope:getVariablesScope"
                        },
                        "description": "As variable names can appear more than once under different scopes, a VariableScope must also be provided\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this variable.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "ownerId",
                    "scopes"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVariables.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this variable.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The identifier of the variable to find.\n"
                    },
                    "isEditable": {
                        "type": "boolean",
                        "description": "Indicates whether or not this variable is considered editable.\n"
                    },
                    "isSensitive": {
                        "type": "boolean",
                        "description": "Indicates whether or not this resource is considered sensitive and should be kept secret.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of variable to find.\n"
                    },
                    "ownerId": {
                        "type": "string",
                        "description": "Owner ID for the variable to find.\n"
                    },
                    "prompts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getVariablesPrompt:getVariablesPrompt"
                        }
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getVariablesScope:getVariablesScope"
                        },
                        "description": "As variable names can appear more than once under different scopes, a VariableScope must also be provided\n"
                    },
                    "sensitiveValue": {
                        "type": "string",
                        "secret": true
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this variable.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of variable represented by this resource. Valid types are `AmazonWebServicesAccount`, `AzureAccount`, `GoogleCloudAccount`, `UsernamePasswordAccount`, `Certificate`, `Sensitive`, `String`, `WorkerPool`.\n"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "id",
                    "isEditable",
                    "isSensitive",
                    "name",
                    "ownerId",
                    "prompts",
                    "scopes",
                    "sensitiveValue",
                    "spaceId",
                    "type",
                    "value"
                ]
            }
        }
    }
}